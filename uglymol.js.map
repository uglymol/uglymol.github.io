{"version":3,"file":null,"sources":["src/unitcell.js","src/model.js","src/isosurface.js","src/elmap.js","src/lines.js","src/viewer.js","src/reciprocal.js"],"sourcesContent":["// @flow\n\nexport class UnitCell {\n  /*::\n  parameters: number[]\n  orth: number[]\n  frac: number[]\n  */\n  // eslint-disable-next-line max-params\n  constructor(a /*:number*/, b /*:number*/, c /*:number*/,\n              alpha /*:number*/, beta /*:number*/, gamma /*:number*/) {\n    if (a <= 0 || b <= 0 || c <= 0 || alpha <= 0 || beta <= 0 || gamma <= 0) {\n      throw Error('Zero or negative unit cell parameter(s).');\n    }\n    this.parameters = [a, b, c, alpha, beta, gamma];\n    const deg2rad = Math.PI / 180.0;\n    const cos_alpha = Math.cos(deg2rad * alpha);\n    const cos_beta = Math.cos(deg2rad * beta);\n    const cos_gamma = Math.cos(deg2rad * gamma);\n    const sin_alpha = Math.sin(deg2rad * alpha);\n    const sin_beta = Math.sin(deg2rad * beta);\n    const sin_gamma = Math.sin(deg2rad * gamma);\n    if (sin_alpha === 0 || sin_beta === 0 || sin_gamma === 0) {\n      throw Error('Impossible angle - N*180deg.');\n    }\n    const cos_alpha_star_sin_beta = (cos_beta * cos_gamma - cos_alpha) /\n                                    sin_gamma;\n    const cos_alpha_star = cos_alpha_star_sin_beta / sin_beta;\n    const s1rca2 = Math.sqrt(1.0 - cos_alpha_star * cos_alpha_star);\n    // The orthogonalization matrix we use is described in ITfC B p.262:\n    // \"An alternative mode of orthogonalization, used by the Protein\n    // Data Bank and most programs, is to align the a1 axis of the unit\n    // cell with the Cartesian X_1 axis, and to align the a*_3 axis with the\n    // Cartesian X_3 axis.\"\n    //\n    // Zeros in the matrices below are kept to make matrix multiplication\n    // faster: they make extract_block() 2x (!) faster on V8 4.5.103,\n    // no difference on FF 50.\n    /* eslint-disable no-multi-spaces, comma-spacing */\n    this.orth = [a,   b * cos_gamma,  c * cos_beta,\n                 0.0, b * sin_gamma, -c * cos_alpha_star_sin_beta,\n                 0.0, 0.0          ,  c * sin_beta * s1rca2];\n    // based on xtal.js which is based on cctbx.uctbx\n    this.frac = [\n      1.0 / a,\n      -cos_gamma / (sin_gamma * a),\n      -(cos_gamma * cos_alpha_star_sin_beta + cos_beta * sin_gamma) /\n          (sin_beta * s1rca2 * sin_gamma * a),\n      0.0,\n      1.0 / (sin_gamma * b),\n      cos_alpha_star / (s1rca2 * sin_gamma * b),\n      0.0,\n      0.0,\n      1.0 / (sin_beta * s1rca2 * c),\n    ];\n  }\n\n  fractionalize(xyz /*:[number,number,number]*/) {\n    return multiply(xyz, this.frac);\n  }\n\n  orthogonalize(xyz /*:[number,number,number]*/) {\n    return multiply(xyz, this.orth);\n  }\n}\n\n// This function is only used with matrices frac and orth, which have 3 zeros.\n// We skip these elements, but it doesn't affect performance (on FF50 and V8).\nfunction multiply(xyz, mat) {\n  return [mat[0] * xyz[0]  + mat[1] * xyz[1]  + mat[2] * xyz[2],\n        /*mat[3] * xyz[0]*/+ mat[4] * xyz[1]  + mat[5] * xyz[2],\n        /*mat[6] * xyz[0]  + mat[7] * xyz[1]*/+ mat[8] * xyz[2]];\n}\n\n","// @flow\n\nimport { UnitCell } from './unitcell.js';\n\nconst AMINO_ACIDS = [\n  'ALA', 'ARG', 'ASN', 'ASP', 'CYS', 'GLN', 'GLU', 'GLY', 'HIS', 'ILE', 'LEU',\n  'LYS', 'MET', 'MSE', 'PHE', 'PRO', 'SER', 'THR', 'TRP', 'TYR', 'VAL', 'UNK',\n];\nconst NUCLEIC_ACIDS = [\n  'DA', 'DC', 'DG', 'DT', 'A', 'C', 'G', 'U', 'rA', 'rC', 'rG', 'rU',\n  'Ar', 'Cr', 'Gr', 'Ur',\n];\n\nconst NOT_LIGANDS = ['HOH'].concat(AMINO_ACIDS, NUCLEIC_ACIDS);\n\nexport class Model {\n  /*::\n  atoms: Atom[]\n  unit_cell: ?UnitCell\n  space_group: null\n  has_hydrogens: boolean\n  lower_bound: [number, number, number]\n  upper_bound: [number, number, number]\n  residue_map: ?{[id:string]: Atom[]}\n  cubes: ?Cubicles\n  */\n  constructor() {\n    this.atoms = [];\n    this.unit_cell = null;\n    this.space_group = null;\n    this.has_hydrogens = false;\n    this.lower_bound = [0, 0, 0];\n    this.upper_bound = [0, 0, 0];\n    this.residue_map = null;\n    this.cubes = null;\n  }\n\n  from_pdb(pdb_string /*:string*/) {\n    const lines = pdb_string.split('\\n');\n    let chain_index = 0;  // will be ++'ed for the first atom\n    let last_chain = null;\n    let atom_i_seq = 0;\n    //var last_atom = null;\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      const rec_type = line.substring(0, 6);\n      //+ is temporary: https://gitlab.com/Rich-Harris/buble/issues/159\n      if (rec_type === 'ATOM '+' ' || rec_type === 'HETATM') {\n        let new_atom = new Atom();\n        new_atom.from_pdb_line(line);\n        new_atom.i_seq = atom_i_seq++;\n        if (!this.has_hydrogens && new_atom.element === 'H') {\n          this.has_hydrogens = true;\n        }\n        if (new_atom.chain !== last_chain) {\n          chain_index++;\n        }\n        new_atom.chain_index = chain_index;\n        last_chain = new_atom.chain;\n        //last_atom = new_atom;\n        this.atoms.push(new_atom);\n      } else if (rec_type === 'ANISOU') {\n        //last_atom.set_uij_from_anisou(line);\n      } else if (rec_type === 'CRYST1') {\n        const a = parseFloat(line.substring(6, 15));\n        const b = parseFloat(line.substring(15, 24));\n        const c = parseFloat(line.substring(24, 33));\n        const alpha = parseFloat(line.substring(33, 40));\n        const beta = parseFloat(line.substring(40, 47));\n        const gamma = parseFloat(line.substring(47, 54));\n        //var sg_symbol = line.substring(55, 66);\n        this.unit_cell = new UnitCell(a, b, c, alpha, beta, gamma);\n      } else if (rec_type.substring(0, 3) === 'TER') {\n        last_chain = null;\n      }\n    }\n    if (this.atoms.length === 0) {\n      throw Error('No atom records found.');\n    }\n    this.calculate_bounds();\n    this.calculate_connectivity();\n  }\n\n  calculate_bounds() {\n    let lower = this.lower_bound = [Infinity, Infinity, Infinity];\n    let upper = this.upper_bound = [-Infinity, -Infinity, -Infinity];\n    for (let i = 0; i < this.atoms.length; i++) {\n      const atom = this.atoms[i];\n      for (let j = 0; j < 3; j++) {\n        const v = atom.xyz[j];\n        if (v < lower[j]) lower[j] = v;\n        if (v > upper[j]) upper[j] = v;\n      }\n    }\n    // with a margin\n    for (let k = 0; k < 3; ++k) {\n      lower[k] -= 0.001;\n      upper[k] += 0.001;\n    }\n  }\n\n  next_residue(atom /*:?Atom*/, backward /*:?boolean*/) {\n    const len = this.atoms.length;\n    const start = (atom ? atom.i_seq : 0) + len;  // +len to avoid idx<0 below\n    for (let i = (atom ? 1 : 0); i < len; i++) {\n      const idx = (start + (backward ? -i : i)) % len;\n      const a = this.atoms[idx];\n      if (!a.is_main_conformer()) continue;\n      if ((a.name === 'CA' && a.element === 'C') || a.name === 'P') {\n        return a;\n      }\n    }\n  }\n\n  extract_trace() {\n    let segments = [];\n    let current_segment = [];\n    let last_atom = null;\n    for (let i = 0; i < this.atoms.length; i++) {\n      const atom = this.atoms[i];\n      if (atom.altloc !== '' && atom.altloc !== 'A') continue;\n      if ((atom.name === 'CA' && atom.element === 'C') || atom.name === 'P') {\n        let start_new = true;\n        if (last_atom !== null && last_atom.chain_index === atom.chain_index) {\n          const dxyz2 = atom.distance_sq(last_atom);\n          if ((atom.name === 'CA' && dxyz2 <= 5.5*5.5) ||\n              (atom.name === 'P' && dxyz2 < 7.5*7.5)) {\n            current_segment.push(atom);\n            start_new = false;\n          }\n        }\n        if (start_new) {\n          if (current_segment.length > 2) {\n            segments.push(current_segment);\n          }\n          current_segment = [atom];\n        }\n        last_atom = atom;\n      }\n    }\n    if (current_segment.length > 2) {\n      segments.push(current_segment);\n    }\n    //console.log(segments.length + \" segments extracted\");\n    return segments;\n  }\n\n  get_residues() {\n    if (this.residue_map != null) return this.residue_map;\n    let residues = {};\n    for (let i = 0; i < this.atoms.length; i++) {\n      const atom = this.atoms[i];\n      const resid = atom.resid();\n      const reslist = residues[resid];\n      if (reslist === undefined) {\n        residues[resid] = [atom];\n      } else {\n        reslist.push(atom);\n      }\n    }\n    this.residue_map = residues;\n    return residues;\n  }\n\n  // tangent vector to the ribbon representation\n  calculate_tangent_vector(residue /*:Atom[]*/) {\n    let a1 = null;\n    let a2 = null;\n    // it may be too simplistic\n    const peptide = (residue[0].resname.length === 3);\n    const name1 = peptide ? 'C' : 'C2\\'';\n    const name2 = peptide ? 'O' : 'O4\\'';\n    for (let i = 0; i < residue.length; i++) {\n      const atom = residue[i];\n      if (!atom.is_main_conformer()) continue;\n      if (atom.name === name1) {\n        a1 = atom.xyz;\n      } else if (atom.name === name2) {\n        a2 = atom.xyz;\n      }\n    }\n    if (a1 === null || a2 === null) return [0, 0, 1]; // arbitrary value\n    const d = [a1[0]-a2[0], a1[1]-a2[1], a1[2]-a2[2]];\n    const len = Math.sqrt(d[0]*d[0] + d[1]*d[1] + d[2]*d[2]);\n    return [d[0]/len, d[1]/len, d[2]/len];\n  }\n\n  get_center() {\n    let xsum = 0, ysum = 0, zsum = 0;  // eslint-disable-line\n    const n_atoms = this.atoms.length;\n    for (let i = 0; i < n_atoms; i++) {\n      const xyz = this.atoms[i].xyz;\n      xsum += xyz[0];\n      ysum += xyz[1];\n      zsum += xyz[2];\n    }\n    return [xsum / n_atoms, ysum / n_atoms, zsum / n_atoms];\n  }\n\n  calculate_connectivity() {\n    const atoms = this.atoms;\n    const cubes = new Cubicles(atoms, 3.0, this.lower_bound, this.upper_bound);\n    //let cnt = 0;\n    for (let i = 0; i < cubes.boxes.length; i++) {\n      const box = cubes.boxes[i];\n      if (box.length === 0) continue;\n      const nearby_atoms = cubes.get_nearby_atoms(i);\n      for (let a = 0; a < box.length; a++) {\n        const atom_id = box[a];\n        for (let k = 0; k < nearby_atoms.length; k++) {\n          const j = nearby_atoms[k];\n          if (j > atom_id && atoms[atom_id].is_bonded_to(atoms[j])) {\n            atoms[atom_id].bonds.push(j);\n            atoms[j].bonds.push(atom_id);\n            //cnt++;\n          }\n        }\n      }\n    }\n    //console.log(atoms.length + ' atoms, ' + cnt + ' bonds.');\n    this.cubes = cubes;\n  }\n\n  get_nearest_atom(x /*:number*/, y /*:number*/, z /*:number*/,\n                   atom_name /*:string*/) {\n    const cubes = this.cubes;\n    if (cubes == null) throw Error('Missing Cubicles');\n    const box_id = cubes.find_box_id(x, y, z);\n    const indices = cubes.get_nearby_atoms(box_id);\n    let nearest = null;\n    let min_d2 = Infinity;\n    for (let i = 0; i < indices.length; i++) {\n      const atom = this.atoms[indices[i]];\n      if (atom_name !== undefined && atom_name !== null &&\n          atom_name !== atom.name) continue;\n      const dx = atom.xyz[0] - x;\n      const dy = atom.xyz[1] - y;\n      const dz = atom.xyz[2] - z;\n      const d2 = dx*dx + dy*dy + dz*dz;\n      if (d2 < min_d2) {\n        nearest = atom;\n        min_d2 = d2;\n      }\n    }\n    return nearest;\n  }\n}\n\n// Single atom and associated labels\nclass Atom {\n  /*::\n  hetero: boolean\n  name: string\n  altloc: string\n  resname: string\n  chain: string\n  chain_index: ?number\n  resseq: number\n  icode: ?string\n  xyz: [number, number, number]\n  occ: number\n  b: number\n  element: string\n  i_seq: ?number\n  is_ligand: ?boolean\n  bonds: number[];\n  */\n  constructor() {\n    this.hetero = false;\n    this.name = '';\n    this.altloc = '';\n    this.resname = '';\n    this.chain = '';\n    this.chain_index = null;\n    this.resseq = -1;\n    this.icode = null;\n    this.xyz = [0, 0, 0];\n    this.occ = 1.0;\n    this.b = 0;\n    this.element = '';\n    this.i_seq = null;\n    this.is_ligand = null;\n    this.bonds = [];\n  }\n\n  // http://www.wwpdb.org/documentation/format33/sect9.html#ATOM\n  from_pdb_line(pdb_line /*:string*/) {\n    if (pdb_line.length < 66) {\n      throw Error('ATOM or HETATM record is too short: ' + pdb_line);\n    }\n    const rec_type = pdb_line.substring(0, 6);\n    if (rec_type === 'HETATM') {\n      this.hetero = true;\n    } else if (rec_type !== 'ATOM '+' ') {\n      throw Error('Wrong record type: ' + rec_type);\n    }\n    this.name = pdb_line.substring(12, 16).trim();\n    this.altloc = pdb_line.substring(16, 17).trim();\n    this.resname = pdb_line.substring(17, 20).trim();\n    this.chain = pdb_line.substring(20, 22).trim();\n    this.resseq = parseInt(pdb_line.substring(22, 26), 10);\n    this.icode = pdb_line.substring(26, 27).trim();\n    const x = parseFloat(pdb_line.substring(30, 38));\n    const y = parseFloat(pdb_line.substring(38, 46));\n    const z = parseFloat(pdb_line.substring(46, 54));\n    this.xyz = [x, y, z];\n    this.occ = parseFloat(pdb_line.substring(54, 60));\n    this.b = parseFloat(pdb_line.substring(60, 66));\n    if (pdb_line.length >= 78) {\n      this.element = pdb_line.substring(76, 78).trim().toUpperCase();\n    }\n    //if (pdb_line.length >= 80) {\n    //  this.charge = pdb_line.substring(78, 80).trim();\n    //}\n    this.is_ligand = (NOT_LIGANDS.indexOf(this.resname) === -1);\n  }\n\n  b_as_u() {\n    // B = 8 * pi^2 * u^2\n    return Math.sqrt(this.b / (8 * 3.14159 * 3.14159));\n  }\n\n  distance_sq(other /*:Atom*/) {\n    const dx = this.xyz[0] - other.xyz[0];\n    const dy = this.xyz[1] - other.xyz[1];\n    const dz = this.xyz[2] - other.xyz[2];\n    return dx*dx + dy*dy + dz*dz;\n  }\n\n  distance(other /*:Atom*/) {\n    return Math.sqrt(this.distance_sq(other));\n  }\n\n  midpoint(other /*:Atom*/) {\n    return [(this.xyz[0] + other.xyz[0]) / 2,\n            (this.xyz[1] + other.xyz[1]) / 2,\n            (this.xyz[2] + other.xyz[2]) / 2];\n  }\n\n  is_hydrogen() {\n    return this.element === 'H' || this.element === 'D';\n  }\n\n  is_s_or_p() {\n    return this.element === 'S' || this.element === 'P';\n  }\n\n  is_ion() {\n    return this.element === this.resname;\n  }\n\n  is_water() {\n    return this.resname === 'HOH';\n  }\n\n  is_same_residue(other /*:Atom*/, ignore_altloc /*:?boolean*/) {\n    return other.resseq === this.resseq && other.icode === this.icode &&\n           other.chain === this.chain && other.resname === this.resname &&\n           (ignore_altloc || other.altloc === this.altloc);\n  }\n\n  is_same_conformer(other /*:Atom*/) {\n    return this.altloc === '' || other.altloc === '' ||\n           this.altloc === other.altloc;\n  }\n\n  is_main_conformer() {\n    return this.altloc === '' || this.altloc === 'A';\n  }\n\n  is_bonded_to(other /*:Atom*/) {\n    const MAX_DIST_SQ = 1.99 * 1.99;\n    const MAX_DIST_H_SQ = 1.3 * 1.3;\n    const MAX_DIST_SP_SQ = 2.2 * 2.2;\n\n    if (!this.is_same_conformer(other)) return false;\n    if (this.element === 'H' && other.element === 'H') return false;\n    const dxyz2 = this.distance_sq(other);\n    if (dxyz2 > MAX_DIST_SP_SQ) return false;\n    if (this.element === 'H' || other.element === 'H') {\n      return dxyz2 <= MAX_DIST_H_SQ;\n    }\n    return dxyz2 <= MAX_DIST_SQ || this.is_s_or_p() || other.is_s_or_p();\n  }\n\n  resid() {\n    return this.resseq + '/' + this.chain;\n  }\n\n  long_label() {\n    const a = this;\n    return a.name + ' /' + a.resseq + ' ' + a.resname + '/' + a.chain +\n           ' - occ: ' + a.occ.toFixed(2) + ' bf: ' + a.b.toFixed(2) +\n           ' ele: ' + a.element + ' pos: (' + a.xyz[0].toFixed(2) + ',' +\n           a.xyz[1].toFixed(2) + ',' + a.xyz[2].toFixed(2) + ')';\n  }\n\n  short_label() {\n    const a = this;\n    return a.name + ' /' + a.resseq + ' ' + a.resname + '/' + a.chain;\n  }\n}\n\n\n// Partition atoms into boxes for quick neighbor searching.\nclass Cubicles {\n  /*::\n  boxes: number[][]\n  box_length: number\n  lower_bound: [number, number, number]\n  upper_bound: [number, number, number]\n  xdim: number\n  ydim: number\n  zdim: number\n  */\n  constructor(atoms, box_length, lower_bound, upper_bound) {\n    this.boxes = [];\n    this.box_length = box_length;\n    this.lower_bound = lower_bound;\n    this.upper_bound = upper_bound;\n    this.xdim = Math.ceil((upper_bound[0] - lower_bound[0]) / box_length);\n    this.ydim = Math.ceil((upper_bound[1] - lower_bound[1]) / box_length);\n    this.zdim = Math.ceil((upper_bound[2] - lower_bound[2]) / box_length);\n    //console.log(\"Cubicles: \" + this.xdim + \"x\" + this.ydim + \"x\" + this.zdim);\n    const nxyz = this.xdim * this.ydim * this.zdim;\n    for (let j = 0; j < nxyz; j++) {\n      this.boxes.push([]);\n    }\n    for (let i = 0; i < atoms.length; i++) {\n      const xyz = atoms[i].xyz;\n      const box_id = this.find_box_id(xyz[0], xyz[1], xyz[2]);\n      if (box_id === null) {\n        throw Error('wrong cubicle');\n      }\n      this.boxes[box_id].push(i);\n    }\n  }\n\n  find_box_id(x, y, z) {\n    const xstep = Math.floor((x - this.lower_bound[0]) / this.box_length);\n    const ystep = Math.floor((y - this.lower_bound[1]) / this.box_length);\n    const zstep = Math.floor((z - this.lower_bound[2]) / this.box_length);\n    const box_id = (zstep * this.ydim + ystep) * this.xdim + xstep;\n    if (box_id < 0 || box_id >= this.boxes.length) throw Error('Ups!');\n    return box_id;\n  }\n\n  get_nearby_atoms(box_id) {\n    let indices = [];\n    const xydim = this.xdim * this.ydim;\n    const uv = Math.max(box_id % xydim, 0);\n    const u = Math.max(uv % this.xdim, 0);\n    const v = Math.floor(uv / this.xdim);\n    const w = Math.floor(box_id / xydim);\n    console.assert((w * xydim) + (v * this.xdim) + u === box_id);\n    for (let iu = u-1; iu <= u+1; iu++) {\n      if (iu < 0 || iu >= this.xdim) continue;\n      for (let iv = v-1; iv <= v+1; iv++) {\n        if (iv < 0 || iv >= this.ydim) continue;\n        for (let iw = w-1; iw <= w+1; iw++) {\n          if (iw < 0 || iw >= this.zdim) continue;\n          const other_box_id = (iw * xydim) + (iv * this.xdim) + iu;\n          if (other_box_id >= this.boxes.length || other_box_id < 0) {\n            throw Error('Box out of bounds: ID ' + other_box_id);\n          }\n          const box = this.boxes[other_box_id];\n          for (let i = 0; i < box.length; i++) {\n            indices.push(box[i]);\n          }\n        }\n      }\n    }\n    return indices;\n  }\n}\n\n","// @flow\n/*:: type Num3 = [number, number, number] */\n\nexport class Block {\n  /*::\n  _points: ?Num3[]\n  _values: ?number[]\n  _size: Num3\n  */\n  constructor() {\n    this._points = null;\n    this._values = null;\n    this._size = [0, 0, 0];\n  }\n\n  set(points /*:Num3[]*/, values/*:number[]*/, size/*:Num3*/) {\n    if (size[0] <= 0 || size[1] <= 0 || size[2] <= 0) {\n      throw Error('Grid dimensions are zero along at least one edge');\n    }\n    const len = size[0] * size[1] * size[2];\n    if (values.length !== len || points.length !== len) {\n      throw Error('isosurface: array size mismatch');\n    }\n\n    this._points = points;\n    this._values = values;\n    this._size = size;\n  }\n\n  clear() {\n    this._points = null;\n    this._values = null;\n  }\n\n  empty() /*:boolean*/ {\n    return this._values === null;\n  }\n\n  isosurface(isolevel /*: number*/, method /*: string*/) {\n    //if (method === 'marching tetrahedra') {\n    //  return marchingTetrahedra(block, isolevel);\n    //}\n    return marchingCubes(this._size, this._values, this._points,\n                         isolevel, method);\n  }\n}\n\n/* eslint comma-spacing: 0, no-multi-spaces: 0 */\n\nconst edgeTable = new Int32Array([\n  0x0  , 0x0  , 0x202, 0x302, 0x406, 0x406, 0x604, 0x704,\n  0x804, 0x805, 0xa06, 0xa06, 0xc0a, 0xd03, 0xe08, 0xf00,\n  0x90 , 0x98 , 0x292, 0x292, 0x496, 0x49e, 0x694, 0x694,\n  0x894, 0x894, 0xa96, 0xa96, 0xc9a, 0xc92, 0xe91, 0xe90,\n  0x230, 0x230, 0x33 , 0x13a, 0x636, 0x636, 0x434, 0x43c,\n  0xa34, 0xa35, 0x837, 0x936, 0xe3a, 0xf32, 0xc31, 0xd30,\n  0x2a0, 0x2a8, 0xa3 , 0xaa , 0x6a6, 0x6af, 0x5a4, 0x4ac,\n  0xaa4, 0xaa4, 0x9a6, 0x8a6, 0xfaa, 0xea3, 0xca1, 0xca0,\n  0x460, 0x460, 0x662, 0x762, 0x66 , 0x66 , 0x265, 0x364,\n  0xc64, 0xc65, 0xe66, 0xe66, 0x86a, 0x863, 0xa69, 0xa60,\n  0x4f0, 0x4f8, 0x6f2, 0x6f2, 0xf6 , 0xfe , 0x2f5, 0x2fc,\n  0xcf4, 0xcf4, 0xef6, 0xef6, 0x8fa, 0x8f3, 0xaf9, 0xaf0,\n  0x650, 0x650, 0x453, 0x552, 0x256, 0x256, 0x54 , 0x154,\n  0xe54, 0xf54, 0xc57, 0xd56, 0xa5a, 0xb52, 0x859, 0x950,\n  0x7c0, 0x6c1, 0x5c2, 0x4c2, 0x3c6, 0x2ce, 0xc5 , 0xc4 ,\n  0xfc4, 0xec5, 0xdc6, 0xcc6, 0xbca, 0xac2, 0x8c1, 0x8c0,\n  0x8c0, 0x8c0, 0xac2, 0xbc2, 0xcc6, 0xcc6, 0xec4, 0xfcc,\n  0xc4 , 0xc5 , 0x2c6, 0x3c6, 0x4c2, 0x5c2, 0x6c1, 0x7c0,\n  0x950, 0x859, 0xb52, 0xa5a, 0xd56, 0xc57, 0xe54, 0xe5c,\n  0x154, 0x54 , 0x25e, 0x256, 0x552, 0x453, 0x658, 0x650,\n  0xaf0, 0xaf0, 0x8f3, 0x8fa, 0xef6, 0xef6, 0xcf4, 0xcfc,\n  0x2f4, 0x3f5, 0xff , 0x1f6, 0x6f2, 0x6f3, 0x4f9, 0x5f0,\n  0xa60, 0xa69, 0x863, 0x86a, 0xe66, 0xe67, 0xd65, 0xc6c,\n  0x364, 0x265, 0x166, 0x66 , 0x76a, 0x663, 0x460, 0x460,\n  0xca0, 0xca0, 0xea2, 0xfa2, 0x8a6, 0x8a6, 0xaa4, 0xba4,\n  0x4ac, 0x5a4, 0x6ae, 0x7a6, 0xaa , 0xa3 , 0x2a8, 0x2a0,\n  0xd30, 0xc31, 0xf32, 0xe3a, 0x936, 0x837, 0xb35, 0xa34,\n  0x43c, 0x434, 0x73e, 0x636, 0x13a, 0x33 , 0x339, 0x230,\n  0xe90, 0xe90, 0xc92, 0xc9a, 0xa96, 0xa96, 0x894, 0x89c,\n  0x694, 0x695, 0x49f, 0x496, 0x292, 0x392, 0x98 , 0x90 ,\n  0xf00, 0xe08, 0xd03, 0xc0a, 0xa06, 0xa0e, 0x805, 0x804,\n  0x704, 0x604, 0x506, 0x406, 0x302, 0x202, 0x0  , 0x0]);\n\n\n// generated from classical triTable by tools/isolut.py\nconst segTable = [\n  [],\n  [],\n  [1, 9],\n  [1, 8, 1, 9],\n  [2, 10, 10, 1],\n  [2, 10, 10, 1],\n  [9, 2, 2, 10, 10, 9],\n  [2, 8, 2, 10, 10, 8, 10, 9],\n  [11, 2],\n  [0, 11, 11, 2],\n  [1, 9, 11, 2],\n  [1, 11, 11, 2, 1, 9, 9, 11],\n  [3, 10, 10, 1, 11, 10],\n  [0, 10, 10, 1, 8, 10, 11, 10],\n  [3, 9, 11, 9, 11, 10, 10, 9],\n  [8, 10, 10, 9, 11, 10],\n  [4, 7],\n  [4, 3, 4, 7],\n  [1, 9, 4, 7],\n  [4, 1, 1, 9, 4, 7, 7, 1],\n  [2, 10, 10, 1, 4, 7],\n  [3, 4, 4, 7, 2, 10, 10, 1],\n  [9, 2, 2, 10, 10, 9, 4, 7],\n  [2, 10, 10, 9, 9, 2, 9, 7, 7, 2, 4, 7],\n  [4, 7, 11, 2],\n  [11, 4, 4, 7, 11, 2, 2, 4],\n  [1, 9, 4, 7, 11, 2],\n  [4, 7, 11, 4, 11, 9, 11, 2, 2, 9, 1, 9],\n  [3, 10, 10, 1, 11, 10, 4, 7],\n  [1, 11, 11, 10, 10, 1, 1, 4, 4, 11, 4, 7],\n  [4, 7, 0, 11, 11, 9, 11, 10, 10, 9],\n  [4, 7, 11, 4, 11, 9, 11, 10, 10, 9],\n  [9, 5, 5, 4],\n  [9, 5, 5, 4],\n  [0, 5, 5, 4, 1, 5],\n  [8, 5, 5, 4, 3, 5, 1, 5],\n  [2, 10, 10, 1, 9, 5, 5, 4],\n  [2, 10, 10, 1, 9, 5, 5, 4],\n  [5, 2, 2, 10, 10, 5, 5, 4, 4, 2],\n  [2, 10, 10, 5, 5, 2, 5, 3, 5, 4, 4, 3],\n  [9, 5, 5, 4, 11, 2],\n  [0, 11, 11, 2, 9, 5, 5, 4],\n  [0, 5, 5, 4, 1, 5, 11, 2],\n  [1, 5, 5, 2, 5, 8, 8, 2, 11, 2, 5, 4],\n  [10, 3, 11, 10, 10, 1, 9, 5, 5, 4],\n  [9, 5, 5, 4, 8, 1, 8, 10, 10, 1, 11, 10],\n  [5, 4, 0, 5, 0, 11, 11, 5, 11, 10, 10, 5],\n  [5, 4, 8, 5, 8, 10, 10, 5, 11, 10],\n  [9, 7, 5, 7, 9, 5],\n  [9, 3, 9, 5, 5, 3, 5, 7],\n  [0, 7, 1, 7, 1, 5, 5, 7],\n  [1, 5, 5, 3, 5, 7],\n  [9, 7, 9, 5, 5, 7, 10, 1, 2, 10],\n  [10, 1, 2, 10, 9, 5, 5, 0, 5, 3, 5, 7],\n  [2, 8, 2, 5, 5, 8, 5, 7, 10, 5, 2, 10],\n  [2, 10, 10, 5, 5, 2, 5, 3, 5, 7],\n  [7, 9, 9, 5, 5, 7, 11, 2],\n  [9, 5, 5, 7, 7, 9, 7, 2, 2, 9, 11, 2],\n  [11, 2, 1, 8, 1, 7, 1, 5, 5, 7],\n  [11, 2, 1, 11, 1, 7, 1, 5, 5, 7],\n  [9, 5, 5, 8, 5, 7, 10, 1, 3, 10, 11, 10],\n  [5, 7, 7, 0, 0, 5, 9, 5, 11, 0, 0, 10, 10, 1, 11, 10],\n  [11, 10, 10, 0, 0, 11, 10, 5, 5, 0, 0, 7, 5, 7],\n  [11, 10, 10, 5, 5, 11, 5, 7],\n  [10, 6, 6, 5, 5, 10],\n  [5, 10, 10, 6, 6, 5],\n  [1, 9, 5, 10, 10, 6, 6, 5],\n  [1, 8, 1, 9, 5, 10, 10, 6, 6, 5],\n  [1, 6, 6, 5, 5, 1, 2, 6],\n  [1, 6, 6, 5, 5, 1, 2, 6],\n  [9, 6, 6, 5, 5, 9, 0, 6, 2, 6],\n  [5, 9, 8, 5, 8, 2, 2, 5, 2, 6, 6, 5],\n  [11, 2, 10, 6, 6, 5, 5, 10],\n  [11, 0, 11, 2, 10, 6, 6, 5, 5, 10],\n  [1, 9, 11, 2, 5, 10, 10, 6, 6, 5],\n  [5, 10, 10, 6, 6, 5, 1, 9, 9, 2, 9, 11, 11, 2],\n  [6, 3, 11, 6, 6, 5, 5, 3, 5, 1],\n  [11, 0, 11, 5, 5, 0, 5, 1, 11, 6, 6, 5],\n  [11, 6, 6, 3, 6, 0, 6, 5, 5, 0, 5, 9],\n  [6, 5, 5, 9, 9, 6, 9, 11, 11, 6],\n  [5, 10, 10, 6, 6, 5, 4, 7],\n  [4, 3, 4, 7, 6, 5, 5, 10, 10, 6],\n  [1, 9, 5, 10, 10, 6, 6, 5, 4, 7],\n  [10, 6, 6, 5, 5, 10, 1, 9, 9, 7, 7, 1, 4, 7],\n  [6, 1, 2, 6, 6, 5, 5, 1, 4, 7],\n  [2, 5, 5, 1, 2, 6, 6, 5, 4, 3, 4, 7],\n  [4, 7, 0, 5, 5, 9, 0, 6, 6, 5, 2, 6],\n  [3, 9, 9, 7, 4, 7, 2, 9, 5, 9, 9, 6, 6, 5, 2, 6],\n  [11, 2, 4, 7, 10, 6, 6, 5, 5, 10],\n  [5, 10, 10, 6, 6, 5, 4, 7, 7, 2, 2, 4, 11, 2],\n  [1, 9, 4, 7, 11, 2, 5, 10, 10, 6, 6, 5],\n  [9, 2, 1, 9, 9, 11, 11, 2, 4, 11, 4, 7, 5, 10, 10, 6, 6, 5],\n  [4, 7, 11, 5, 5, 3, 5, 1, 11, 6, 6, 5],\n  [5, 1, 1, 11, 11, 5, 11, 6, 6, 5, 0, 11, 11, 4, 4, 7],\n  [0, 5, 5, 9, 0, 6, 6, 5, 3, 6, 11, 6, 4, 7],\n  [6, 5, 5, 9, 9, 6, 9, 11, 11, 6, 4, 7, 7, 9],\n  [10, 4, 9, 10, 6, 4, 10, 6],\n  [4, 10, 10, 6, 6, 4, 9, 10],\n  [10, 0, 1, 10, 10, 6, 6, 0, 6, 4],\n  [1, 8, 1, 6, 6, 8, 6, 4, 1, 10, 10, 6],\n  [1, 4, 9, 1, 2, 4, 2, 6, 6, 4],\n  [2, 9, 9, 1, 2, 4, 2, 6, 6, 4],\n  [2, 4, 2, 6, 6, 4],\n  [2, 8, 2, 4, 2, 6, 6, 4],\n  [10, 4, 9, 10, 10, 6, 6, 4, 11, 2],\n  [8, 2, 11, 2, 9, 10, 10, 4, 10, 6, 6, 4],\n  [11, 2, 1, 6, 6, 0, 6, 4, 1, 10, 10, 6],\n  [6, 4, 4, 1, 1, 6, 1, 10, 10, 6, 8, 1, 1, 11, 11, 2],\n  [9, 6, 6, 4, 9, 3, 3, 6, 9, 1, 11, 6],\n  [11, 1, 1, 8, 11, 6, 6, 1, 9, 1, 1, 4, 6, 4],\n  [11, 6, 6, 3, 6, 0, 6, 4],\n  [6, 4, 8, 6, 11, 6],\n  [7, 10, 10, 6, 6, 7, 8, 10, 9, 10],\n  [0, 7, 0, 10, 10, 7, 9, 10, 6, 7, 10, 6],\n  [10, 6, 6, 7, 7, 10, 1, 10, 7, 1, 8, 1],\n  [10, 6, 6, 7, 7, 10, 7, 1, 1, 10],\n  [2, 6, 6, 1, 6, 8, 8, 1, 9, 1, 6, 7],\n  [2, 6, 6, 9, 9, 2, 9, 1, 6, 7, 7, 9, 9, 3],\n  [0, 7, 0, 6, 6, 7, 2, 6],\n  [2, 7, 6, 7, 2, 6],\n  [11, 2, 10, 6, 6, 8, 8, 10, 9, 10, 6, 7],\n  [0, 7, 7, 2, 11, 2, 9, 7, 6, 7, 7, 10, 10, 6, 9, 10],\n  [1, 8, 1, 7, 1, 10, 10, 7, 6, 7, 10, 6, 11, 2],\n  [11, 2, 1, 11, 1, 7, 10, 6, 6, 1, 1, 10, 6, 7],\n  [9, 6, 6, 8, 6, 7, 9, 1, 1, 6, 11, 6, 6, 3],\n  [9, 1, 11, 6, 6, 7],\n  [0, 7, 0, 6, 6, 7, 11, 0, 11, 6],\n  [11, 6, 6, 7],\n  [7, 6, 6, 11],\n  [7, 6, 6, 11],\n  [1, 9, 7, 6, 6, 11],\n  [8, 1, 1, 9, 7, 6, 6, 11],\n  [10, 1, 2, 10, 6, 11, 7, 6],\n  [2, 10, 10, 1, 6, 11, 7, 6],\n  [2, 9, 2, 10, 10, 9, 6, 11, 7, 6],\n  [6, 11, 7, 6, 2, 10, 10, 3, 10, 8, 10, 9],\n  [7, 2, 6, 2, 7, 6],\n  [7, 0, 7, 6, 6, 0, 6, 2],\n  [2, 7, 7, 6, 6, 2, 1, 9],\n  [1, 6, 6, 2, 1, 8, 8, 6, 1, 9, 7, 6],\n  [10, 7, 7, 6, 6, 10, 10, 1, 1, 7],\n  [10, 7, 7, 6, 6, 10, 1, 7, 10, 1, 1, 8],\n  [7, 0, 7, 10, 10, 0, 10, 9, 6, 10, 7, 6],\n  [7, 6, 6, 10, 10, 7, 10, 8, 10, 9],\n  [6, 8, 4, 6, 6, 11],\n  [3, 6, 6, 11, 0, 6, 4, 6],\n  [8, 6, 6, 11, 4, 6, 1, 9],\n  [4, 6, 6, 9, 6, 3, 3, 9, 1, 9, 6, 11],\n  [6, 8, 4, 6, 6, 11, 2, 10, 10, 1],\n  [2, 10, 10, 1, 0, 11, 0, 6, 6, 11, 4, 6],\n  [4, 11, 4, 6, 6, 11, 2, 9, 2, 10, 10, 9],\n  [10, 9, 9, 3, 3, 10, 2, 10, 4, 3, 3, 6, 6, 11, 4, 6],\n  [8, 2, 4, 2, 4, 6, 6, 2],\n  [4, 2, 4, 6, 6, 2],\n  [1, 9, 3, 4, 4, 2, 4, 6, 6, 2],\n  [1, 9, 4, 1, 4, 2, 4, 6, 6, 2],\n  [8, 1, 8, 6, 6, 1, 4, 6, 6, 10, 10, 1],\n  [10, 1, 0, 10, 0, 6, 6, 10, 4, 6],\n  [4, 6, 6, 3, 3, 4, 6, 10, 10, 3, 3, 9, 10, 9],\n  [10, 9, 4, 10, 6, 10, 4, 6],\n  [9, 5, 5, 4, 7, 6, 6, 11],\n  [9, 5, 5, 4, 7, 6, 6, 11],\n  [5, 0, 1, 5, 5, 4, 7, 6, 6, 11],\n  [7, 6, 6, 11, 3, 4, 3, 5, 5, 4, 1, 5],\n  [9, 5, 5, 4, 10, 1, 2, 10, 7, 6, 6, 11],\n  [6, 11, 7, 6, 2, 10, 10, 1, 9, 5, 5, 4],\n  [7, 6, 6, 11, 5, 4, 4, 10, 10, 5, 4, 2, 2, 10],\n  [3, 4, 3, 5, 5, 4, 2, 5, 10, 5, 2, 10, 7, 6, 6, 11],\n  [7, 2, 7, 6, 6, 2, 5, 4, 9, 5],\n  [9, 5, 5, 4, 8, 6, 6, 0, 6, 2, 7, 6],\n  [3, 6, 6, 2, 7, 6, 1, 5, 5, 0, 5, 4],\n  [6, 2, 2, 8, 8, 6, 7, 6, 1, 8, 8, 5, 5, 4, 1, 5],\n  [9, 5, 5, 4, 10, 1, 1, 6, 6, 10, 1, 7, 7, 6],\n  [1, 6, 6, 10, 10, 1, 1, 7, 7, 6, 0, 7, 9, 5, 5, 4],\n  [0, 10, 10, 4, 10, 5, 5, 4, 3, 10, 6, 10, 10, 7, 7, 6],\n  [7, 6, 6, 10, 10, 7, 10, 8, 5, 4, 4, 10, 10, 5],\n  [6, 9, 9, 5, 5, 6, 6, 11, 11, 9],\n  [3, 6, 6, 11, 0, 6, 0, 5, 5, 6, 9, 5],\n  [0, 11, 0, 5, 5, 11, 1, 5, 5, 6, 6, 11],\n  [6, 11, 3, 6, 3, 5, 5, 6, 1, 5],\n  [2, 10, 10, 1, 9, 5, 5, 11, 11, 9, 5, 6, 6, 11],\n  [0, 11, 0, 6, 6, 11, 9, 6, 5, 6, 9, 5, 2, 10, 10, 1],\n  [8, 5, 5, 11, 5, 6, 6, 11, 0, 5, 10, 5, 5, 2, 2, 10],\n  [6, 11, 3, 6, 3, 5, 5, 6, 2, 10, 10, 3, 10, 5],\n  [5, 8, 9, 5, 5, 2, 2, 8, 5, 6, 6, 2],\n  [9, 5, 5, 6, 6, 9, 6, 0, 6, 2],\n  [1, 5, 5, 8, 8, 1, 5, 6, 6, 8, 8, 2, 6, 2],\n  [1, 5, 5, 6, 6, 1, 6, 2],\n  [3, 6, 6, 1, 6, 10, 10, 1, 8, 6, 5, 6, 6, 9, 9, 5],\n  [10, 1, 0, 10, 0, 6, 6, 10, 9, 5, 5, 0, 5, 6],\n  [5, 6, 6, 10, 10, 5],\n  [10, 5, 5, 6, 6, 10],\n  [11, 5, 5, 10, 10, 11, 7, 5],\n  [11, 5, 5, 10, 10, 11, 7, 5],\n  [5, 11, 7, 5, 5, 10, 10, 11, 1, 9],\n  [10, 7, 7, 5, 5, 10, 10, 11, 8, 1, 1, 9],\n  [11, 1, 2, 11, 7, 1, 7, 5, 5, 1],\n  [2, 7, 7, 1, 7, 5, 5, 1, 2, 11],\n  [9, 7, 7, 5, 5, 9, 9, 2, 2, 7, 2, 11],\n  [7, 5, 5, 2, 2, 7, 2, 11, 5, 9, 9, 2, 2, 8],\n  [2, 5, 5, 10, 10, 2, 3, 5, 7, 5],\n  [8, 2, 8, 5, 5, 2, 7, 5, 10, 2, 5, 10],\n  [1, 9, 5, 10, 10, 3, 3, 5, 7, 5, 10, 2],\n  [8, 2, 2, 9, 1, 9, 7, 2, 10, 2, 2, 5, 5, 10, 7, 5],\n  [3, 5, 5, 1, 7, 5],\n  [7, 0, 7, 1, 7, 5, 5, 1],\n  [3, 9, 3, 5, 5, 9, 7, 5],\n  [7, 9, 5, 9, 7, 5],\n  [5, 8, 4, 5, 5, 10, 10, 8, 10, 11],\n  [5, 0, 4, 5, 5, 11, 11, 0, 5, 10, 10, 11],\n  [1, 9, 4, 10, 10, 8, 10, 11, 4, 5, 5, 10],\n  [10, 11, 11, 4, 4, 10, 4, 5, 5, 10, 3, 4, 4, 1, 1, 9],\n  [2, 5, 5, 1, 2, 8, 8, 5, 2, 11, 4, 5],\n  [4, 11, 11, 0, 4, 5, 5, 11, 2, 11, 11, 1, 5, 1],\n  [2, 5, 5, 0, 5, 9, 2, 11, 11, 5, 4, 5, 5, 8],\n  [4, 5, 5, 9, 2, 11],\n  [2, 5, 5, 10, 10, 2, 3, 5, 3, 4, 4, 5],\n  [5, 10, 10, 2, 2, 5, 2, 4, 4, 5],\n  [3, 10, 10, 2, 3, 5, 5, 10, 8, 5, 4, 5, 1, 9],\n  [5, 10, 10, 2, 2, 5, 2, 4, 4, 5, 1, 9, 9, 2],\n  [4, 5, 5, 8, 5, 3, 5, 1],\n  [4, 5, 5, 0, 5, 1],\n  [4, 5, 5, 8, 5, 3, 0, 5, 5, 9],\n  [4, 5, 5, 9],\n  [4, 11, 7, 4, 9, 11, 9, 10, 10, 11],\n  [9, 7, 7, 4, 9, 11, 9, 10, 10, 11],\n  [1, 10, 10, 11, 11, 1, 11, 4, 4, 1, 7, 4],\n  [1, 4, 4, 3, 1, 10, 10, 4, 7, 4, 4, 11, 10, 11],\n  [4, 11, 7, 4, 9, 11, 9, 2, 2, 11, 9, 1],\n  [9, 7, 7, 4, 9, 11, 9, 1, 1, 11, 2, 11],\n  [7, 4, 4, 11, 4, 2, 2, 11],\n  [7, 4, 4, 11, 4, 2, 2, 11, 3, 4],\n  [2, 9, 9, 10, 10, 2, 2, 7, 7, 9, 7, 4],\n  [9, 10, 10, 7, 7, 9, 7, 4, 10, 2, 2, 7, 7, 0],\n  [7, 10, 10, 3, 10, 2, 7, 4, 4, 10, 1, 10, 10, 0],\n  [1, 10, 10, 2, 7, 4],\n  [9, 1, 1, 4, 1, 7, 7, 4],\n  [9, 1, 1, 4, 1, 7, 7, 4, 8, 1],\n  [3, 4, 7, 4],\n  [7, 4],\n  [9, 10, 10, 8, 10, 11],\n  [9, 3, 9, 11, 9, 10, 10, 11],\n  [1, 10, 10, 0, 10, 8, 10, 11],\n  [1, 10, 10, 3, 10, 11],\n  [2, 11, 11, 1, 11, 9, 9, 1],\n  [9, 3, 9, 11, 2, 9, 9, 1, 2, 11],\n  [2, 11, 11, 0],\n  [2, 11],\n  [8, 2, 8, 10, 10, 2, 9, 10],\n  [9, 10, 10, 2, 2, 9],\n  [8, 2, 8, 10, 10, 2, 1, 8, 1, 10],\n  [1, 10, 10, 2],\n  [8, 1, 9, 1],\n  [9, 1],\n  [],\n  []];\n\nconst segTable2 = [\n  [],\n  [],\n  [1, 9],\n  [1, 9],\n  [2, 10, 10, 1],\n  [2, 10, 10, 1],\n  [2, 10, 10, 9],\n  [2, 10, 10, 9],\n  [11, 2],\n  [11, 2],\n  [1, 9, 11, 2],\n  [11, 2, 1, 9],\n  [10, 1, 11, 10],\n  [10, 1, 11, 10],\n  [11, 10, 10, 9],\n  [10, 9, 11, 10],\n  [4, 7],\n  [4, 7],\n  [1, 9, 4, 7],\n  [1, 9, 4, 7],\n  [2, 10, 10, 1, 4, 7],\n  [4, 7, 2, 10, 10, 1],\n  [2, 10, 10, 9, 4, 7],\n  [2, 10, 10, 9, 4, 7],\n  [4, 7, 11, 2],\n  [4, 7, 11, 2],\n  [1, 9, 4, 7, 11, 2],\n  [4, 7, 11, 2, 1, 9],\n  [10, 1, 11, 10, 4, 7],\n  [11, 10, 10, 1, 4, 7],\n  [4, 7, 11, 10, 10, 9],\n  [4, 7, 11, 10, 10, 9],\n  [9, 5, 5, 4],\n  [9, 5, 5, 4],\n  [5, 4, 1, 5],\n  [5, 4, 1, 5],\n  [2, 10, 10, 1, 9, 5, 5, 4],\n  [2, 10, 10, 1, 9, 5, 5, 4],\n  [2, 10, 10, 5, 5, 4],\n  [2, 10, 10, 5, 5, 4],\n  [9, 5, 5, 4, 11, 2],\n  [11, 2, 9, 5, 5, 4],\n  [5, 4, 1, 5, 11, 2],\n  [1, 5, 11, 2, 5, 4],\n  [11, 10, 10, 1, 9, 5, 5, 4],\n  [9, 5, 5, 4, 10, 1, 11, 10],\n  [5, 4, 11, 10, 10, 5],\n  [5, 4, 10, 5, 11, 10],\n  [5, 7, 9, 5],\n  [9, 5, 5, 7],\n  [1, 5, 5, 7],\n  [1, 5, 5, 7],\n  [9, 5, 5, 7, 10, 1, 2, 10],\n  [10, 1, 2, 10, 9, 5, 5, 7],\n  [5, 7, 10, 5, 2, 10],\n  [2, 10, 10, 5, 5, 7],\n  [9, 5, 5, 7, 11, 2],\n  [9, 5, 5, 7, 11, 2],\n  [11, 2, 1, 5, 5, 7],\n  [11, 2, 1, 5, 5, 7],\n  [9, 5, 5, 7, 10, 1, 11, 10],\n  [5, 7, 9, 5, 10, 1, 11, 10],\n  [11, 10, 10, 5, 5, 7],\n  [11, 10, 10, 5, 5, 7],\n  [10, 6, 6, 5, 5, 10],\n  [5, 10, 10, 6, 6, 5],\n  [1, 9, 5, 10, 10, 6, 6, 5],\n  [1, 9, 5, 10, 10, 6, 6, 5],\n  [6, 5, 5, 1, 2, 6],\n  [6, 5, 5, 1, 2, 6],\n  [6, 5, 5, 9, 2, 6],\n  [5, 9, 2, 6, 6, 5],\n  [11, 2, 10, 6, 6, 5, 5, 10],\n  [11, 2, 10, 6, 6, 5, 5, 10],\n  [1, 9, 11, 2, 5, 10, 10, 6, 6, 5],\n  [5, 10, 10, 6, 6, 5, 1, 9, 11, 2],\n  [11, 6, 6, 5, 5, 1],\n  [5, 1, 11, 6, 6, 5],\n  [11, 6, 6, 5, 5, 9],\n  [6, 5, 5, 9, 11, 6],\n  [5, 10, 10, 6, 6, 5, 4, 7],\n  [4, 7, 6, 5, 5, 10, 10, 6],\n  [1, 9, 5, 10, 10, 6, 6, 5, 4, 7],\n  [10, 6, 6, 5, 5, 10, 1, 9, 4, 7],\n  [2, 6, 6, 5, 5, 1, 4, 7],\n  [5, 1, 2, 6, 6, 5, 4, 7],\n  [4, 7, 5, 9, 6, 5, 2, 6],\n  [4, 7, 5, 9, 6, 5, 2, 6],\n  [11, 2, 4, 7, 10, 6, 6, 5, 5, 10],\n  [5, 10, 10, 6, 6, 5, 4, 7, 11, 2],\n  [1, 9, 4, 7, 11, 2, 5, 10, 10, 6, 6, 5],\n  [1, 9, 11, 2, 4, 7, 5, 10, 10, 6, 6, 5],\n  [4, 7, 5, 1, 11, 6, 6, 5],\n  [5, 1, 11, 6, 6, 5, 4, 7],\n  [5, 9, 6, 5, 11, 6, 4, 7],\n  [6, 5, 5, 9, 11, 6, 4, 7],\n  [9, 10, 6, 4, 10, 6],\n  [10, 6, 6, 4, 9, 10],\n  [1, 10, 10, 6, 6, 4],\n  [6, 4, 1, 10, 10, 6],\n  [9, 1, 2, 6, 6, 4],\n  [9, 1, 2, 6, 6, 4],\n  [2, 6, 6, 4],\n  [2, 6, 6, 4],\n  [9, 10, 10, 6, 6, 4, 11, 2],\n  [11, 2, 9, 10, 10, 6, 6, 4],\n  [11, 2, 6, 4, 1, 10, 10, 6],\n  [6, 4, 1, 10, 10, 6, 11, 2],\n  [6, 4, 9, 1, 11, 6],\n  [11, 6, 9, 1, 6, 4],\n  [11, 6, 6, 4],\n  [6, 4, 11, 6],\n  [10, 6, 6, 7, 9, 10],\n  [9, 10, 6, 7, 10, 6],\n  [10, 6, 6, 7, 1, 10],\n  [10, 6, 6, 7, 1, 10],\n  [2, 6, 9, 1, 6, 7],\n  [2, 6, 9, 1, 6, 7],\n  [6, 7, 2, 6],\n  [6, 7, 2, 6],\n  [11, 2, 10, 6, 9, 10, 6, 7],\n  [11, 2, 6, 7, 10, 6, 9, 10],\n  [1, 10, 6, 7, 10, 6, 11, 2],\n  [11, 2, 10, 6, 1, 10, 6, 7],\n  [6, 7, 9, 1, 11, 6],\n  [9, 1, 11, 6, 6, 7],\n  [6, 7, 11, 6],\n  [11, 6, 6, 7],\n  [7, 6, 6, 11],\n  [7, 6, 6, 11],\n  [1, 9, 7, 6, 6, 11],\n  [1, 9, 7, 6, 6, 11],\n  [10, 1, 2, 10, 6, 11, 7, 6],\n  [2, 10, 10, 1, 6, 11, 7, 6],\n  [2, 10, 10, 9, 6, 11, 7, 6],\n  [6, 11, 7, 6, 2, 10, 10, 9],\n  [6, 2, 7, 6],\n  [7, 6, 6, 2],\n  [7, 6, 6, 2, 1, 9],\n  [6, 2, 1, 9, 7, 6],\n  [7, 6, 6, 10, 10, 1],\n  [7, 6, 6, 10, 10, 1],\n  [10, 9, 6, 10, 7, 6],\n  [7, 6, 6, 10, 10, 9],\n  [4, 6, 6, 11],\n  [6, 11, 4, 6],\n  [6, 11, 4, 6, 1, 9],\n  [4, 6, 1, 9, 6, 11],\n  [4, 6, 6, 11, 2, 10, 10, 1],\n  [2, 10, 10, 1, 6, 11, 4, 6],\n  [4, 6, 6, 11, 2, 10, 10, 9],\n  [10, 9, 2, 10, 6, 11, 4, 6],\n  [4, 6, 6, 2],\n  [4, 6, 6, 2],\n  [1, 9, 4, 6, 6, 2],\n  [1, 9, 4, 6, 6, 2],\n  [4, 6, 6, 10, 10, 1],\n  [10, 1, 6, 10, 4, 6],\n  [4, 6, 6, 10, 10, 9],\n  [10, 9, 6, 10, 4, 6],\n  [9, 5, 5, 4, 7, 6, 6, 11],\n  [9, 5, 5, 4, 7, 6, 6, 11],\n  [1, 5, 5, 4, 7, 6, 6, 11],\n  [7, 6, 6, 11, 5, 4, 1, 5],\n  [9, 5, 5, 4, 10, 1, 2, 10, 7, 6, 6, 11],\n  [6, 11, 7, 6, 2, 10, 10, 1, 9, 5, 5, 4],\n  [7, 6, 6, 11, 5, 4, 10, 5, 2, 10],\n  [5, 4, 10, 5, 2, 10, 7, 6, 6, 11],\n  [7, 6, 6, 2, 5, 4, 9, 5],\n  [9, 5, 5, 4, 6, 2, 7, 6],\n  [6, 2, 7, 6, 1, 5, 5, 4],\n  [6, 2, 7, 6, 5, 4, 1, 5],\n  [9, 5, 5, 4, 10, 1, 6, 10, 7, 6],\n  [6, 10, 10, 1, 7, 6, 9, 5, 5, 4],\n  [10, 5, 5, 4, 6, 10, 7, 6],\n  [7, 6, 6, 10, 5, 4, 10, 5],\n  [9, 5, 5, 6, 6, 11],\n  [6, 11, 5, 6, 9, 5],\n  [1, 5, 5, 6, 6, 11],\n  [6, 11, 5, 6, 1, 5],\n  [2, 10, 10, 1, 9, 5, 5, 6, 6, 11],\n  [6, 11, 5, 6, 9, 5, 2, 10, 10, 1],\n  [5, 6, 6, 11, 10, 5, 2, 10],\n  [6, 11, 5, 6, 2, 10, 10, 5],\n  [9, 5, 5, 6, 6, 2],\n  [9, 5, 5, 6, 6, 2],\n  [1, 5, 5, 6, 6, 2],\n  [1, 5, 5, 6, 6, 2],\n  [6, 10, 10, 1, 5, 6, 9, 5],\n  [10, 1, 6, 10, 9, 5, 5, 6],\n  [5, 6, 6, 10, 10, 5],\n  [10, 5, 5, 6, 6, 10],\n  [5, 10, 10, 11, 7, 5],\n  [5, 10, 10, 11, 7, 5],\n  [7, 5, 5, 10, 10, 11, 1, 9],\n  [7, 5, 5, 10, 10, 11, 1, 9],\n  [2, 11, 7, 5, 5, 1],\n  [7, 5, 5, 1, 2, 11],\n  [7, 5, 5, 9, 2, 11],\n  [7, 5, 2, 11, 5, 9],\n  [5, 10, 10, 2, 7, 5],\n  [7, 5, 10, 2, 5, 10],\n  [1, 9, 5, 10, 7, 5, 10, 2],\n  [1, 9, 10, 2, 5, 10, 7, 5],\n  [5, 1, 7, 5],\n  [7, 5, 5, 1],\n  [5, 9, 7, 5],\n  [5, 9, 7, 5],\n  [4, 5, 5, 10, 10, 11],\n  [4, 5, 5, 10, 10, 11],\n  [1, 9, 10, 11, 4, 5, 5, 10],\n  [10, 11, 4, 5, 5, 10, 1, 9],\n  [5, 1, 2, 11, 4, 5],\n  [4, 5, 2, 11, 5, 1],\n  [5, 9, 2, 11, 4, 5],\n  [4, 5, 5, 9, 2, 11],\n  [5, 10, 10, 2, 4, 5],\n  [5, 10, 10, 2, 4, 5],\n  [10, 2, 5, 10, 4, 5, 1, 9],\n  [5, 10, 10, 2, 4, 5, 1, 9],\n  [4, 5, 5, 1],\n  [4, 5, 5, 1],\n  [4, 5, 5, 9],\n  [4, 5, 5, 9],\n  [7, 4, 9, 10, 10, 11],\n  [7, 4, 9, 10, 10, 11],\n  [1, 10, 10, 11, 7, 4],\n  [1, 10, 7, 4, 10, 11],\n  [7, 4, 2, 11, 9, 1],\n  [7, 4, 9, 1, 2, 11],\n  [7, 4, 2, 11],\n  [7, 4, 2, 11],\n  [9, 10, 10, 2, 7, 4],\n  [9, 10, 7, 4, 10, 2],\n  [10, 2, 7, 4, 1, 10],\n  [1, 10, 10, 2, 7, 4],\n  [9, 1, 7, 4],\n  [9, 1, 7, 4],\n  [7, 4],\n  [7, 4],\n  [9, 10, 10, 11],\n  [9, 10, 10, 11],\n  [1, 10, 10, 11],\n  [1, 10, 10, 11],\n  [2, 11, 9, 1],\n  [9, 1, 2, 11],\n  [2, 11],\n  [2, 11],\n  [10, 2, 9, 10],\n  [9, 10, 10, 2],\n  [10, 2, 1, 10],\n  [1, 10, 10, 2],\n  [9, 1],\n  [9, 1],\n  [],\n  []];\n\nconst cubeVerts = [[0,0,0], [1,0,0], [1,1,0], [0,1,0],\n                   [0,0,1], [1,0,1], [1,1,1], [0,1,1]];\nconst edgeIndex = [[0,1], [1,2], [2,3], [3,0], [4,5], [5,6],\n                   [6,7], [7,4], [0,4], [1,5], [2,6], [3,7]];\n// edge directions: [x, y, -x, -y, x, y, -x, -y, z, z, z, z]\n\n// return offsets relative to vertex [0,0,0]\nfunction calculateVertOffsets(dims) {\n  let vert_offsets = [];\n  for (let i = 0; i < 8; ++i) {\n    const v = cubeVerts[i];\n    vert_offsets.push(v[0] + dims[2] * (v[1] + dims[1] * v[2]));\n  }\n  return vert_offsets;\n}\n\n\nfunction marchingCubes(dims, values, points, isolevel, method) {\n  const snap = (method === 'snapped MC');\n  const seg_table = (method === 'squarish' ? segTable2 : segTable);\n  let vlist = new Array(12);\n  const vert_offsets = calculateVertOffsets(dims);\n  let vertex_values = new Float32Array(8);\n  let p0 = [0, 0, 0]; // initial value - never used, but makes Flow happy\n  let vertex_points = [p0, p0, p0, p0, p0, p0, p0, p0];\n  const size_x = dims[0];\n  const size_y = dims[1];\n  const size_z = dims[2];\n  if (values == null || points == null) return;\n  let vertices = [];\n  let segments = [];\n  let vertex_count = 0;\n  for (let x = 0; x < size_x - 1; x++) {\n    for (let y = 0; y < size_y - 1; y++) {\n      for (let z = 0; z < size_z - 1; z++) {\n        const offset0 = z + size_z * (y + size_y * x);\n        let cubeindex = 0;\n        let i;\n        let j;\n        for (i = 0; i < 8; ++i) {\n          j = offset0 + vert_offsets[i];\n          cubeindex |= (values[j] < isolevel) ? 1 << i : 0;\n        }\n        if (cubeindex === 0 || cubeindex === 255) continue;\n        for (i = 0; i < 8; ++i) {\n          j = offset0 + vert_offsets[i];\n          vertex_values[i] = values[j];\n          vertex_points[i] = points[j];\n        }\n\n        // 12 bit number, indicates which edges are crossed by the isosurface\n        const edge_mask = edgeTable[cubeindex];\n\n        // check which edges are crossed, and estimate the point location\n        // using a weighted average of scalar values at edge endpoints.\n        for (i = 0; i < 12; ++i) {\n          if ((edge_mask & (1 << i)) !== 0) {\n            const e = edgeIndex[i];\n            let mu = (isolevel - vertex_values[e[0]]) /\n                     (vertex_values[e[1]] - vertex_values[e[0]]);\n            if (snap === true) {\n              if (mu > 0.85) mu = 1;\n              else if (mu < 0.15) mu = 0;\n            }\n            const p1 = vertex_points[e[0]];\n            const p2 = vertex_points[e[1]];\n            // The number of added vertices could be roughly halved\n            // if we avoided duplicates between neighbouring cells.\n            // Using a map for lookups is too slow, perhaps a big\n            // array would do?\n            vertices.push(p1[0] + (p2[0] - p1[0]) * mu,\n                          p1[1] + (p2[1] - p1[1]) * mu,\n                          p1[2] + (p2[2] - p1[2]) * mu);\n            vlist[i] = vertex_count++;\n          }\n        }\n        const t = seg_table[cubeindex];\n        for (i = 0; i < t.length; i++) {\n          segments.push(vlist[t[i]]);\n        }\n      }\n    }\n  }\n  return { vertices: vertices, segments: segments };\n}\n\n","// @flow\n\nimport { UnitCell } from './unitcell.js';\nimport { Block } from './isosurface.js';\n\nfunction modulo(a, b) {\n  const reminder = a % b;\n  return reminder >= 0 ? reminder : reminder + b;\n}\n\nclass GridArray {\n  /*::\n  dim: number[]\n  values: Float32Array\n  */\n  constructor(dim) {\n    this.dim = dim; // dimensions of the grid for the entire unit cell\n    this.values = new Float32Array(dim[0] * dim[1] * dim[2]);\n  }\n\n  grid2index(i, j, k) {\n    i = modulo(i, this.dim[0]);\n    j = modulo(j, this.dim[1]);\n    k = modulo(k, this.dim[2]);\n    return this.dim[2] * (this.dim[1] * i + j) + k;\n  }\n\n  grid2frac(i, j, k) {\n    return [i / this.dim[0], j / this.dim[1], k / this.dim[2]];\n  }\n\n  // return grid coordinates (rounded down) for the given fractional coordinates\n  frac2grid(xyz) {\n    // at one point \"| 0\" here made extract_block() 40% faster on V8 3.14,\n    // but I don't see any effect now\n    return [Math.floor(xyz[0] * this.dim[0]) | 0,\n            Math.floor(xyz[1] * this.dim[1]) | 0,\n            Math.floor(xyz[2] * this.dim[2]) | 0];\n  }\n\n  set_grid_value(i, j, k, value) {\n    const idx = this.grid2index(i, j, k);\n    this.values[idx] = value;\n  }\n\n  get_grid_value(i, j, k) {\n    const idx = this.grid2index(i, j, k);\n    return this.values[idx];\n  }\n}\n\nfunction calculate_stddev(a, offset) {\n  let sum = 0;\n  let sq_sum = 0;\n  const alen = a.length;\n  for (let i = offset; i < alen; i++) {\n    sum += a[i];\n    sq_sum += a[i] * a[i];\n  }\n  const mean = sum / (alen - offset);\n  const variance = sq_sum / (alen - offset) - mean * mean;\n  return {mean: mean, rms: Math.sqrt(variance)};\n}\n\nexport class ElMap {\n  /*::\n  unit_cell: ?UnitCell\n  grid: ?GridArray\n  stats: { mean: number, rms: number }\n  block: Block\n  */\n  constructor() {\n    this.unit_cell = null;\n    this.grid = null;\n    this.stats = { mean: 0.0, rms: 1.0 };\n    this.block = new Block();\n  }\n\n  abs_level(sigma /*:number*/) {\n    return sigma * this.stats.rms + this.stats.mean;\n  }\n\n  // http://www.ccp4.ac.uk/html/maplib.html#description\n  // eslint-disable-next-line complexity\n  from_ccp4(buf /*:ArrayBuffer*/, expand_symmetry /*:?boolean*/) {\n    if (expand_symmetry === undefined) expand_symmetry = true;\n    if (buf.byteLength < 1024) throw Error('File shorter than 1024 bytes.');\n    //console.log('buf type: ' + Object.prototype.toString.call(buf));\n    // for now we assume both file and host are little endian\n    const iview = new Int32Array(buf, 0, 256);\n    // word 53 - character string 'MAP ' to identify file type\n    if (iview[52] !== 0x2050414d) throw Error('not a CCP4 map');\n    // map has 3 dimensions referred to as columns (fastest changing), rows\n    // and sections (c-r-s)\n    const n_crs = [iview[0], iview[1], iview[2]];\n    const mode = iview[3];\n    let nb;\n    if (mode === 2) nb = 4;\n    else if (mode === 0) nb = 1;\n    else throw Error('Only Mode 2 and Mode 0 of CCP4 map is supported.');\n    const start = [iview[4], iview[5], iview[6]];\n    const n_grid = [iview[7], iview[8], iview[9]];\n    const nsymbt = iview[23]; // size of extended header in bytes\n    if (1024 + nsymbt + nb*n_crs[0]*n_crs[1]*n_crs[2] !== buf.byteLength) {\n      throw Error('ccp4 file too short or too long');\n    }\n    const fview = new Float32Array(buf, 0, buf.byteLength >> 2);\n    this.unit_cell = new UnitCell(fview[10], fview[11], fview[12],\n                                  fview[13], fview[14], fview[15]);\n    // MAPC, MAPR, MAPS - axis corresp to cols, rows, sections (1,2,3 for X,Y,Z)\n    const map_crs = [iview[16], iview[17], iview[18]];\n    const ax = map_crs.indexOf(1);\n    const ay = map_crs.indexOf(2);\n    const az = map_crs.indexOf(3);\n\n    const min = fview[19];\n    const max = fview[20];\n    //const sg_number = iview[22];\n    //const lskflg = iview[24];\n    const grid = new GridArray(n_grid);\n    if (nsymbt % 4 !== 0) {\n      throw Error('CCP4 map with NSYMBT not divisible by 4 is not supported.');\n    }\n    let data_view;\n    if (mode === 2) data_view = fview;\n    else /* mode === 0 */ data_view = new Int8Array(buf);\n    let idx = (1024 + nsymbt) / nb | 0;\n\n    // We assume that if DMEAN and RMS from the header are not clearly wrong\n    // they are what the user wants. Because the map can cover a small part\n    // of the asu and its rmsd may be different than the total rmsd.\n    this.stats.mean = fview[21];\n    this.stats.rms = fview[54];\n    if (this.stats.mean < min || this.stats.mean > max || this.stats.rms <= 0) {\n      this.stats = calculate_stddev(data_view, idx);\n    }\n    let b1 = 1;\n    let b0 = 0;\n    // if the file was converted by mapmode2to0 - scale the data\n    if (mode === 0 && iview[39] === -128 && iview[40] === 127) {\n      // scaling f(x)=b1*x+b0 such that f(-128)=min and f(127)=max\n      b1 = (max - min) / 255.0;\n      b0 = 0.5 * (min + max + b1);\n    }\n\n    const end = [start[0] + n_crs[0], start[1] + n_crs[1], start[2] + n_crs[2]];\n    let it = [0, 0, 0];\n    for (it[2] = start[2]; it[2] < end[2]; it[2]++) { // sections\n      for (it[1] = start[1]; it[1] < end[1]; it[1]++) { // rows\n        for (it[0] = start[0]; it[0] < end[0]; it[0]++) { // cols\n          grid.set_grid_value(it[ax], it[ay], it[az], b1 * data_view[idx] + b0);\n          idx++;\n        }\n      }\n    }\n    if (expand_symmetry && nsymbt > 0) {\n      const u8view = new Uint8Array(buf);\n      for (let i = 0; i+80 <= nsymbt; i += 80) {\n        let j;\n        let symop = '';\n        for (j = 0; j < 80; ++j) {\n          symop += String.fromCharCode(u8view[1024 + i + j]);\n        }\n        if (/^\\s*x\\s*,\\s*y\\s*,\\s*z\\s*$/i.test(symop)) continue;  // skip x,y,z\n        //console.log('sym ops', symop.trim());\n        let mat = parse_symop(symop);\n        // Note: we apply here symops to grid points instead of coordinates.\n        // In the cases we came across it is equivalent, but in general not.\n        for (j = 0; j < 3; ++j) {\n          mat[j][3] = Math.round(mat[j][3] * n_grid[j]) | 0;\n        }\n        idx = (1024 + nsymbt) / nb | 0;\n        let xyz = [0, 0, 0];\n        for (it[2] = start[2]; it[2] < end[2]; it[2]++) { // sections\n          for (it[1] = start[1]; it[1] < end[1]; it[1]++) { // rows\n            for (it[0] = start[0]; it[0] < end[0]; it[0]++) { // cols\n              for (j = 0; j < 3; ++j) {\n                xyz[j] = it[ax] * mat[j][0] + it[ay] * mat[j][1] +\n                         it[az] * mat[j][2] + mat[j][3];\n              }\n              grid.set_grid_value(xyz[0], xyz[1], xyz[2],\n                                  b1 * data_view[idx] + b0);\n              idx++;\n            }\n          }\n        }\n      }\n    }\n    this.grid = grid;\n  }\n\n  // DSN6 MAP FORMAT\n  // http://www.uoxray.uoregon.edu/tnt/manual/node104.html\n  // Density values are stored as bytes.\n  from_dsn6(buf /*: ArrayBuffer*/) {\n    //console.log('buf type: ' + Object.prototype.toString.call(buf));\n    const u8data = new Uint8Array(buf);\n    const iview = new Int16Array(u8data.buffer);\n    if (iview[18] !== 100) {\n      const len = iview.length;  // or only header, 256?\n      for (let n = 0; n < len; n++) {\n        // swapping bytes with Uint8Array like this:\n        // var tmp=u8data[n*2]; u8data[n*2]=u8data[n*2+1]; u8data[n*2+1]=tmp;\n        // was slowing down this whole function 5x times (!?) on V8.\n        const val = iview[n];\n        iview[n] = ((val & 0xff) << 8) | ((val >> 8) & 0xff);\n      }\n    }\n    if (iview[18] !== 100) {\n      throw Error('Endian swap failed');\n    }\n    const origin = [iview[0], iview[1], iview[2]];\n    const n_real = [iview[3], iview[4], iview[5]];\n    const n_grid = [iview[6], iview[7], iview[8]];\n    const cell_mult = 1.0 / iview[17];\n    this.unit_cell = new UnitCell(cell_mult * iview[9],\n                                  cell_mult * iview[10],\n                                  cell_mult * iview[11],\n                                  cell_mult * iview[12],\n                                  cell_mult * iview[13],\n                                  cell_mult * iview[14]);\n    const grid = new GridArray(n_grid);\n    const prod = iview[15] / 100;\n    const plus = iview[16];\n    //var data_scale_factor = iview[15] / iview[18] + iview[16];\n    // bricks have 512 (8x8x8) values\n    let offset = 512;\n    const n_blocks = [Math.ceil(n_real[0] / 8),\n                      Math.ceil(n_real[1] / 8),\n                      Math.ceil(n_real[2] / 8)];\n    for (let zz = 0; zz < n_blocks[2]; zz++) {\n      for (let yy = 0; yy < n_blocks[1]; yy++) {\n        for (let xx = 0; xx < n_blocks[0]; xx++) { // loop over bricks\n          for (let k = 0; k < 8; k++) {\n            const z = 8 * zz + k;\n            for (let j = 0; j < 8; j++) {\n              const y = 8 * yy + j;\n              for (let i = 0; i < 8; i++) { // loop inside brick\n                const x = 8 * xx + i;\n                if (x < n_real[0] && y < n_real[1] && z < n_real[2]) {\n                  const density = (u8data[offset] - plus) / prod;\n                  offset++;\n                  grid.set_grid_value(origin[0] + x,\n                                      origin[1] + y,\n                                      origin[2] + z, density);\n                } else {\n                  offset += 8 - i;\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    this.stats = calculate_stddev(grid.values, 0);\n    this.grid = grid;\n    //this.show_debug_info();\n  }\n\n  show_debug_info() {\n    console.log('unit cell:', this.unit_cell && this.unit_cell.parameters);\n    console.log('grid:', this.grid && this.grid.dim);\n  }\n\n  // Extract a block of density for calculating an isosurface using the\n  // separate marching cubes implementation.\n  extract_block(radius/*:number*/, center /*:?number[]*/) {\n    const grid = this.grid;\n    const unit_cell = this.unit_cell;\n    if (grid == null || unit_cell == null) return;\n    let grid_min = [0, 0, 0];\n    let grid_max = grid.dim;\n    if (center) {\n      const xyz_min = [center[0]-radius, center[1]-radius, center[2]-radius];\n      const xyz_max = [center[0]+radius, center[1]+radius, center[2]+radius];\n      const frac_min = unit_cell.fractionalize(xyz_min);\n      const frac_max = unit_cell.fractionalize(xyz_max);\n      grid_min = grid.frac2grid(frac_min);\n      grid_max = grid.frac2grid(frac_max);\n    }\n    const size = [grid_max[0] - grid_min[0] + 1,\n                  grid_max[1] - grid_min[1] + 1,\n                  grid_max[2] - grid_min[2] + 1];\n    let points = [];\n    let values = [];\n    for (let i = grid_min[0]; i <= grid_max[0]; i++) {\n      for (let j = grid_min[1]; j <= grid_max[1]; j++) {\n        for (let k = grid_min[2]; k <= grid_max[2]; k++) {\n          const frac = grid.grid2frac(i, j, k);\n          const orth = unit_cell.orthogonalize(frac);\n          points.push(orth);\n          const map_value = grid.get_grid_value(i, j, k);\n          values.push(map_value);\n        }\n      }\n    }\n    this.block.set(points, values, size);\n  }\n\n  isomesh_in_block(sigma/*:number*/, method/*:string*/) {\n    const abs_level = this.abs_level(sigma);\n    return this.block.isosurface(abs_level, method);\n  }\n}\n\n// symop -> matrix ([x,y,z] = matrix * [x,y,z,1])\nfunction parse_symop(symop) {\n  const ops = symop.toLowerCase().replace(/\\s+/g, '').split(',');\n  if (ops.length !== 3) throw Error('Unexpected symop: ' + symop);\n  let mat = [];\n  for (let i = 0; i < 3; i++) {\n    const terms = ops[i].split(/(?=[+-])/);\n    let row = [0, 0, 0, 0];\n    for (let j = 0; j < terms.length; j++) {\n      const term = terms[j];\n      const sign = (term[0] === '-' ? -1 : 1);\n      let m = terms[j].match(/^[+-]?([xyz])$/);\n      if (m) {\n        const pos = {x: 0, y: 1, z: 2}[m[1]];\n        row[pos] = sign;\n      } else {\n        m = terms[j].match(/^[+-]?(\\d)\\/(\\d)$/);\n        if (!m) throw Error('What is ' + terms[j] + ' in ' + symop);\n        row[3] = sign * Number(m[1]) / Number(m[2]);\n      }\n    }\n    mat.push(row);\n  }\n  return mat;\n}\n\n","// @flow\n\nimport * as THREE from 'three';\n\n/*:: type Num3 = [number, number, number] */\n/*:: type Atom = {xyz: Num3} */\n/*:: type Color = {r: number, g: number, b: number} */\n/*:: type Vector3 = {x: number, y: number, z: number} */\n\nconst CUBE_EDGES = [[0, 0, 0], [1, 0, 0],\n                    [0, 0, 0], [0, 1, 0],\n                    [0, 0, 0], [0, 0, 1],\n                    [1, 0, 0], [1, 1, 0],\n                    [1, 0, 0], [1, 0, 1],\n                    [0, 1, 0], [1, 1, 0],\n                    [0, 1, 0], [0, 1, 1],\n                    [0, 0, 1], [1, 0, 1],\n                    [0, 0, 1], [0, 1, 1],\n                    [1, 0, 1], [1, 1, 1],\n                    [1, 1, 0], [1, 1, 1],\n                    [0, 1, 1], [1, 1, 1]];\n\nexport function makeCube(size /*:number*/,\n                         ctr /*:Vector3*/,\n                         options /*:{[key:string]: any}*/) {\n  const vertices = CUBE_EDGES.map(function (a) {\n    return {\n      x: ctr.x + size * (a[0] - 0.5),\n      y: ctr.y + size * (a[1] - 0.5),\n      z: ctr.z + size * (a[2] - 0.5)};\n  });\n  const material = makeLineMaterial({\n    gl_lines: true,\n    color: options.color,\n    linewidth: options.linewidth,\n    win_size: options.win_size,\n    segments: true,\n  });\n  return makeLineSegments(material, vertices);\n}\n\n// A cube with 3 edges (for x, y, z axes) colored in red, green and blue.\nexport function makeRgbBox(transform_func /*:Num3 => Num3*/,\n                           options /*:{[key:string]: any}*/) {\n  const vertices = CUBE_EDGES.map(function (a) {\n    return { xyz: transform_func(a) };\n  });\n  let colors = [\n    new THREE.Color(0xff0000), new THREE.Color(0xffaa00),\n    new THREE.Color(0x00ff00), new THREE.Color(0xaaff00),\n    new THREE.Color(0x0000ff), new THREE.Color(0x00aaff),\n  ];\n  for (let j = 6; j < CUBE_EDGES.length; j++) {\n    colors.push(options.color);\n  }\n  const material = makeLineMaterial({\n    gl_lines: true,\n    linewidth: 1,\n    segments: true,\n  });\n  // $FlowFixMe: the type of vertices confuses flow\n  return makeLineSegments(material, vertices, colors);\n}\n\nfunction double_pos(vertex_arr /*:Vector3[] | Atom[]*/) {\n  let pos = [];\n  let i;\n  if (vertex_arr && vertex_arr[0].xyz) {\n    for (i = 0; i < vertex_arr.length; i++) {\n      // $FlowFixMe: disjoint unions not smart enough\n      const xyz /*:Num3*/ = vertex_arr[i].xyz;\n      pos.push(xyz[0], xyz[1], xyz[2]);\n      pos.push(xyz[0], xyz[1], xyz[2]);\n    }\n  } else {\n    for (i = 0; i < vertex_arr.length; i++) {\n      // $FlowFixMe\n      const v /*:Vector3*/ = vertex_arr[i];\n      pos.push(v.x, v.y, v.z);\n      pos.push(v.x, v.y, v.z);\n    }\n  }\n  return pos;\n}\n\nfunction double_color(color_arr /*:Color[]*/) {\n  const len = color_arr.length;\n  let color = new Float32Array(6*len);\n  for (let i = 0; i < len; i++) {\n    const col = color_arr[i];\n    color[6*i] = col.r;\n    color[6*i+1] = col.g;\n    color[6*i+2] = col.b;\n    color[6*i+3] = col.r;\n    color[6*i+4] = col.g;\n    color[6*i+5] = col.b;\n  }\n  return color;\n}\n\n// input arrays must be of the same length\nfunction wide_line_geometry(vertex_arr, color_arr) {\n  const len = vertex_arr.length;\n  const pos = double_pos(vertex_arr);\n  const position = new Float32Array(pos);\n  // could we use three overlapping views of the same buffer?\n  let previous = new Float32Array(6*len);\n  let i;\n  for (i = 0; i < 6; i++) previous[i] = pos[i];\n  for (; i < 6 * len; i++) previous[i] = pos[i-6];\n  let next = new Float32Array(6*len);\n  for (i = 0; i < 6 * (len-1); i++) next[i] = pos[i+6];\n  for (; i < 6 * len; i++) next[i] = pos[i];\n  let side = new Float32Array(2*len);\n  for (i = 0; i < len; i++) {\n    side[2*i] = 1;\n    side[2*i+1] = -1;\n  }\n  const color = double_color(color_arr);\n  let geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('position', new THREE.BufferAttribute(position, 3));\n  geometry.addAttribute('previous', new THREE.BufferAttribute(previous, 3));\n  geometry.addAttribute('next', new THREE.BufferAttribute(next, 3));\n  geometry.addAttribute('side', new THREE.BufferAttribute(side, 1));\n  geometry.addAttribute('color', new THREE.BufferAttribute(color, 3));\n  return geometry;\n}\n\n// input arrays must be of the same length\nfunction wide_segments_geometry(vertex_arr, color_arr) {\n  // n input vertices => 2n output vertices, n triangles, 3n indexes\n  const len = vertex_arr.length;\n  let i;\n  let j;\n  const pos = double_pos(vertex_arr);\n  const position = new Float32Array(pos);\n  let other_vert = new Float32Array(6*len);\n  for (i = 0; i < 6 * len; i += 12) {\n    for (j = 0; j < 6; j++) other_vert[i+j] = pos[i+j+6];\n    for (; j < 12; j++) other_vert[i+j] = pos[i+j-6];\n  }\n  let side = new Float32Array(2*len);\n  for (i = 0; i < len; i++) {\n    side[2*i] = -1;\n    side[2*i+1] = 1;\n  }\n  let index = (2*len < 65536 ? new Uint16Array(3*len)\n                             : new Uint32Array(3*len));\n  const vert_order = [0, 1, 2, 0, 2, 3];\n  for (i = 0; i < len / 2; i++) {\n    for (j = 0; j < 6; j++) {\n      index[6*i+j] = 4*i + vert_order[j];\n    }\n  }\n  let geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('position', new THREE.BufferAttribute(position, 3));\n  geometry.addAttribute('other', new THREE.BufferAttribute(other_vert, 3));\n  geometry.addAttribute('side', new THREE.BufferAttribute(side, 1));\n  if (color_arr != null) {\n    const color = double_color(color_arr);\n    geometry.addAttribute('color', new THREE.BufferAttribute(color, 3));\n  }\n  geometry.setIndex(new THREE.BufferAttribute(index, 1));\n  return geometry;\n}\n\n\nconst wide_line_vert = [\n  'attribute vec3 previous;',\n  'attribute vec3 next;',\n  'attribute float side;',\n  'uniform vec2 win_size;',\n  'uniform float linewidth;',\n  'varying vec3 vcolor;',\n\n  'void main() {',\n  '  vcolor = color;',\n  '  mat4 mat = projectionMatrix * modelViewMatrix;',\n  '  vec2 dir1 = (mat * vec4(next - position, 0.0)).xy * win_size;',\n  '  float len = length(dir1);',\n  '  if (len > 0.0) dir1 /= len;',\n  '  vec2 dir2 = (mat * vec4(position - previous, 0.0)).xy * win_size;',\n  '  len = length(dir2);',\n  '  dir2 = len > 0.0 ? dir2 / len : dir1;',\n  '  vec2 tang = normalize(dir1 + dir2);',\n  '  vec2 normal = vec2(-tang.y, tang.x);',\n  // Now we have more or less a miter join. Bavel join could be more\n  // appropriate, but it'd require one more triangle and more complex shader.\n  // max() is a trade-off between too-long miters and too-thin lines.\n  // The outer vertex should not go too far, the inner is not a problem.\n  '  float outer = side * dot(dir2, normal);',\n  '  float angle_factor = max(dot(tang, dir2), outer > 0.0 ? 0.5 : 0.1);',\n  '  gl_Position = mat * vec4(position, 1.0);',\n  '  gl_Position.xy += side * linewidth / angle_factor * normal / win_size;',\n  '}'].join('\\n');\n\nconst wide_segments_vert = [\n  'attribute vec3 other;',\n  'attribute float side;',\n  'uniform vec2 win_size;',\n  'uniform float linewidth;',\n  'varying vec3 vcolor;',\n\n  'void main() {',\n  '  vcolor = color;',\n  '  mat4 mat = projectionMatrix * modelViewMatrix;',\n  '  vec2 dir = normalize((mat * vec4(position - other, 0.0)).xy);',\n  '  vec2 normal = vec2(-dir.y, dir.x);',\n  '  gl_Position = mat * vec4(position, 1.0);',\n  '  gl_Position.xy += side * linewidth * normal / win_size;',\n  '}'].join('\\n');\n\nconst wide_line_frag = [\n  '#include <fog_pars_fragment>',\n  'varying vec3 vcolor;',\n  'void main() {',\n  '  gl_FragColor = vec4(vcolor, 1.0);',\n  '#include <fog_fragment>',\n  '}'].join('\\n');\n\n\nfunction interpolate_vertices(segment, smooth) /*:Vector3[]*/{\n  let vertices = [];\n  for (let i = 0; i < segment.length; i++) {\n    const xyz = segment[i].xyz;\n    vertices.push(new THREE.Vector3(xyz[0], xyz[1], xyz[2]));\n  }\n  if (!smooth || smooth < 2) return vertices;\n  const curve = new THREE.CatmullRomCurve3(vertices);\n  return curve.getPoints((segment.length - 1) * smooth);\n}\n\nfunction interpolate_colors(colors, smooth) {\n  if (!smooth || smooth < 2) return colors;\n  let ret = [];\n  for (let i = 0; i < colors.length - 1; i++) {\n    for (let j = 0; j < smooth; j++) {\n      // currently we don't really interpolate colors\n      ret.push(colors[i]);\n    }\n  }\n  ret.push(colors[colors.length - 1]);\n  return ret;\n}\n\n// a simplistic linear interpolation, no need to SLERP\nfunction interpolate_directions(dirs, smooth) {\n  smooth = smooth || 1;\n  let ret = [];\n  let i;\n  for (i = 0; i < dirs.length - 1; i++) {\n    const p = dirs[i];\n    const n = dirs[i+1];\n    for (let j = 0; j < smooth; j++) {\n      const an = j / smooth;\n      const ap = 1 - an;\n      ret.push(ap*p[0] + an*n[0], ap*p[1] + an*n[1], ap*p[2] + an*n[2]);\n    }\n  }\n  ret.push(dirs[i][0], dirs[i][1], dirs[i][2]);\n  return ret;\n}\n\nfunction make_uniforms(params) {\n  let uniforms = {\n    fogNear: { value: null },  // will be updated in setProgram()\n    fogFar: { value: null },\n    fogColor: { value: null },\n  };\n  for (let p in params) {  // eslint-disable-line guard-for-in\n    uniforms[p] = { value: params[p] };\n  }\n  return uniforms;\n}\n\nconst ribbon_vert = [\n  //'attribute vec3 normal;' is added by default for ShaderMaterial\n  'uniform float shift;',\n  'varying vec3 vcolor;',\n  'void main() {',\n  '  vcolor = color;',\n  '  vec3 pos = position + shift * normalize(normal);',\n  '  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);',\n  '}'].join('\\n');\n\nconst ribbon_frag = [\n  '#include <fog_pars_fragment>',\n  'varying vec3 vcolor;',\n  'void main() {',\n  '  gl_FragColor = vec4(vcolor, 1.0);',\n  '#include <fog_fragment>',\n  '}'].join('\\n');\n\n// 9-line ribbon\nexport function makeRibbon(vertices /*:Atom[]*/,\n                           colors /*:Color[]*/,\n                           tangents /*:Num3[]*/,\n                           smoothness /*:number*/) {\n  const vertex_arr = interpolate_vertices(vertices, smoothness);\n  const color_arr = interpolate_colors(colors, smoothness);\n  const tang_arr = interpolate_directions(tangents, smoothness);\n  let obj = new THREE.Object3D();\n  let geometry = makeSimpleGeometry(vertex_arr, color_arr);\n  const tan = new Float32Array(tang_arr);\n  // it's not 'normal', but it doesn't matter\n  geometry.addAttribute('normal', new THREE.BufferAttribute(tan, 3));\n  const material0 = new THREE.ShaderMaterial({\n    uniforms: make_uniforms({shift: 0}),\n    vertexShader: ribbon_vert,\n    fragmentShader: ribbon_frag,\n    fog: true,\n    vertexColors: THREE.VertexColors,\n  });\n  for (let n = -4; n < 5; n++) {\n    let material = n === 0 ? material0 : material0.clone();\n    material.uniforms.shift.value = 0.1 * n;\n    obj.add(new THREE.Line(geometry, material));\n  }\n  return obj;\n}\n\n\nexport\nfunction makeChickenWire(data /*:{vertices: number[], segments: number[]}*/,\n                         parameters /*:{[key: string]: any}*/) {\n  let geom = new THREE.BufferGeometry();\n  const position = new Float32Array(data.vertices);\n  geom.addAttribute('position', new THREE.BufferAttribute(position, 3));\n  /* old version - mesh instead of lines\n  geom.setIndex(new THREE.BufferAttribute(new Uint32Array(data.faces), 1));\n  var material = new THREE.MeshBasicMaterial({\n    color: this.config.colors[mtype],\n    wireframe: true,\n    wireframeLinewidth: this.config.map_line\n  });\n  var obj = new THREE.Mesh(geom, material);\n  */\n\n  // Although almost all browsers support OES_element_index_uint nowadays,\n  // use Uint32 indexes only when needed.\n  const arr = (data.vertices.length < 3*65536 ? new Uint16Array(data.segments)\n                                              : new Uint32Array(data.segments));\n  //console.log('arr len:', data.vertices.length, data.segments.length);\n  geom.setIndex(new THREE.BufferAttribute(arr, 1));\n  let material = new THREE.LineBasicMaterial(parameters);\n  return new THREE.LineSegments(geom, material);\n}\n\n\nconst grid_vert = [\n  'uniform vec3 ucolor;',\n  'uniform vec3 fogColor;',\n  'varying vec4 vcolor;',\n  'void main() {',\n  '  vec2 scale = vec2(projectionMatrix[0][0], projectionMatrix[1][1]);',\n  '  float z = position.z;',\n  '  float fogFactor = (z > 0.5 ? 0.2 : 0.7);',\n  '  float alpha = 0.8 * smoothstep(z > 1.5 ? -10.0 : 0.01, 0.1, scale.y);',\n  '  vcolor = vec4(mix(ucolor, fogColor, fogFactor), alpha);',\n  '  gl_Position = vec4(position.xy * scale, -0.99, 1.0);',\n  '}'].join('\\n');\n\nconst grid_frag = [\n  'varying vec4 vcolor;',\n  'void main() {',\n  '  gl_FragColor = vcolor;',\n  '}'].join('\\n');\n\nexport function makeGrid() {\n  const N = 50;\n  let pos = [];\n  for (let i = -N; i <= N; i++) {\n    let z = 0; // z only marks major/minor axes\n    if (i % 5 === 0) z = i % 2 === 0 ? 2 : 1;\n    pos.push(-N, i, z, N, i, z);  // horizontal line\n    pos.push(i, -N, z, i, N, z);  // vertical line\n  }\n  let geom = new THREE.BufferGeometry();\n  geom.addAttribute('position',\n                    new THREE.BufferAttribute(new Float32Array(pos), 3));\n  let material = new THREE.ShaderMaterial({\n    uniforms: make_uniforms({ucolor: new THREE.Color(0x888888)}),\n    //linewidth: 3,\n    vertexShader: grid_vert,\n    fragmentShader: grid_frag,\n    fog: true, // no really, but we use fogColor\n  });\n  material.transparent = true;\n  let obj = new THREE.LineSegments(geom, material);\n  obj.frustumCulled = false;  // otherwise the renderer could skip it\n  obj.color_value = material.uniforms.ucolor.value; // shortcut\n  return obj;\n}\n\n\nfunction makeSimpleLineMaterial(options) {\n  let mparams = {};\n  mparams.linewidth = options.linewidth;\n  if (options.color === undefined) {\n    mparams.vertexColors = THREE.VertexColors;\n  } else {\n    mparams.color = options.color;\n  }\n  return new THREE.LineBasicMaterial(mparams);\n}\n\nfunction makeThickLineMaterial(options) {\n  let uniforms = make_uniforms({\n    linewidth: options.linewidth,\n    win_size: options.win_size,\n  });\n  return new THREE.ShaderMaterial({\n    uniforms: uniforms,\n    vertexShader: options.segments ? wide_segments_vert : wide_line_vert,\n    fragmentShader: wide_line_frag,\n    fog: true,\n    vertexColors: THREE.VertexColors,\n  });\n}\n\nexport function makeLineMaterial(options /*:{[key: string]: mixed}*/) {\n  return options.gl_lines ? makeSimpleLineMaterial(options)\n                          : makeThickLineMaterial(options);\n}\n\nfunction makeSimpleGeometry(vertices /*:Vector3[] | Atom[]*/,\n                            colors /*:?Color[]*/) {\n  let geometry = new THREE.BufferGeometry();\n  const pos = new Float32Array(vertices.length * 3);\n  let i;\n  if (vertices && vertices[0].xyz) {\n    for (i = 0; i < vertices.length; i++) {\n      // $FlowFixMe: disjoint unions not smart enough\n      const xyz /*:Num3*/ = vertices[i].xyz;\n      pos[3*i] = xyz[0];\n      pos[3*i+1] = xyz[1];\n      pos[3*i+2] = xyz[2];\n    }\n  } else {\n    for (i = 0; i < vertices.length; i++) {\n      // $FlowFixMe\n      const v /*:Vector3*/ = vertices[i];\n      pos[3*i] = v.x;\n      pos[3*i+1] = v.y;\n      pos[3*i+2] = v.z;\n    }\n  }\n  geometry.addAttribute('position', new THREE.BufferAttribute(pos, 3));\n  if (colors != null) {\n    const col = new Float32Array(colors.length * 3);\n    for (i = 0; i < colors.length; i++) {\n      const c = colors[i];\n      col[3*i] = c.r;\n      col[3*i+1] = c.g;\n      col[3*i+2] = c.b;\n    }\n    geometry.addAttribute('color', new THREE.BufferAttribute(col, 3));\n  }\n  return geometry;\n}\n\nfunction makeThickLine(material, vertices, colors) {\n  let mesh = new THREE.Mesh(wide_line_geometry(vertices, colors), material);\n  mesh.drawMode = THREE.TriangleStripDrawMode;\n  mesh.raycast = line_raycast;\n  return mesh;\n}\n\nexport function makeLine(material /*:THREE.Material*/,\n                         vertices /*:Vector3[]*/,\n                         colors /*:Color[]*/) {\n  if (material.isShaderMaterial) {\n    return makeThickLine(material, vertices, colors);\n  } else {\n    return new THREE.Line(makeSimpleGeometry(vertices, colors), material);\n  }\n}\n\nfunction makeThickLineSegments(material, vertices, colors) {\n  let mesh = new THREE.Mesh(wide_segments_geometry(vertices, colors), material);\n  mesh.raycast = line_raycast;\n  return mesh;\n}\n\nexport function makeLineSegments(material /*:THREE.Material*/,\n                                 vertices /*:Vector3[] | Atom[]*/,\n                                 colors /*:?Color[]*/) {\n  if (material.isShaderMaterial) {\n    return makeThickLineSegments(material, vertices, colors);\n  } else {\n    return new THREE.LineSegments(makeSimpleGeometry(vertices, colors),\n                                  material);\n  }\n}\n\nconst wheel_vert = [\n  'uniform float size;',\n  'varying vec3 vcolor;',\n  'void main() {',\n  '  vcolor = color;',\n  '  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);',\n  '  gl_PointSize = size;',\n  '}'].join('\\n');\n\n// not sure how portable it is\nconst wheel_frag = [\n  '#include <fog_pars_fragment>',\n  'varying vec3 vcolor;',\n  'void main() {',\n  '  vec2 diff = gl_PointCoord - vec2(0.5, 0.5);',\n  '  if (dot(diff, diff) >= 0.25) discard;',\n  '  gl_FragColor = vec4(vcolor, 1.0);',\n  '#include <fog_fragment>',\n  '}'].join('\\n');\n\nexport function makeWheels(atom_arr /*:Atom[]*/,\n                           color_arr /*:Color[]*/,\n                           size /*:number*/) {\n  let geometry = makeSimpleGeometry(atom_arr, color_arr);\n  let material = new THREE.ShaderMaterial({\n    uniforms: make_uniforms({size: size}),\n    vertexShader: wheel_vert,\n    fragmentShader: wheel_frag,\n    fog: true,\n    vertexColors: THREE.VertexColors,\n  });\n  let obj = new THREE.Points(geometry, material);\n  // currently we use only lines for picking\n  obj.raycast = function () {};\n  return obj;\n}\n\n\n// based on THREE.Line.prototype.raycast(), but skipping duplicated points\nlet inverseMatrix = new THREE.Matrix4();\nlet ray = new THREE.Ray();\n// this function will be put on prototype\n/* eslint-disable no-invalid-this */\nfunction line_raycast(raycaster, intersects) {\n  const precisionSq = raycaster.linePrecision * raycaster.linePrecision;\n  inverseMatrix.getInverse(this.matrixWorld);\n  ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n  let vStart = new THREE.Vector3();\n  let vEnd = new THREE.Vector3();\n  let interSegment = new THREE.Vector3();\n  let interRay = new THREE.Vector3();\n  const step = this.drawMode === THREE.TriangleStripDrawMode ? 1 : 2;\n  const positions = this.geometry.attributes.position.array;\n  for (let i = 0, l = positions.length / 6 - 1; i < l; i += step) {\n    vStart.fromArray(positions, 6 * i);\n    vEnd.fromArray(positions, 6 * i + 6);\n    let distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n    if (distSq > precisionSq) continue;\n    interRay.applyMatrix4(this.matrixWorld);\n    const distance = raycaster.ray.origin.distanceTo(interRay);\n    if (distance < raycaster.near || distance > raycaster.far) continue;\n    intersects.push({\n      distance: distance,\n      point: interSegment.clone().applyMatrix4(this.matrixWorld),\n      index: i,\n      object: this,\n      line_dist: Math.sqrt(distSq), // extra property, not in Three.js\n    });\n  }\n}\n\nfunction makeCanvasWithText(text, options) {\n  if (typeof document === 'undefined') return;  // for testing on node\n  let canvas = document.createElement('canvas');\n  // Canvas size should be 2^N.\n  canvas.width = 256;  // arbitrary limit, to keep it simple\n  canvas.height = 16;  // font size\n  let context = canvas.getContext('2d');\n  if (!context) return null;\n  context.font = (options.font || 'bold 14px') + ' sans-serif';\n  //context.fillStyle = 'green';\n  //context.fillRect(0, 0, canvas.width, canvas.height);\n  context.textBaseline = 'bottom';\n  if (options.color) context.fillStyle = options.color;\n  context.fillText(text, 0, canvas.height);\n  return canvas;\n}\n\nconst label_vert = [\n  'uniform vec2 canvas_size;',\n  'uniform vec2 win_size;',\n  'varying vec2 vUv;',\n  'void main() {',\n  '  vUv = uv;',\n  '  vec2 rel_offset = vec2(0.02, -0.3);',\n  '  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);',\n  '  gl_Position.xy += (uv + rel_offset) * 2.0 * canvas_size / win_size;',\n  '  gl_Position.z += 1.0 * projectionMatrix[2][2];',\n  '}'].join('\\n');\n\nconst label_frag = [\n  '#include <fog_pars_fragment>',\n  'varying vec2 vUv;',\n  'uniform sampler2D map;',\n  'void main() {',\n  '  gl_FragColor = texture2D(map, vUv);',\n  '#include <fog_fragment>',\n  '}'].join('\\n');\n\n\nexport function makeLabel(text /*:string*/, options /*:{[key:string]: any}*/) {\n  const canvas = makeCanvasWithText(text, options);\n  if (!canvas) return;\n  let texture = new THREE.Texture(canvas);\n  texture.needsUpdate = true;\n\n  // Rectangle geometry.\n  let geometry = new THREE.BufferGeometry();\n  const pos = options.pos;\n  const position = new Float32Array([].concat(pos, pos, pos, pos));\n  const uvs = new Float32Array([0, 1, 1, 1, 0, 0, 1, 0]);\n  const indices = new Uint16Array([0, 2, 1, 2, 3, 1]);\n  geometry.setIndex(new THREE.BufferAttribute(indices, 1));\n  geometry.addAttribute('position', new THREE.BufferAttribute(position, 3));\n  geometry.addAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n\n  let material = new THREE.ShaderMaterial({\n    uniforms: make_uniforms({map: texture,\n                             canvas_size: [canvas.width, canvas.height],\n                             win_size: options.win_size}),\n    vertexShader: label_vert,\n    fragmentShader: label_frag,\n    fog: true,\n  });\n  material.transparent = true;\n  let mesh = new THREE.Mesh(geometry, material);\n  mesh.remake = function (text, options) {\n    texture.image = makeCanvasWithText(text, options);\n    texture.needsUpdate = true;\n  };\n  return mesh;\n}\n\n// Add vertices of a 3d cross (representation of an unbonded atom)\nexport\nfunction addXyzCross(vertices /*:Vector3[]*/, xyz /*:Num3*/, r /*:number*/) {\n  vertices.push(new THREE.Vector3(xyz[0]-r, xyz[1], xyz[2]));\n  vertices.push(new THREE.Vector3(xyz[0]+r, xyz[1], xyz[2]));\n  vertices.push(new THREE.Vector3(xyz[0], xyz[1]-r, xyz[2]));\n  vertices.push(new THREE.Vector3(xyz[0], xyz[1]+r, xyz[2]));\n  vertices.push(new THREE.Vector3(xyz[0], xyz[1], xyz[2]-r));\n  vertices.push(new THREE.Vector3(xyz[0], xyz[1], xyz[2]+r));\n}\n","// @flow\n\nimport * as THREE from 'three';\nimport { makeLineMaterial, makeLineSegments, makeLine, makeRibbon,\n         makeChickenWire, makeGrid, makeWheels, makeCube,\n         makeRgbBox, makeLabel, addXyzCross } from './lines.js';\nimport { ElMap } from './elmap.js';\nimport { Model } from './model.js';\n\n\nconst ColorSchemes = [ // Viewer.prototype.ColorSchemes\n  { // generally mimicks Coot\n    name: 'coot dark',\n    bg: 0x000000,\n    fg: 0xFFFFFF,\n    map_den: 0x3362B2,\n    map_pos: 0x298029,\n    map_neg: 0x8B2E2E,\n    center: 0xC997B0,\n    // atoms\n    H: 0x858585, // H is normally invisible\n    // C, N and O are taken approximately (by color-picker) from coot\n    C: 0xb3b300,\n    N: 0x7EAAFB,\n    O: 0xF24984,\n    S: 0x40ff40, // S in coot is too similar to C, here it is greener\n    // Coot doesn't define other colors (?)\n    MG: 0xc0c0c0,\n    P: 0xffc040,\n    CL: 0xa0ff60,\n    CA: 0xffffff,\n    MN: 0xff90c0,\n    FE: 0xa03000,\n    NI: 0x00ff80,\n    def: 0xa0a0a0, // default atom color\n  },\n  // scheme made of \"solarized\" colors (http://ethanschoonover.com/solarized):\n  // base03  base02  base01  base00  base0   base1   base2   base3\n  // #002b36 #073642 #586e75 #657b83 #839496 #93a1a1 #eee8d5 #fdf6e3\n  // yellow  orange  red     magenta violet  blue    cyan    green\n  // #b58900 #cb4b16 #dc322f #d33682 #6c71c4 #268bd2 #2aa198 #859900\n  {\n    name: 'solarized dark',\n    bg: 0x002b36,\n    fg: 0xfdf6e3,\n    map_den: 0x268bd2,\n    map_pos: 0x859900,\n    map_neg: 0xd33682,\n    center: 0xfdf6e3,\n    H: 0x586e75,\n    C: 0x93a1a1,\n    N: 0x6c71c4,\n    O: 0xcb4b16,\n    S: 0xb58900,\n    def: 0xeee8d5,\n  },\n  {\n    name: 'solarized light',\n    bg: 0xfdf6e3,\n    fg: 0x002b36,\n    map_den: 0x268bd2,\n    map_pos: 0x859900,\n    map_neg: 0xd33682,\n    center: 0x002b36,\n    H: 0x93a1a1,\n    C: 0x586e75,\n    N: 0x6c71c4,\n    O: 0xcb4b16,\n    S: 0xb58900,\n    def: 0x073642,\n  },\n  { // like in Coot after Edit > Background Color > White\n    name: 'coot light',\n    bg: 0xFFFFFF,\n    fg: 0x000000,\n    map_den: 0x3362B2,\n    map_pos: 0x298029,\n    map_neg: 0x8B2E2E,\n    center: 0xC7C769,\n    H: 0x999999,\n    C: 0xA96464,\n    N: 0x1C51B3,\n    O: 0xC33869,\n    S: 0x9E7B3D,\n    def: 0x808080,\n  },\n];\n\n// map 2d position to sphere with radius 1.\nfunction project_on_ball(x, y) {\n  let z = 0;\n  const length_sq = x * x + y * y;\n  if (length_sq < 1) {  // in ellipse\n    z = Math.sqrt(1.0 - length_sq);\n  } else {  // in a corner\n    const length = Math.sqrt(length_sq);\n    x /= length;\n    y /= length;\n  }\n  return [x, y, z];  // guaranteed to be normalized\n}\n\nfunction scale_by_height(value, size) { // for scaling bond_line\n  return value * size[1] / 700;\n}\n\nconst STATE = {NONE: -1, ROTATE: 0, PAN: 1, ZOOM: 2, PAN_ZOOM: 3, SLAB: 4,\n               ROLL: 5, AUTO_ROTATE: 6, GO: 7};\n\n\n// based on three.js/examples/js/controls/OrthographicTrackballControls.js\nfunction Controls(camera, target) {\n  const auto_speed = 1.0;\n  let _state = STATE.NONE;\n  let _rotate_start = new THREE.Vector3();\n  let _rotate_end = new THREE.Vector3();\n  let _zoom_start = new THREE.Vector2();\n  let _zoom_end = new THREE.Vector2();\n  let _pinch_start = 0;\n  let _pinch_end = 0;\n  let _pan_start = new THREE.Vector2();\n  let _pan_end = new THREE.Vector2();\n  let _panned = true;\n  let _rotating = null;\n  let _auto_stamp = null;\n  let _go_func = null;\n\n  // the far plane is more distant from the target than the near plane (3:1)\n  this.slab_width = [2.5, 7.5];\n\n  function rotate_camera(eye) {\n    let quat = new THREE.Quaternion();\n    quat.setFromUnitVectors(_rotate_end, _rotate_start);\n    eye.applyQuaternion(quat);\n    camera.up.applyQuaternion(quat);\n    _rotate_end.applyQuaternion(quat);\n    _rotate_start.copy(_rotate_end);\n  }\n\n  function zoom_camera(eye) {\n    const dx = _zoom_end.x - _zoom_start.x;\n    const dy = _zoom_end.y - _zoom_start.y;\n    if (_state === STATE.ZOOM) {\n      camera.zoom /= (1 - dx + dy);\n    } else if (_state === STATE.SLAB) {\n      target.addScaledVector(eye, -5.0 / eye.length() * dy);\n    } else if (_state === STATE.ROLL) {\n      camera.up.applyAxisAngle(eye, 0.05 * (dx - dy));\n    }\n    _zoom_start.copy(_zoom_end);\n    return _state === STATE.SLAB ? 10*dx : null;\n  }\n\n  function pan_camera(eye) {\n    let dx = _pan_end.x - _pan_start.x;\n    let dy = _pan_end.y - _pan_start.y;\n    dx *= 0.5 * (camera.right - camera.left) / camera.zoom;\n    dy *= 0.5 * (camera.bottom - camera.top) / camera.zoom;\n    let pan = eye.clone().cross(camera.up).setLength(dx);\n    pan.addScaledVector(camera.up, dy / camera.up.length());\n    camera.position.add(pan);\n    target.add(pan);\n    _pan_start.copy(_pan_end);\n  }\n\n  this.toggle_auto = function (param) {\n    if (_state === STATE.AUTO_ROTATE && typeof param === typeof _rotating) {\n      _state = STATE.NONE;\n    } else {\n      _state = STATE.AUTO_ROTATE;\n      _auto_stamp = null;\n      _rotating = param;\n    }\n  };\n\n  this.is_going = function () { return _state === STATE.GO; };\n\n  this.is_moving = function () { return _state !== STATE.NONE; };\n\n  function auto_rotate(eye) {\n    _rotate_start.copy(eye).normalize();\n    const now = Date.now();\n    const elapsed = (_auto_stamp !== null ? now - _auto_stamp : 16.7);\n    let speed = 1.8e-5 * elapsed * auto_speed;\n    _auto_stamp = now;\n    if (_rotating === true) {\n      speed = -speed;\n    } else if (_rotating !== false) {\n      _rotating += 0.02;\n      speed = 4e-5 * auto_speed * Math.cos(_rotating);\n    }\n    _rotate_end.crossVectors(camera.up, eye).multiplyScalar(speed)\n      .add(_rotate_start);\n  }\n\n  this.update = function () {\n    let changed = false;\n    let eye = camera.position.clone().sub(target);\n    if (_state === STATE.AUTO_ROTATE) {\n      auto_rotate(eye);\n    }\n    if (!_rotate_start.equals(_rotate_end)) {\n      rotate_camera(eye);\n      changed = true;\n    }\n    if (_pinch_end !== _pinch_start) {\n      camera.zoom *= _pinch_end / _pinch_start;\n      _pinch_start = _pinch_end;\n      changed = true;\n    }\n    if (!_zoom_end.equals(_zoom_start)) {\n      const dslab = zoom_camera(eye);\n      if (dslab) {\n        this.slab_width[0] = Math.max(this.slab_width[0] + dslab, 0.01);\n        this.slab_width[1] = Math.max(this.slab_width[1] + dslab, 0.01);\n      }\n      changed = true;\n    }\n    if (!_pan_end.equals(_pan_start)) {\n      pan_camera(eye);\n      _panned = true;\n      changed = true;\n    }\n    camera.position.addVectors(target, eye);\n    if (_state === STATE.GO && _go_func) {\n      _go_func();\n      changed = true;\n    }\n    camera.lookAt(target);\n    return changed;\n  };\n\n  this.start = function (new_state, x, y, dist) {\n    if (_state === STATE.NONE || _state === STATE.AUTO_ROTATE) {\n      _state = new_state;\n    }\n    this.move(x, y, dist);\n    switch (_state) {\n      case STATE.ROTATE:\n        _rotate_start.copy(_rotate_end);\n        break;\n      case STATE.ZOOM:\n      case STATE.SLAB:\n      case STATE.ROLL:\n        _zoom_start.copy(_zoom_end);\n        break;\n      case STATE.PAN:\n        _pan_start.copy(_pan_end);\n        _panned = false;\n        break;\n      case STATE.PAN_ZOOM:\n        _pinch_start = _pinch_end;\n        _pan_start.copy(_pan_end);\n        break;\n    }\n  };\n\n  this.move = function (x, y, dist) {\n    switch (_state) {\n      case STATE.ROTATE: {\n        const xyz = project_on_ball(x, y);\n        //console.log(camera.projectionMatrix);\n        //console.log(camera.matrixWorld);\n        // TODO maybe use project()/unproject()/applyProjection()\n        const eye = camera.position.clone().sub(target);\n        _rotate_end.crossVectors(camera.up, eye).setLength(xyz[0]);\n        _rotate_end.addScaledVector(camera.up, xyz[1] / camera.up.length());\n        _rotate_end.addScaledVector(eye, xyz[2] / eye.length());\n        break;\n      }\n      case STATE.ZOOM:\n      case STATE.SLAB:\n      case STATE.ROLL:\n        _zoom_end.set(x, y);\n        break;\n      case STATE.PAN:\n        _pan_end.set(x, y);\n        break;\n      case STATE.PAN_ZOOM:\n        _pan_end.set(x, y);\n        _pinch_end = dist;\n        break;\n    }\n  };\n\n  this.stop = function () {\n    let ret = null;\n    if (_state === STATE.PAN && !_panned) ret = _pan_start;\n    _state = STATE.NONE;\n    _rotate_start.copy(_rotate_end);\n    _pinch_start = _pinch_end;\n    _pan_start.copy(_pan_end);\n    return ret;\n  };\n\n  this.go_to = function (targ, cam_pos, cam_up, steps) {\n    if (targ instanceof Array) {\n      targ = new THREE.Vector3(targ[0], targ[1], targ[2]);\n    }\n    if ((!targ || targ.distanceToSquared(target) < 0.001) &&\n        (!cam_pos || cam_pos.distanceToSquared(camera.position) < 0.1) &&\n        (!cam_up || cam_up.distanceToSquared(camera.up) < 0.1)) {\n      return;\n    }\n    _state = STATE.GO;\n    steps = (steps || 60) / auto_speed;\n    let alphas = [];\n    let prev_pos = 0;\n    for (let i = 1; i <= steps; ++i) {\n      let pos = i / steps;\n      // quadratic easing\n      pos = pos < 0.5 ? 2 * pos * pos : -2 * pos * (pos-2) - 1;\n      alphas.push((pos - prev_pos) / (1 - prev_pos));\n      prev_pos = pos;\n    }\n    _go_func = function () {\n      const a = alphas.shift();\n      if (targ) {\n        // unspecified cam_pos - camera stays in the same distance to target\n        if (!cam_pos) camera.position.sub(target);\n        target.lerp(targ, a);\n        if (!cam_pos) camera.position.add(target);\n      }\n      if (cam_pos) camera.position.lerp(cam_pos, a);\n      if (cam_up) camera.up.lerp(cam_up, a);\n      if (alphas.length === 0) {\n        _state = STATE.NONE;\n        _go_func = null;\n      }\n    };\n  };\n}\n\n\n// options handled by select_next()\n\nconst COLOR_AIMS = ['element', 'B-factor', 'occupancy', 'index', 'chain'];\nconst RENDER_STYLES = ['lines', 'trace', 'ribbon'/*, 'ball&stick'*/];\nconst MAP_STYLES = ['marching cubes', 'squarish'/*, 'snapped MC'*/];\nconst LINE_STYLES = ['normal', 'simplistic'];\nconst LABEL_FONTS = ['bold 14px', '14px', '16px', 'bold 16px'];\n\nfunction rainbow_value(v, vmin, vmax) {\n  let c = new THREE.Color(0xe0e0e0);\n  if (vmin < vmax) {\n    const ratio = (v - vmin) / (vmax - vmin);\n    const hue = (240 - (240 * ratio)) / 360;\n    c.setHSL(hue, 1.0, 0.5);\n  }\n  return c;\n}\n\nfunction color_by(style, atoms, elem_colors) {\n  let color_func;\n  let i;\n  const last_atom = atoms[atoms.length-1];\n  if (style === 'index') {\n    color_func = function (atom) {\n      return rainbow_value(atom.i_seq, 0, last_atom.i_seq);\n    };\n  } else if (style === 'B-factor') {\n    let vmin = Infinity;\n    let vmax = -Infinity;\n    for (i = 0; i < atoms.length; i++) {\n      const v = atoms[i].b;\n      if (v > vmax) vmax = v;\n      if (v < vmin) vmin = v;\n    }\n    //console.log('B-factors in [' + vmin + ', ' + vmax + ']');\n    color_func = function (atom) {\n      return rainbow_value(atom.b, vmin, vmax);\n    };\n  } else if (style === 'occupancy') {\n    color_func = function (atom) {\n      return rainbow_value(atom.occ, 0, 1);\n    };\n  } else if (style === 'chain') {\n    color_func = function (atom) {\n      return rainbow_value(atom.chain_index, 0, last_atom.chain_index);\n    };\n  } else { // element\n    color_func = function (atom) {\n      return elem_colors[atom.element] || elem_colors.def;\n    };\n  }\n  let colors = [];\n  for (i = 0; i < atoms.length; i++) {\n    colors.push(color_func(atoms[i]));\n  }\n  return colors;\n}\n\nfunction MapBag(map, is_diff_map) {\n  this.map = map;\n  this.name = '';\n  this.isolevel = is_diff_map ? 3.0 : 1.5;\n  this.visible = true;\n  this.types = is_diff_map ? ['map_pos', 'map_neg'] : ['map_den'];\n  this.block_ctr = new THREE.Vector3(Infinity, 0, 0);\n  this.el_objects = []; // three.js objects\n}\n\n\nfunction ModelBag(model, config, win_size) {\n  this.model = model;\n  this.name = '';\n  this.visible = true;\n  this.conf = config;\n  this.win_size = win_size;\n  this.atomic_objects = null; // list of three.js objects\n}\n\nModelBag.prototype.get_visible_atoms = function () {\n  const atoms = this.model.atoms;\n  if (this.conf.hydrogens || !this.model.has_hydrogens) {\n    return atoms;\n  }\n  const non_h = [];\n  for (let i = 0; i < atoms.length; i++) {\n    if (atoms[i].element !== 'H') {\n      non_h.push(atoms[i]);\n    }\n  }\n  return non_h;\n};\n\nModelBag.prototype.add_bonds = function (ligands_only, ball_size) {\n  const visible_atoms = this.get_visible_atoms();\n  const color_style = ligands_only ? 'element' : this.conf.color_aim;\n  const colors = color_by(color_style, visible_atoms, this.conf.colors);\n  let vertex_arr /*:THREE.Vector3[]*/ = [];\n  let color_arr = [];\n  const opt = { hydrogens: this.conf.hydrogens,\n                ligands_only: ligands_only,\n                balls: this.conf.render_style === 'ball&stick' };\n  for (let i = 0; i < visible_atoms.length; i++) {\n    const atom = visible_atoms[i];\n    const color = colors[i];\n    if (ligands_only && !atom.is_ligand) continue;\n    if (atom.bonds.length === 0 && !opt.balls) { // nonbonded, draw star\n      addXyzCross(vertex_arr, atom.xyz, 0.7);\n      for (let n = 0; n < 6; n++) {\n        color_arr.push(color);\n      }\n    } else { // bonded, draw lines\n      for (let j = 0; j < atom.bonds.length; j++) {\n        const other = this.model.atoms[atom.bonds[j]];\n        if (!opt.hydrogens && other.element === 'H') continue;\n        // Coot show X-H bonds as thinner lines in a single color.\n        // Here we keep it simple and render such bonds like all others.\n        if (opt.ligands_only && !other.is_ligand) continue;\n        const mid = atom.midpoint(other);\n        const vmid = new THREE.Vector3(mid[0], mid[1], mid[2]);\n        const vatom = new THREE.Vector3(atom.xyz[0], atom.xyz[1], atom.xyz[2]);\n        if (opt.balls) {\n          const lerp_factor = vatom.distanceTo(vmid) / ball_size;\n          vatom.lerp(vmid, lerp_factor);\n        }\n        vertex_arr.push(vatom, vmid);\n        color_arr.push(color, color);\n      }\n    }\n  }\n  //console.log('add_bonds() vertex count: ' + vertex_arr.length);\n  const linewidth = scale_by_height(this.conf.bond_line, this.win_size);\n  const use_gl_lines = this.conf.line_style === 'simplistic';\n  const material = makeLineMaterial({\n    gl_lines: use_gl_lines,\n    linewidth: linewidth,\n    win_size: this.win_size,\n    segments: true,\n  });\n  this.atomic_objects.push(makeLineSegments(material, vertex_arr, color_arr));\n  if (opt.balls) {\n    this.atomic_objects.push(makeWheels(visible_atoms, colors, ball_size));\n  } else if (!use_gl_lines && !ligands_only) {\n    // wheels (discs) as simplistic round caps\n    this.atomic_objects.push(makeWheels(visible_atoms, colors, linewidth));\n  }\n};\n\nModelBag.prototype.add_trace = function () {\n  const segments = this.model.extract_trace();\n  const visible_atoms = [].concat.apply([], segments);\n  const colors = color_by(this.conf.color_aim, visible_atoms, this.conf.colors);\n  const material = makeLineMaterial({\n    gl_lines: this.conf.line_style === 'simplistic',\n    linewidth: scale_by_height(this.conf.bond_line, this.win_size),\n    win_size: this.win_size,\n  });\n  let k = 0;\n  for (let i = 0; i < segments.length; i++) {\n    const seg = segments[i];\n    const color_slice = colors.slice(k, k + seg.length);\n    k += seg.length;\n    const line = makeLine(material, seg, color_slice);\n    this.atomic_objects.push(line);\n  }\n};\n\nModelBag.prototype.add_ribbon = function (smoothness) {\n  const segments = this.model.extract_trace();\n  const res_map = this.model.get_residues();\n  const visible_atoms = [].concat.apply([], segments);\n  const colors = color_by(this.conf.color_aim, visible_atoms, this.conf.colors);\n  let k = 0;\n  for (let i = 0; i < segments.length; i++) {\n    const seg = segments[i];\n    let tangents = [];\n    let last = [0, 0, 0];\n    for (let j = 0; j < seg.length; j++) {\n      const residue = res_map[seg[j].resid()];\n      const tang = this.model.calculate_tangent_vector(residue);\n      // untwisting (usually applies to beta-strands)\n      if (tang[0]*last[0] + tang[1]*last[1] + tang[2]*last[2] < 0) {\n        tang[0] = -tang[0];\n        tang[1] = -tang[1];\n        tang[2] = -tang[2];\n      }\n      tangents.push(tang);\n      last = tang;\n    }\n    const color_slice = colors.slice(k, k + seg.length);\n    k += seg.length;\n    const obj = makeRibbon(seg, color_slice, tangents, smoothness);\n    this.atomic_objects.push(obj);\n  }\n};\n\nexport function Viewer(options /*: {[key: string]: any}*/) {\n  // rendered objects\n  this.model_bags = [];\n  this.map_bags = [];\n  this.decor = {cell_box: null, selection: null, zoom_grid: makeGrid() };\n  this.labels = {};\n  this.nav = null;\n\n  this.config = {\n    bond_line: 4.0, // ~ to height, like in Coot (see scale_by_height())\n    map_line: 1.25,  // for any height\n    map_radius: 10.0,\n    map_style: MAP_STYLES[0],\n    render_style: RENDER_STYLES[0],\n    color_aim: COLOR_AIMS[0],\n    line_style: LINE_STYLES[0],\n    label_font: LABEL_FONTS[0],\n    colors: this.ColorSchemes[0],\n    hydrogens: false,\n  };\n  this.set_colors();\n  this.window_size = [1, 1]; // it will be set in resize()\n  this.window_offset = [0, 0];\n\n  this.last_ctr = new THREE.Vector3(Infinity, 0, 0);\n  this.selected_atom = null;\n  this.active_model_bag = null;\n  this.scene = new THREE.Scene();\n  this.scene.fog = new THREE.Fog(this.config.colors.bg, 0, 1);\n  this.light = new THREE.AmbientLight(0xffffff);\n  this.scene.add(this.light);\n  this.default_camera_pos = [0, 0, 100];\n  if (options.share_view) {\n    this.target = options.share_view.target;\n    this.camera = options.share_view.camera;\n    this.controls = options.share_view.controls;\n    this.tied_viewer = options.share_view;\n    this.tied_viewer.tied_viewer = this; // not GC friendly\n  } else {\n    this.target = new THREE.Vector3(0, 0, 0);\n    this.camera = new THREE.OrthographicCamera();\n    this.camera.position.fromArray(this.default_camera_pos);\n    this.controls = new Controls(this.camera, this.target);\n  }\n  this.raycaster = new THREE.Raycaster();\n  this.set_common_key_bindings();\n  if (this.constructor === Viewer) this.set_real_space_key_bindings();\n  if (typeof document === 'undefined') return;  // for testing on node\n\n  try {\n    this.renderer = new THREE.WebGLRenderer({antialias: true});\n  } catch (e) {\n    this.hud('no WebGL in your browser?', 'ERR');\n    this.renderer = null;\n    return;\n  }\n\n  function get_elem(name) {\n    if (options[name] === null) return null;\n    return document.getElementById(options[name] || name);\n  }\n  this.container = get_elem('viewer');\n  this.hud_el = get_elem('hud');\n  this.help_el = get_elem('help');\n  if (this.hud_el) {\n    this.initial_hud_html = this.hud_el.innerHTML;\n    this.initial_hud_bg = this.hud_el.style['background-color'];\n  }\n\n  if (this.container === null) return; // can be null in headless tests\n  this.renderer.setClearColor(this.config.colors.bg, 1);\n  this.renderer.setPixelRatio(window.devicePixelRatio);\n  this.resize();\n  this.camera.zoom = this.camera.right / 35.0;  // arbitrary choice\n  this.update_camera();\n  this.container.appendChild(this.renderer.domElement);\n  if (options.focusable) {\n    this.renderer.domElement.tabIndex = 0;\n  }\n  this.decor.zoom_grid.visible = false;\n  this.scene.add(this.decor.zoom_grid);\n  if (window.Stats) { // set by including three/examples/js/libs/stats.min.js\n    this.stats = new window.Stats();\n    this.container.appendChild(this.stats.dom);\n  }\n\n  window.addEventListener('resize', this.resize.bind(this));\n  let el = this.renderer.domElement;\n  let keydown_el = (options.focusable ? el : window);\n  keydown_el.addEventListener('keydown', this.keydown.bind(this));\n  el.addEventListener('contextmenu', function (e) { e.preventDefault(); });\n  el.addEventListener('mousewheel', this.mousewheel.bind(this));\n  el.addEventListener('MozMousePixelScroll', this.mousewheel.bind(this));\n  el.addEventListener('mousedown', this.mousedown.bind(this));\n  el.addEventListener('touchstart', this.touchstart.bind(this));\n  el.addEventListener('touchmove', this.touchmove.bind(this));\n  el.addEventListener('touchend', this.touchend.bind(this));\n  el.addEventListener('touchcancel', this.touchend.bind(this));\n  el.addEventListener('dblclick', this.dblclick.bind(this));\n\n  let self = this;\n\n  this.mousemove = function (event) {\n    event.preventDefault();\n    //event.stopPropagation();\n    self.controls.move(self.relX(event), self.relY(event));\n  };\n\n  this.mouseup = function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    document.removeEventListener('mousemove', self.mousemove);\n    document.removeEventListener('mouseup', self.mouseup);\n    self.decor.zoom_grid.visible = false;\n    const not_panned = self.controls.stop();\n    // special case - centering on atoms after action 'pan' with no shift\n    if (not_panned) {\n      const atom = self.pick_atom(not_panned, self.camera);\n      if (atom != null) {\n        self.select_atom(atom, {steps: 60});\n      }\n    }\n    self.redraw_maps();\n  };\n\n  this.scheduled = false;\n  this.request_render();\n}\n\nViewer.prototype.pick_atom = function (coords, camera) {\n  const bag = this.active_model_bag;\n  if (bag === null) return;\n  this.raycaster.setFromCamera(coords, camera);\n  this.raycaster.near = camera.near;\n  // '0.15' b/c the furthest 15% is hardly visible in the fog\n  this.raycaster.far = camera.far - 0.15 * (camera.far - camera.near);\n  this.raycaster.linePrecision = 0.3;\n  let intersects = this.raycaster.intersectObjects(bag.atomic_objects);\n  if (intersects.length < 1) return null;\n  intersects.sort(function (x) { return x.line_dist || Infinity; });\n  const p = intersects[0].point;\n  return bag.model.get_nearest_atom(p.x, p.y, p.z);\n};\n\nViewer.prototype.set_colors = function (scheme) {\n  function to_col(x) { return new THREE.Color(x); }\n  if (scheme == null) {\n    scheme = this.ColorSchemes[0];\n  } else if (typeof scheme === 'number') {\n    scheme = this.ColorSchemes[scheme % this.ColorSchemes.length];\n  } else if (typeof scheme === 'string') {\n    for (let i = 0; i !== this.ColorSchemes.length; i++) {\n      if (this.ColorSchemes[i].name === scheme) {\n        scheme = this.ColorSchemes[i];\n        break;\n      }\n    }\n  }\n  if (scheme.bg === undefined) return;\n  if (typeof scheme.bg === 'number') {\n    for (let key in scheme) {\n      if (key !== 'name') {\n        scheme[key] = scheme[key] instanceof Array ? scheme[key].map(to_col)\n                                                   : to_col(scheme[key]);\n      }\n    }\n  }\n  this.decor.zoom_grid.color_value.set(scheme.fg);\n  this.redraw_all();\n};\n\n// relative position on canvas in normalized device coordinates [-1, +1]\nViewer.prototype.relX = function (evt) {\n  return 2 * (evt.pageX - this.window_offset[0]) / this.window_size[0] - 1;\n};\n\nViewer.prototype.relY = function (evt) {\n  return 1 - 2 * (evt.pageY - this.window_offset[1]) / this.window_size[1];\n};\n\nViewer.prototype.hud = function (text, type) {\n  if (typeof document === 'undefined') return;  // for testing on node\n  let el = this.hud_el;\n  if (el) {\n    if (text !== undefined) {\n      if (type === 'HTML') {\n        el.innerHTML = text;\n      } else {\n        el.textContent = text;\n      }\n    } else {\n      el.innerHTML = this.initial_hud_html;\n    }\n    const err = (type === 'ERR');\n    el.style['background-color'] = (err ? '#b00' : this.initial_hud_bg);\n    if (err) console.log('ERR: ' + text);\n  } else {\n    console.log('hud: ' + text);\n  }\n};\n\nViewer.prototype.redraw_center = function () {\n  if (this.target.distanceToSquared(this.last_ctr) > 0.0001) {\n    this.last_ctr.copy(this.target);\n    if (this.mark) {\n      this.scene.remove(this.mark);\n    }\n    this.mark = makeCube(0.1, this.target, {\n      color: this.config.colors.center,\n      linewidth: 2,\n      win_size: this.window_size,\n    });\n    this.scene.add(this.mark);\n  }\n};\n\nViewer.prototype.redraw_maps = function (force) {\n  this.redraw_center();\n  for (let i = 0; i < this.map_bags.length; i++) {\n    const map_bag = this.map_bags[i];\n    if (force || this.target.distanceToSquared(map_bag.block_ctr) > 0.01) {\n      this.redraw_map(map_bag);\n    }\n  }\n};\n\nViewer.prototype.remove_and_dispose = function (obj, only_dispose) {\n  if (!only_dispose) this.scene.remove(obj);\n  if (obj.geometry) obj.geometry.dispose();\n  if (obj.material) {\n    if (obj.material.uniforms && obj.material.uniforms.map) {\n      obj.material.uniforms.map.value.dispose();\n    }\n    obj.material.dispose();\n  }\n  for (let i = 0; i < obj.children.length; i++) {\n    this.remove_and_dispose(obj.children[i]);\n  }\n};\n\nViewer.prototype.clear_el_objects = function (map_bag) {\n  for (let i = 0; i < map_bag.el_objects.length; i++) {\n    this.remove_and_dispose(map_bag.el_objects[i]);\n  }\n  map_bag.el_objects = [];\n};\n\nViewer.prototype.clear_atomic_objects = function (model) {\n  if (model.atomic_objects) {\n    for (let i = 0; i < model.atomic_objects.length; i++) {\n      this.remove_and_dispose(model.atomic_objects[i]);\n    }\n  }\n  model.atomic_objects = null;\n};\n\nViewer.prototype.set_atomic_objects = function (model_bag) {\n  model_bag.atomic_objects = [];\n  switch (model_bag.conf.render_style) {\n    case 'lines':\n      model_bag.add_bonds();\n      break;\n    case 'ball&stick': {\n      const h_scale = this.camera.projectionMatrix.elements[5];\n      const ball_size = Math.max(1, 200 * h_scale);\n      model_bag.add_bonds(false, ball_size);\n      break;\n    }\n    case 'trace':  // + lines for ligands\n      model_bag.add_trace();\n      model_bag.add_bonds(true);\n      break;\n    case 'ribbon':\n      model_bag.add_ribbon(8);\n      model_bag.add_bonds(true);\n      break;\n  }\n  for (let i = 0; i < model_bag.atomic_objects.length; i++) {\n    this.scene.add(model_bag.atomic_objects[i]);\n  }\n};\n\n// Add/remove label if `show` is specified, toggle otherwise.\nViewer.prototype.toggle_label = function (atom, show) {\n  if (!atom) return;\n  const text = atom.short_label();\n  const uid = text; // we assume that the labels are unique - often true\n  const is_shown = (uid in this.labels);\n  if (show === undefined) show = !is_shown;\n  if (show) {\n    if (is_shown) return;\n    const label = makeLabel(text, {\n      pos: atom.xyz,\n      font: this.config.label_font,\n      color: '#' + this.config.colors.fg.getHexString(),\n      win_size: this.window_size,\n    });\n    if (!label) return;\n    this.labels[uid] = label;\n    this.scene.add(label);\n  } else {\n    if (!is_shown) return;\n    this.remove_and_dispose(this.labels[uid]);\n    delete this.labels[uid];\n  }\n};\n\nViewer.prototype.redraw_labels = function () {\n  for (let uid in this.labels) { // eslint-disable-line guard-for-in\n    const text = uid;\n    this.labels[uid].remake(text, {\n      font: this.config.label_font,\n      color: '#' + this.config.colors.fg.getHexString(),\n    });\n  }\n};\n\n\nViewer.prototype.toggle_map_visibility = function (map_bag) {\n  if (typeof map_bag === 'number') {\n    map_bag = this.map_bags[map_bag];\n  }\n  map_bag.visible = !map_bag.visible;\n  this.redraw_map(map_bag);\n  this.request_render();\n};\n\nViewer.prototype.redraw_map = function (map_bag) {\n  this.clear_el_objects(map_bag);\n  if (map_bag.visible) {\n    map_bag.map.block.clear();\n    this.add_el_objects(map_bag);\n  }\n};\n\nViewer.prototype.toggle_model_visibility = function (model_bag) {\n  model_bag = model_bag || this.active_model_bag;\n  model_bag.visible = !model_bag.visible;\n  this.redraw_model(model_bag);\n  this.request_render();\n};\n\nViewer.prototype.redraw_model = function (model_bag) {\n  this.clear_atomic_objects(model_bag);\n  if (model_bag.visible) {\n    this.set_atomic_objects(model_bag);\n  }\n};\n\nViewer.prototype.redraw_models = function () {\n  for (let i = 0; i < this.model_bags.length; i++) {\n    this.redraw_model(this.model_bags[i]);\n  }\n};\n\nViewer.prototype.add_el_objects = function (map_bag) {\n  if (!map_bag.visible || this.config.map_radius <= 0) return;\n  if (map_bag.map.block.empty()) {\n    const t = this.target;\n    map_bag.block_ctr.copy(t);\n    map_bag.map.extract_block(this.config.map_radius, [t.x, t.y, t.z]);\n  }\n  for (let i = 0; i < map_bag.types.length; i++) {\n    const mtype = map_bag.types[i];\n    const isolevel = (mtype === 'map_neg' ? -1 : 1) * map_bag.isolevel;\n    const iso = map_bag.map.isomesh_in_block(isolevel, this.config.map_style);\n\n    const obj = makeChickenWire(iso, {\n      color: this.config.colors[mtype],\n      linewidth: this.config.map_line,\n    });\n    map_bag.el_objects.push(obj);\n    this.scene.add(obj);\n  }\n};\n\nViewer.prototype.change_isolevel_by = function (map_idx, delta) {\n  if (map_idx >= this.map_bags.length) return;\n  const map_bag = this.map_bags[map_idx];\n  map_bag.isolevel += delta;\n  //TODO: move slow part into update()\n  this.clear_el_objects(map_bag);\n  this.add_el_objects(map_bag);\n  const abs_level = map_bag.map.abs_level(map_bag.isolevel);\n  let abs_text = abs_level.toFixed(4);\n  let tied = this.tied_viewer;\n  if (tied && map_idx < tied.map_bags.length) {\n    let tied_bag = tied.map_bags[map_idx];\n    // Should we tie by sigma or absolute level? Now it's sigma.\n    tied_bag.isolevel = map_bag.isolevel;\n    abs_text += ' / ' + tied_bag.map.abs_level(tied_bag.isolevel).toFixed(4);\n    tied.clear_el_objects(tied_bag);\n    tied.add_el_objects(tied_bag);\n  }\n  this.hud('map ' + (map_idx+1) + ' level =  ' + abs_text +\n           ' e/\\u212B\\u00B3 (' + map_bag.isolevel.toFixed(2) + ' rmsd)');\n};\n\nViewer.prototype.change_map_radius = function (delta) {\n  const RMAX = 40;\n  const cf = this.config;\n  cf.map_radius = Math.min(Math.max(cf.map_radius + delta, 0), RMAX);\n  let info = 'map \"radius\": ' + cf.map_radius;\n  if (cf.map_radius === RMAX) info += ' (max)';\n  else if (cf.map_radius === 0) info += ' (hidden maps)';\n  this.hud(info);\n  this.redraw_maps(true);\n};\n\nViewer.prototype.change_slab_width_by = function (delta) {\n  let slab_width = this.controls.slab_width;\n  slab_width[0] = Math.max(slab_width[0] + delta, 0.01);\n  slab_width[1] = Math.max(slab_width[1] + delta, 0.01);\n  this.update_camera();\n  this.hud('clip width: ' + (this.camera.far-this.camera.near).toPrecision(3));\n};\n\nViewer.prototype.change_zoom_by_factor = function (mult) {\n  this.camera.zoom *= mult;\n  this.update_camera();\n  this.hud('zoom: ' + this.camera.zoom.toPrecision(3));\n};\n\nViewer.prototype.change_bond_line = function (delta) {\n  this.config.bond_line = Math.max(this.config.bond_line + delta, 0.1);\n  this.redraw_models();\n  this.hud('bond width: ' + scale_by_height(this.config.bond_line,\n                                            this.window_size).toFixed(1));\n};\n\nViewer.prototype.change_map_line = function (delta) {\n  this.config.map_line = Math.max(this.config.map_line + delta, 0.1);\n  this.redraw_maps(true);\n  this.hud('wireframe width: ' + this.config.map_line.toFixed(1));\n};\n\nViewer.prototype.toggle_full_screen = function () {\n  let d = document;\n  if (d.fullscreenElement || d.mozFullScreenElement ||\n      d.webkitFullscreenElement || d.msFullscreenElement) {\n    let ex = d.exitFullscreen || d.webkitExitFullscreen ||\n    // $FlowFixMe: property `msExitFullscreen` not found in document\n             d.mozCancelFullScreen || d.msExitFullscreen;\n    // $FlowFixMe: cannot call property `exitFullscreen` of unknown type\n    if (ex) ex.call(d);\n  } else {\n    let el = this.container;\n    let req = el.requestFullscreen || el.webkitRequestFullscreen ||\n              el.mozRequestFullScreen || el.msRequestFullscreen;\n    if (req) req.call(el);\n  }\n};\n\nViewer.prototype.toggle_cell_box = function () {\n  if (this.decor.cell_box) {\n    this.scene.remove(this.decor.cell_box);\n    this.decor.cell_box = null;\n  } else {\n    let uc = null;\n    if (this.model_bags.length > 0) {\n      uc = this.model_bags[0].model.unit_cell;\n    }\n    // model may not have unit cell\n    if (!uc && this.map_bags.length > 0) {\n      uc = this.map_bags[0].map.unit_cell;\n    }\n    if (uc) {\n      this.decor.cell_box = makeRgbBox(uc.orthogonalize.bind(uc), {\n        color: this.config.colors.fg,\n      });\n      this.scene.add(this.decor.cell_box);\n    }\n  }\n};\n\nfunction vec3_to_fixed(vec, n) {\n  return [vec.x.toFixed(n), vec.y.toFixed(n), vec.z.toFixed(n)];\n}\n\nViewer.prototype.shift_clip = function (delta) {\n  let eye = this.camera.position.clone().sub(this.target);\n  eye.multiplyScalar(delta / eye.length());\n  this.target.add(eye);\n  this.camera.position.add(eye);\n  this.update_camera();\n  this.redraw_maps();\n  this.hud('clip shifted by [' + vec3_to_fixed(eye, 2).join(' ') + ']');\n};\n\nViewer.prototype.go_to_nearest_Ca = function () {\n  const t = this.target;\n  if (this.active_model_bag === null) return;\n  const a = this.active_model_bag.model.get_nearest_atom(t.x, t.y, t.z, 'CA');\n  if (a) {\n    this.select_atom(a, {steps: 30});\n  } else {\n    this.hud('no nearby CA');\n  }\n};\n\nViewer.prototype.permalink = function () {\n  if (typeof window === 'undefined') return;\n  window.location.hash = '#xyz=' + vec3_to_fixed(this.target, 1).join(',') +\n    '&eye=' + vec3_to_fixed(this.camera.position, 1).join(',') +\n    '&zoom=' + this.camera.zoom.toFixed(0);\n  this.hud('copy URL from the location bar');\n};\n\nViewer.prototype.redraw_all = function () {\n  if (!this.renderer) return;\n  this.scene.fog.color = this.config.colors.bg;\n  if (this.renderer) this.renderer.setClearColor(this.config.colors.bg, 1);\n  this.redraw_models();\n  this.redraw_maps(true);\n  this.redraw_labels();\n};\n\nViewer.prototype.toggle_help = function () {\n  let el = this.help_el;\n  if (!el) return;\n  el.style.display = el.style.display === 'block' ? 'none' : 'block';\n  if (el.innerHTML === '') {\n    el.innerHTML = [this.MOUSE_HELP, this.KEYBOARD_HELP,\n                    this.ABOUT_HELP].join('\\n\\n');\n  }\n};\n\nViewer.prototype.MOUSE_HELP = [\n  '<b>mouse:</b>',\n  'Left = rotate',\n  'Middle or Ctrl+Left = pan',\n  'Right = zoom',\n  'Ctrl+Right = clipping',\n  'Ctrl+Shift+Right = roll',\n  'Wheel = σ level',\n  'Shift+Wheel = diff map σ',\n].join('\\n');\n\nViewer.prototype.KEYBOARD_HELP = [\n  '<b>keyboard:</b>',\n  'H = toggle help',\n  'T = representation',\n  'C = coloring',\n  'B = bg color',\n  'Q = label font',\n  '+/- = sigma level',\n  ']/[ = map radius',\n  'D/F = clip width',\n  'numpad 3/. = move clip',\n  'M/N = zoom',\n  'U = unitcell box',\n  'Y = hydrogens',\n  'R = center view',\n  'W = wireframe style',\n  'I = spin',\n  'K = rock',\n  'Home/End = bond width',\n  '\\\\ = bond caps',\n  'P = nearest Cα',\n  'Shift+P = permalink',\n  '(Shift+)space = next res.',\n  'Shift+F = full screen',\n].join('\\n');\n\nViewer.prototype.ABOUT_HELP =\n  '<a href=\"https://uglymol.github.io\">about uglymol</a>';\n\nViewer.prototype.select_next = function (info, key, options, back) {\n  const old_idx = options.indexOf(this.config[key]);\n  const len = options.length;\n  const new_idx = (old_idx + (back ? len - 1 : 1)) % len;\n  this.config[key] = options[new_idx];\n  let html = info + ':';\n  for (let i = 0; i < len; i++) {\n    const tag = (i === new_idx ? 'u' : 's');\n    const opt_name = options[i].name || options[i];\n    html += ' <' + tag + '>' + opt_name + '</' + tag + '>';\n  }\n  this.hud(html, 'HTML');\n};\n\nViewer.prototype.keydown = function (evt) {\n  const action = this.key_bindings[evt.keyCode];\n  if (action) {\n    (action.bind(this))(evt);\n  } else {\n    if (action === false) evt.preventDefault();\n    if (this.help_el) this.hud('Nothing here. Press H for help.');\n  }\n  this.request_render();\n};\n\nViewer.prototype.set_common_key_bindings = function () {\n  let kb = new Array(256);\n  // b\n  kb[66] = function (evt) {\n    this.select_next('color scheme', 'colors', this.ColorSchemes, evt.shiftKey);\n    this.set_colors(this.config.colors);\n  };\n  // c\n  kb[67] = function (evt) {\n    this.select_next('coloring by', 'color_aim', COLOR_AIMS, evt.shiftKey);\n    this.redraw_models();\n  };\n  // d\n  kb[68] = function () { this.change_slab_width_by(-0.1); };\n  // f\n  kb[70] = function (evt) {\n    evt.shiftKey ? this.toggle_full_screen() : this.change_slab_width_by(0.1);\n  };\n  // h\n  kb[72] = this.toggle_help;\n  // i\n  kb[73] = function (evt) {\n    this.hud('toggled spinning');\n    this.controls.toggle_auto(evt.shiftKey);\n  };\n  // k\n  kb[75] = function () {\n    this.hud('toggled rocking');\n    this.controls.toggle_auto(0.0);\n  };\n  // m\n  kb[77] = function (evt) {\n    this.change_zoom_by_factor(evt.shiftKey ? 1.2 : 1.03);\n  };\n  // n\n  kb[78] = function (evt) {\n    this.change_zoom_by_factor(1 / (evt.shiftKey ? 1.2 : 1.03));\n  };\n  // q\n  kb[81] = function (evt) {\n    this.select_next('label font', 'label_font', LABEL_FONTS, evt.shiftKey);\n    this.redraw_labels();\n  };\n  // r\n  kb[82] = function (evt) {\n    if (evt.shiftKey) {\n      this.hud('redraw!');\n      this.redraw_all();\n    } else {\n      this.hud('recentered');\n      this.recenter();\n    }\n  };\n  // u\n  kb[85] = function () {\n    this.hud('toggled unit cell box');\n    this.toggle_cell_box();\n  };\n  // w\n  kb[87] = function (evt) {\n    this.select_next('map style', 'map_style', MAP_STYLES, evt.shiftKey);\n    this.redraw_maps(true);\n  };\n  // add, equals/firefox, equal sign\n  kb[107] = kb[61] = kb[187] = function (evt) {\n    this.change_isolevel_by(evt.shiftKey ? 1 : 0, 0.1);\n  };\n  // subtract, minus/firefox, dash\n  kb[109] = kb[173] = kb[189] = function (evt) {\n    this.change_isolevel_by(evt.shiftKey ? 1 : 0, -0.1);\n  };\n  // [\n  kb[219] = function () { this.change_map_radius(-2); };\n  // ]\n  kb[221] = function () { this.change_map_radius(2); };\n  // \\ (backslash)\n  kb[220] = function (evt) {\n    this.select_next('bond lines', 'line_style', LINE_STYLES, evt.shiftKey);\n    this.redraw_models();\n  };\n  // 3, numpad 3\n  kb[51] = kb[99] = function () { this.shift_clip(1); };\n  // numpad period (Linux), decimal point (Mac)\n  kb[108] = kb[110] = function () { this.shift_clip(-1); };\n  // shift, ctrl, alt, altgr\n  kb[16] = kb[17] = kb[18] = kb[225] = function () {};\n  // slash, single quote\n  kb[191] = kb[222] = false;  // -> preventDefault()\n\n  this.key_bindings = kb;\n};\n\nViewer.prototype.set_real_space_key_bindings = function () {\n  let kb = this.key_bindings;\n  // Home\n  kb[36] = function (evt) {\n    evt.ctrlKey ? this.change_map_line(0.1) : this.change_bond_line(0.2);\n  };\n  // End\n  kb[35] = function (evt) {\n    evt.ctrlKey ? this.change_map_line(-0.1) : this.change_bond_line(-0.2);\n  };\n  // Space\n  kb[32] = function (evt) { this.center_next_residue(evt.shiftKey); };\n  // p\n  kb[80] = function (evt) {\n    evt.shiftKey ? this.permalink() : this.go_to_nearest_Ca();\n  };\n  // t\n  kb[84] = function (evt) {\n    this.select_next('rendering as', 'render_style', RENDER_STYLES,\n                     evt.shiftKey);\n    this.redraw_models();\n  };\n  // y\n  kb[89] = function (evt) {\n    this.config.hydrogens = !this.config.hydrogens;\n    this.hud((this.config.hydrogens ? 'show' : 'hide') +\n             ' hydrogens (if any)');\n    this.redraw_models();\n  };\n};\n\nViewer.prototype.mousedown = function (event) {\n  //event.preventDefault(); // default involves setting focus, which we need\n  event.stopPropagation();\n  document.addEventListener('mouseup', this.mouseup);\n  document.addEventListener('mousemove', this.mousemove);\n  let state = STATE.NONE;\n  if (event.button === 1 || (event.button === 0 && event.ctrlKey)) {\n    state = STATE.PAN;\n  } else if (event.button === 0) {\n    // in Coot shift+Left is labeling atoms like dblclick, + rotation\n    if (event.shiftKey) {\n      this.dblclick(event);\n    }\n    state = STATE.ROTATE;\n  } else if (event.button === 2) {\n    if (event.ctrlKey) {\n      state = event.shiftKey ? STATE.ROLL : STATE.SLAB;\n    } else {\n      this.decor.zoom_grid.visible = true;\n      state = STATE.ZOOM;\n    }\n  }\n  this.controls.start(state, this.relX(event), this.relY(event));\n  this.request_render();\n};\n\nViewer.prototype.dblclick = function (event) {\n  if (event.button !== 0) return;\n  if (this.decor.selection) {\n    this.remove_and_dispose(this.decor.selection);\n    this.decor.selection = null;\n  }\n  const mouse = new THREE.Vector2(this.relX(event), this.relY(event));\n  const atom = this.pick_atom(mouse, this.camera);\n  if (atom) {\n    this.hud(atom.long_label());\n    this.toggle_label(atom);\n    const color = this.config.colors[atom.element] || this.config.colors.def;\n    const size = 2.5 * scale_by_height(this.config.bond_line, this.window_size);\n    this.decor.selection = makeWheels([atom], [color], size);\n    this.scene.add(this.decor.selection);\n  } else {\n    this.hud();\n  }\n  this.request_render();\n};\n\n// for two-finger touch events\nfunction touch_info(evt) {\n  const touches = evt.touches;\n  const dx = touches[0].pageX - touches[1].pageX;\n  const dy = touches[0].pageY - touches[1].pageY;\n  return {pageX: (touches[0].pageX + touches[1].pageX) / 2,\n          pageY: (touches[0].pageY + touches[1].pageY) / 2,\n          dist: Math.sqrt(dx * dx + dy * dy)};\n}\n\nViewer.prototype.touchstart = function (event) {\n  const touches = event.touches;\n  if (touches.length === 1) {\n    this.controls.start(STATE.ROTATE,\n                        this.relX(touches[0]), this.relY(touches[0]));\n  } else { // for now using only two touches\n    const info = touch_info(event);\n    this.controls.start(STATE.PAN_ZOOM,\n                        this.relX(info), this.relY(info), info.dist);\n  }\n  this.request_render();\n};\n\nViewer.prototype.touchmove = function (event) {\n  event.preventDefault();\n  event.stopPropagation();\n  const touches = event.touches;\n  if (touches.length === 1) {\n    this.controls.move(this.relX(touches[0]), this.relY(touches[0]));\n  } else { // for now using only two touches\n    const info = touch_info(event);\n    this.controls.move(this.relX(info), this.relY(info), info.dist);\n  }\n};\n\nViewer.prototype.touchend = function (/*event*/) {\n  this.controls.stop();\n  this.redraw_maps();\n};\n\nViewer.prototype.mousewheel = function (evt) {\n  evt.preventDefault();\n  evt.stopPropagation();\n  // evt.wheelDelta for WebKit, evt.detail for Firefox\n  const delta = evt.wheelDelta || -2 * (evt.detail || 0);\n  this.mousewheel_action(delta, evt);\n  this.request_render();\n};\n\nViewer.prototype.mousewheel_action = function (delta, evt) {\n  this.change_isolevel_by(evt.shiftKey ? 1 : 0, 0.0005 * delta);\n};\n\nViewer.prototype.resize = function (/*evt*/) {\n  const el = this.container;\n  const width = el.clientWidth;\n  const height = el.clientHeight;\n  this.window_offset[0] = el.offsetLeft;\n  this.window_offset[1] = el.offsetTop;\n  this.camera.left = -width;\n  this.camera.right = width;\n  this.camera.top = height;\n  this.camera.bottom = -height;\n  this.camera.updateProjectionMatrix();\n  this.renderer.setSize(width, height);\n  if (width !== this.window_size[0] || height !== this.window_size[1]) {\n    this.window_size[0] = width;\n    this.window_size[1] = height;\n    this.redraw_models(); // b/c bond_line is scaled by height\n  }\n  this.request_render();\n};\n\n// makes sense only for full-window viewer\nfunction parse_url_fragment() {\n  let ret = {};\n  if (typeof window === 'undefined') return ret;\n  const params = window.location.hash.substr(1).split('&');\n  for (let i = 0; i < params.length; i++) {\n    const kv = params[i].split('=');\n    let val = kv[1];\n    if (kv[0] === 'xyz' || kv[0] === 'eye') {\n      val = val.split(',').map(Number);\n    } else if (kv[0] === 'zoom') {\n      val = Number(val);\n    }\n    ret[kv[0]] = val;\n  }\n  return ret;\n}\n\n// If xyz set recenter on it looking toward the model center.\n// Otherwise recenter on the model center looking along the z axis.\nViewer.prototype.recenter = function (xyz, cam, steps) {\n  const bag = this.active_model_bag;\n  let new_up;\n  if (xyz != null && cam == null && bag !== null) {\n    // look from specified point toward the center of the molecule,\n    // i.e. shift camera away from the molecule center.\n    xyz = new THREE.Vector3(xyz[0], xyz[1], xyz[2]);\n    const mc = bag.model.get_center();\n    let d = new THREE.Vector3(xyz[0] - mc[0], xyz[1] - mc[1], xyz[2] - mc[2]);\n    d.setLength(100);\n    new_up = d.y < 90 ? new THREE.Vector3(0, 1, 0) : new THREE.Vector3(1, 0, 0);\n    new_up.projectOnPlane(d).normalize();\n    cam = d.add(xyz);\n  } else {\n    xyz = xyz || (bag ? bag.model.get_center() : [0, 0, 0]);\n    if (cam != null) {\n      cam = new THREE.Vector3(cam[0], cam[1], cam[2]);\n      new_up = null; // preserve the up direction\n    } else {\n      const dc = this.default_camera_pos;\n      cam = new THREE.Vector3(xyz[0] + dc[0], xyz[1] + dc[1], xyz[2] + dc[2]);\n      new_up = THREE.Object3D.DefaultUp; // Vector3(0, 1, 0)\n    }\n  }\n  this.controls.go_to(xyz, cam, new_up, steps);\n};\n\nViewer.prototype.center_next_residue = function (back) {\n  if (!this.active_model_bag) return;\n  const a = this.active_model_bag.model.next_residue(this.selected_atom, back);\n  if (a) this.select_atom(a, {steps: 30});\n};\n\nViewer.prototype.select_atom = function (atom, options = {}) {\n  this.hud('-> ' + atom.long_label());\n  this.controls.go_to(atom.xyz, null, null, options.steps);\n  this.toggle_label(this.selected_atom);\n  this.selected_atom = atom;\n  this.toggle_label(atom);\n};\n\nViewer.prototype.update_camera = function () {\n  const dxyz = this.camera.position.distanceTo(this.target);\n  const w = this.controls.slab_width;\n  const scale = w.length === 3 ? w[2] : this.camera.zoom;\n  this.camera.near = dxyz * (1 - w[0] / scale);\n  this.camera.far = dxyz * (1 + w[1] / scale);\n  //this.light.position.copy(this.camera.position);\n  this.camera.updateProjectionMatrix();\n};\n\n// The main loop. Running when a mouse button is pressed or when the view\n// is moving (and run once more after the mouse button is released).\n// It is also triggered by keydown events.\nViewer.prototype.render = function () {\n  this.scheduled = true;\n  if (this.renderer === null) return;\n  if (this.controls.update()) {\n    this.update_camera();\n  }\n  const tied = this.tied_viewer;\n  if (!this.controls.is_going()) {\n    this.redraw_maps();\n    if (tied && !tied.scheduled) tied.redraw_maps();\n  }\n  this.renderer.render(this.scene, this.camera);\n  if (tied && !tied.scheduled) tied.renderer.render(tied.scene, tied.camera);\n  if (this.nav) {\n    this.nav.renderer.render(this.nav.scene, this.camera);\n  }\n  this.scheduled = false;\n  if (this.controls.is_moving()) {\n    this.request_render();\n  }\n  if (this.stats) {\n    this.stats.update();\n  }\n};\n\nViewer.prototype.request_render = function () {\n  if (typeof window !== 'undefined' && !this.scheduled) {\n    this.scheduled = true;\n    window.requestAnimationFrame(this.render.bind(this));\n  }\n};\n\nViewer.prototype.set_model = function (model) {\n  const model_bag = new ModelBag(model, this.config, this.window_size);\n  this.model_bags.push(model_bag);\n  this.set_atomic_objects(model_bag);\n  this.active_model_bag = model_bag;\n  this.request_render();\n};\n\nViewer.prototype.add_map = function (map, is_diff_map) {\n  //map.show_debug_info();\n  const map_bag = new MapBag(map, is_diff_map);\n  this.map_bags.push(map_bag);\n  this.add_el_objects(map_bag);\n  this.request_render();\n};\n\nViewer.prototype.load_file = function (url/*:string*/,\n                                       options/*:{[id:string]: mixed}*/,\n                                       callback/*:Function*/) {\n  if (this.renderer === null) return;  // no WebGL detected\n  let req = new XMLHttpRequest();\n  req.open('GET', url, true);\n  if (options.binary) {\n    req.responseType = 'arraybuffer';\n  } else {\n    // http://stackoverflow.com/questions/7374911/\n    req.overrideMimeType('text/plain');\n  }\n  let self = this;\n  req.onreadystatechange = function () {\n    if (req.readyState === 4) {\n      // chrome --allow-file-access-from-files gives status 0\n      if (req.status === 200 || (req.status === 0 && req.response !== null)) {\n        try {\n          callback(req);\n        } catch (e) {\n          self.hud('Error: ' + e.message + '\\nin ' + url, 'ERR');\n        }\n      } else {\n        self.hud('Failed to fetch ' + url, 'ERR');\n      }\n    }\n  };\n  if (options.progress) {\n    // $FlowFixMe: dom.js in flow is incomplete\n    req.addEventListener('progress', function (evt /*:ProgressEvent*/) {\n      if (evt.lengthComputable && evt.loaded && evt.total) {\n        const fn = url.split('/').pop();\n        self.hud('loading ' + fn + ' ... ' +\n                 (evt.loaded >> 10) + ' / ' + (evt.total >> 10) + ' kB');\n        if (evt.loaded === evt.total) self.hud(); // clear progress message\n      }\n    });\n  }\n  try {\n    req.send(null);\n  } catch (e) {\n    self.hud('loading ' + url + ' failed:\\n' + e, 'ERR');\n  }\n};\n\nViewer.prototype.set_view = function (options) {\n  const frag = parse_url_fragment();\n  if (frag.zoom) this.camera.zoom = frag.zoom;\n  this.recenter(frag.xyz || (options && options.center), frag.eye, 1);\n};\n\n// Load molecular model from PDB file and centers the view\nViewer.prototype.load_pdb = function (url, options, callback) {\n  let self = this;\n  this.load_file(url, {binary: false}, function (req) {\n    let model = new Model();\n    model.from_pdb(req.responseText);\n    self.set_model(model);\n    self.set_view(options);\n    if (callback) callback();\n  });\n};\n\nViewer.prototype.load_map = function (url, options, callback) {\n  if (options.format !== 'ccp4' && options.format !== 'dsn6') {\n    throw Error('Unknown map format.');\n  }\n  let self = this;\n  this.load_file(url, {binary: true, progress: true}, function (req) {\n    self.load_map_from_buffer(req.response, options);\n    if (callback) callback();\n  });\n};\n\nViewer.prototype.load_map_from_buffer = function (buffer, options) {\n  let map = new ElMap();\n  if (options.format === 'dsn6') {\n    map.from_dsn6(buffer);\n  } else {\n    map.from_ccp4(buffer, true);\n  }\n  this.add_map(map, options.diff_map);\n};\n\n// Load a normal map and a difference map.\n// To show the first map ASAP we do not download both maps in parallel.\nViewer.prototype.load_ccp4_maps = function (url1, url2, callback) {\n  let self = this;\n  this.load_map(url1, {diff_map: false, format: 'ccp4'}, function () {\n    self.load_map(url2, {diff_map: true, format: 'ccp4'}, callback);\n  });\n};\n\n// Load a model (PDB), normal map and a difference map - in this order.\nViewer.prototype.load_pdb_and_ccp4_maps = function (pdb, map1, map2, callback) {\n  let self = this;\n  this.load_pdb(pdb, {}, function () {\n    self.load_ccp4_maps(map1, map2, callback);\n  });\n};\n\n// TODO: navigation window like in gimp and mifit\n/*\nViewer.prototype.show_nav = function (inset_id) {\n  var inset = document.getElementById(inset_id);\n  if (!inset) return;\n  inset.style.display = 'block';\n  var nav = {};\n  nav.renderer = new THREE.WebGLRenderer();\n  nav.renderer.setClearColor(0x555555, 1);\n  nav.renderer.setSize(200, 200);\n  inset.appendChild(nav.renderer.domElement);\n  //nav.scene = new THREE.Scene();\n  nav.scene = this.scene;\n  //var light = new THREE.AmbientLight(0xffffff);\n  //nav.scene.add(light);\n  this.nav = nav;\n};\n*/\n\nViewer.prototype.ColorSchemes = ColorSchemes;\n\n","// @flow\nimport { Viewer } from './viewer.js';\nimport { addXyzCross, makeLineMaterial, makeLineSegments } from './lines.js';\nimport * as THREE from 'three';\n\n\n// options handled by Viewer#select_next()\nconst SPOT_SEL = ['all', 'unindexed', '#1']; //extended when needed\nconst SHOW_AXES = ['three', 'two', 'none'];\n\nexport function ReciprocalViewer(options /*: {[key: string]: any}*/) {\n  Viewer.call(this, options);\n  this.default_camera_pos = [100, 0, 0];\n  this.axes = null;\n  this.points = null;\n  this.map = null;\n  this.max_dist = null;\n  this.d_min = null;\n  this.d_max_inv = 0;\n  this.data = null;\n  this.config.show_only = SPOT_SEL[0];\n  this.config.show_axes = SHOW_AXES[0];\n  this.set_reciprocal_key_bindings();\n  this.set_dropzone();\n}\n\nReciprocalViewer.prototype = Object.create(Viewer.prototype);\nReciprocalViewer.prototype.constructor = ReciprocalViewer;\n\nReciprocalViewer.prototype.KEYBOARD_HELP = [\n  '<b>keyboard:</b>',\n  'H = toggle help',\n  'V = show (un)indexed',\n  'A = toggle axes',\n  'B = bg color',\n  'M/N = zoom',\n  'D/F = clip width',\n  'R = center view',\n  'Z/X = point size',\n  'Shift+P = permalink',\n  'Shift+F = full screen',\n  '←/→ = max resol.',\n  '↑/↓ = min resol.',\n].join('\\n');\n\nReciprocalViewer.prototype.MOUSE_HELP = Viewer.prototype.MOUSE_HELP\n                                        .split('\\n').slice(0, -2).join('\\n');\n\nReciprocalViewer.prototype.set_reciprocal_key_bindings = function () {\n  let kb = this.key_bindings;\n  // a\n  kb[65] = function (evt) {\n    this.select_next('axes', 'show_axes', SHOW_AXES, evt.shiftKey);\n    this.set_axes();\n  };\n  // p\n  kb[80] = function (evt) { this.permalink(); };\n  // v\n  kb[86] = function (evt) {\n    this.select_next('show', 'show_only', SPOT_SEL, evt.shiftKey);\n    const idx = SPOT_SEL.indexOf(this.config.show_only);\n    this.points.material.uniforms.show_only.value = idx - 2;\n  };\n  // x\n  kb[88] = function (evt) {\n    evt.ctrlKey ? this.change_map_line(0.1) : this.change_point_size(0.5);\n  };\n  // z\n  kb[90] = function (evt) {\n    evt.ctrlKey ? this.change_map_line(-0.1) : this.change_point_size(-0.5);\n  };\n  // 3, numpad 3\n  kb[51] = kb[99] = function () { this.shift_clip(0.1); };\n  // numpad period (Linux), decimal point (Mac)\n  kb[108] = kb[110] = function () { this.shift_clip(-0.1); };\n  // <-\n  kb[37] = function () { this.change_dmin(0.05); };\n  // ->\n  kb[39] = function () { this.change_dmin(-0.05); };\n  // up arrow\n  kb[38] = function () { this.change_dmax(0.025); };\n  // down arrow\n  kb[40] = function () { this.change_dmax(-0.025); };\n};\n\nReciprocalViewer.prototype.set_dropzone = function () {\n  if (typeof document === 'undefined') return;  // for testing on node\n  const zone = this.renderer.domElement;\n  const self = this;\n  zone.addEventListener('dragover', function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'copy';\n    self.hud('ready for drop...');\n  });\n  zone.addEventListener('drop', function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    let names = [];\n    for (const file of e.dataTransfer.files) {\n      const reader = new FileReader();\n      if (/\\.(map|ccp4)$/.test(file.name)) {\n        reader.onload = function (evt) {\n          self.load_map_from_ab(evt.target.result);\n        };\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.onload = function (evt) {\n          self.load_from_string(evt.target.result, {});\n        };\n        reader.readAsText(file);\n      }\n      names.push(file.name);\n    }\n    self.hud('loading ' + names.join(', '));\n  });\n};\n\nReciprocalViewer.prototype.load_data = function (url, options = {}) {\n  let self = this;\n  this.load_file(url, {binary: false, progress: true}, function (req) {\n    self.load_from_string(req.responseText, options);\n    if (options.callback) options.callback();\n  });\n};\n\nReciprocalViewer.prototype.load_from_string = function (text, options) {\n  if (text[0] === '{') {\n    this.data = parse_json(text);\n  } else {\n    this.data = parse_csv(text);\n  }\n  this.max_dist = max_dist(this.data.pos);\n  this.d_min = 1 / this.max_dist;\n  const last_group = max_val(this.data.lattice_ids);\n  SPOT_SEL.splice(3);\n  for (let i = 1; i <= last_group; i++) {\n    SPOT_SEL.push('#' + (i + 1));\n  }\n  this.set_axes();\n  this.set_points();\n  this.camera.zoom = 0.5 * (this.camera.top - this.camera.bottom);\n  // default scale is set to 100 - same as default_camera_pos\n  const d = 1.01 * this.max_dist;\n  this.controls.slab_width = [d, d, 100];\n  this.set_view(options);\n};\n\nfunction max_dist(pos) {\n  let max_sq = 0;\n  for (let i = 0; i < pos.length; i += 3) {\n    const n = 3 * i;\n    const sq = pos[n]*pos[n] + pos[n+1]*pos[n+1] + pos[n+2]*pos[n+2];\n    if (sq > max_sq) max_sq = sq;\n  }\n  return Math.sqrt(max_sq);\n}\n\nfunction max_val(arr) {\n  let max = -Infinity;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > max) max = arr[i];\n  }\n  return max;\n}\n\nfunction parse_csv(text) {\n  const lines = text.split('\\n').filter(function (line) {\n    return line.length > 0 && line[0] !== '#';\n  });\n  let pos = new Float32Array(lines.length * 3);\n  let lattice_ids = [];\n  for (let i = 0; i < lines.length; i++) {\n    const nums = lines[i].split(',').map(Number);\n    for (let j = 0; j < 3; j++) {\n      pos[3*i+j] = nums[j];\n    }\n    lattice_ids.push(nums[3]);\n  }\n  return { pos, lattice_ids };\n}\n\nfunction minus_ones(n) {\n  const a = [];\n  for (let i = 0; i < n; i++) a.push(-1);\n  return a;\n}\n\nfunction parse_json(text) {\n  const d = JSON.parse(text);\n  const n = d.rlp.length;\n  let pos = new Float32Array(3*n);\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < 3; j++) {\n      pos[3*i+j] = d.rlp[i][j];\n    }\n  }\n  const lattice_ids = d.experiment_id || minus_ones(n);\n  return { pos, lattice_ids };\n}\n\nReciprocalViewer.prototype.load_map_from_ab = function (buffer) {\n  if (this.map_bags.length > 0) {\n    this.clear_el_objects(this.map_bags.pop());\n  }\n  this.load_map_from_buffer(buffer, {format: 'ccp4'});\n};\n\n\nReciprocalViewer.prototype.set_axes = function () {\n  if (this.axes != null) {\n    this.remove_and_dispose(this.axes);\n    this.axes = null;\n  }\n  if (this.config.show_axes === 'none') return;\n  const axis_length = 1.2 * this.max_dist;\n  let vertices = [];\n  addXyzCross(vertices, [0, 0, 0], axis_length);\n  const ca = this.config.colors.axes;\n  const colors = [ca[0], ca[0], ca[1], ca[1], ca[2], ca[2]];\n  if (this.config.show_axes === 'two') {\n    vertices.splice(4);\n    colors.splice(4);\n  }\n  const material = makeLineMaterial({\n    win_size: this.window_size,\n    linewidth: 3,\n    segments: true,\n  });\n  this.axes = makeLineSegments(material, vertices, colors);\n  this.scene.add(this.axes);\n};\n\nconst point_vert = `\nattribute float group;\nuniform float show_only;\nuniform float r2_max;\nuniform float r2_min;\nuniform float size;\nvarying vec3 vcolor;\nvoid main() {\n  vcolor = color;\n  float r2 = dot(position, position);\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  if (r2 < r2_min || r2 >= r2_max || (show_only != -2.0 && show_only != group))\n    gl_Position.x = 2.0;\n  gl_PointSize = size;\n}`;\n\nconst point_frag = `\nvarying vec3 vcolor;\nvoid main() {\n  // not sure how reliable is such rounding of points\n  vec2 diff = gl_PointCoord - vec2(0.5, 0.5);\n  float dist_sq = 4.0 * dot(diff, diff);\n  if (dist_sq >= 1.0) discard;\n  gl_FragColor = vec4(vcolor, 1.0 - dist_sq * dist_sq * dist_sq);\n}`;\n\n\nReciprocalViewer.prototype.set_points = function () {\n  if (this.data == null) return;\n  if (this.points != null) {\n    this.remove_and_dispose(this.points);\n    this.points = null;\n  }\n  const pos = this.data.pos;\n  const lattice_ids = this.data.lattice_ids;\n  let color_arr = new Float32Array(3 * lattice_ids.length);\n  this.colorize_by_id(color_arr, lattice_ids);\n  let geometry = new THREE.BufferGeometry();\n  geometry.addAttribute('position', new THREE.BufferAttribute(pos, 3));\n  geometry.addAttribute('color', new THREE.BufferAttribute(color_arr, 3));\n  const groups = new Float32Array(lattice_ids);\n  geometry.addAttribute('group', new THREE.BufferAttribute(groups, 1));\n  let material = new THREE.ShaderMaterial({\n    uniforms: {\n      size: { value: 3 },\n      show_only: { value: -2 },\n      r2_max: { value: 100 },\n      r2_min: { value: 0 },\n    },\n    vertexShader: point_vert,\n    fragmentShader: point_frag,\n    vertexColors: THREE.VertexColors,\n  });\n  material.transparent = true;\n  this.points = new THREE.Points(geometry, material);\n  this.scene.add(this.points);\n  this.request_render();\n};\n\nReciprocalViewer.prototype.colorize_by_id = function (color_arr, group_id) {\n  const palette = this.config.colors.lattices;\n  for (let i = 0; i < group_id.length; i++) {\n    const c = palette[(group_id[i] + 1) % 4];\n    color_arr[3*i] = c.r;\n    color_arr[3*i+1] = c.g;\n    color_arr[3*i+2] = c.b;\n  }\n};\n\nReciprocalViewer.prototype.redraw_center = function () {};\n\nReciprocalViewer.prototype.mousewheel_action = function (delta, evt) {\n  this.change_zoom_by_factor(1 + 0.0005 * delta);\n};\n\nReciprocalViewer.prototype.change_point_size = function (delta) {\n  if (this.points === null) return;\n  let size = this.points.material.uniforms.size;\n  size.value = Math.max(size.value + delta, 0.5);\n  this.hud('point size: ' + size.value.toFixed(1));\n};\n\nReciprocalViewer.prototype.change_dmin = function (delta) {\n  if (this.d_min == null) return;\n  this.d_min = Math.max(this.d_min + delta, 0.1);\n  const dmax = this.d_max_inv > 0 ? 1 / this.d_max_inv : null;\n  if (dmax !== null && this.d_min > dmax) this.d_min = dmax;\n  this.points.material.uniforms.r2_max.value = 1 / (this.d_min * this.d_min);\n  const low_res = dmax !== null ? dmax.toFixed(2) : '∞';\n  this.hud('res. limit: ' + low_res + ' - ' + this.d_min.toFixed(2) + 'Å');\n};\n\nReciprocalViewer.prototype.change_dmax = function (delta) {\n  if (this.d_min == null) return;\n  let v = Math.min(this.d_max_inv + delta, 1 / this.d_min);\n  if (v < 1e-6) v = 0;\n  this.d_max_inv = v;\n  this.points.material.uniforms.r2_min.value = v * v;\n  const low_res = v > 0 ? (1 / v).toFixed(2) : '∞';\n  this.hud('res. limit: ' + low_res + ' - ' + this.d_min.toFixed(2) + 'Å');\n};\n\nReciprocalViewer.prototype.redraw_models = function () {\n  if (this.points) this.remove_and_dispose(this.points);\n  this.set_points();\n};\n\nReciprocalViewer.prototype.ColorSchemes = [\n  {\n    name: 'solarized dark',\n    bg: 0x002b36,\n    fg: 0xfdf6e3,\n    map_den: 0xeee8d5,\n    lattices: [0xdc322f, 0x2aa198, 0x268bd2, 0x859900,\n               0xd33682, 0xb58900, 0x6c71c4, 0xcb4b16],\n    axes: [0xffaaaa, 0xaaffaa, 0xaaaaff],\n  },\n  {\n    name: 'solarized light',\n    bg: 0xfdf6e3,\n    fg: 0x002b36,\n    map_den: 0x073642,\n    lattices: [0xdc322f, 0x2aa198, 0x268bd2, 0x859900,\n               0xd33682, 0xb58900, 0x6c71c4, 0xcb4b16],\n    axes: [0xffaaaa, 0xaaffaa, 0xaaaaff],\n  },\n];\n"],"names":["const","let","THREE.Color","THREE.BufferGeometry","THREE.BufferAttribute","THREE.Vector3","THREE.CatmullRomCurve3","THREE.Object3D","THREE.ShaderMaterial","THREE.VertexColors","THREE.Line","THREE.LineBasicMaterial","THREE.LineSegments","THREE.Mesh","THREE.TriangleStripDrawMode","THREE.Points","THREE.Matrix4","THREE.Ray","THREE.Texture","THREE.Vector2","THREE.Quaternion","THREE.Scene","THREE.Fog","THREE.AmbientLight","THREE.OrthographicCamera","THREE.Raycaster","THREE.WebGLRenderer"],"mappings":"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EACtD,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,GAAG,KAAK,EAAE,KAAK;EACtD,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EACtD,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,GAAG,KAAK,EAAE,KAAK;EACtD,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EACtD,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,KAAK;EACtD,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EACtD,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI;EACrD,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EACtD,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EACtD,IAAI,GAAG,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EACtD,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EACtD,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EACtD,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EACtD,KAAK,EAAE,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EACtD,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,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CxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACtC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACtC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACzB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,E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CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3D,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACtC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3C,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACtC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAClC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACvC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;EAClC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACjC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1C,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACxC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACpD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9C,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3C,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CA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,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAC9C,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACnD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC5C,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACtD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/C,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAChC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACvC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC/B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAC/C,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAA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C,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACtC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACvC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;EAClC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACzC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACzC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAA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CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;EACf,CAAC,CAAC,EAAE,CAAC,CAAC;EACN,CAAC,CAAC,EAAE,CAAC,CAAC;EACN,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACb,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACrB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACrB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;EACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACjC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACjC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACb,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACb,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACb,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACzB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACzB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACzB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACvC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACjC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACjC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAChC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACnB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACnB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACjC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACjC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACrB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACrB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACnB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACrB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACrB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;EACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACb,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,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"}