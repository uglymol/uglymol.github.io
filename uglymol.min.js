var UGLYMOL_VERSION="0.1.0";var THREE=THREE||require("three");var UnitCell=function(){"use strict";function UnitCell(a,b,c,alpha,beta,gamma){if(a<=0||b<=0||c<=0||alpha<=0||beta<=0||gamma<=0){throw Error("Zero or negative unit cell parameter(s).")}this.parameters=[a,b,c,alpha,beta,gamma];var deg2rad=Math.PI/180;var cos_alpha=Math.cos(deg2rad*alpha);var cos_beta=Math.cos(deg2rad*beta);var cos_gamma=Math.cos(deg2rad*gamma);var sin_alpha=Math.sin(deg2rad*alpha);var sin_beta=Math.sin(deg2rad*beta);var sin_gamma=Math.sin(deg2rad*gamma);if(sin_alpha===0||sin_beta===0||sin_gamma===0){throw Error("Impossible angle - N*180deg.")}var cos_alpha_star_sin_beta=(cos_beta*cos_gamma-cos_alpha)/sin_gamma;var cos_alpha_star=cos_alpha_star_sin_beta/sin_beta;var s1rca2=Math.sqrt(1-cos_alpha_star*cos_alpha_star);var orth=[a,b*cos_gamma,c*cos_beta,0,b*sin_gamma,-c*cos_alpha_star_sin_beta,0,0,c*sin_beta*s1rca2];var frac=[1/a,-cos_gamma/(sin_gamma*a),-(cos_gamma*cos_alpha_star_sin_beta+cos_beta*sin_gamma)/(sin_beta*s1rca2*sin_gamma*a),0,1/(sin_gamma*b),cos_alpha_star/(s1rca2*sin_gamma*b),0,0,1/(sin_beta*s1rca2*c)];function multiply(xyz,mat){var x=xyz[0],y=xyz[1],z=xyz[2];return[mat[0]*x+mat[1]*y+mat[2]*z,mat[4]*y+mat[5]*z,mat[8]*z]}this.fractionalize=function(xyz){return multiply(xyz,frac)};this.orthogonalize=function(xyz){return multiply(xyz,orth)}}return UnitCell}();var Model=function(){"use strict";var AMINO_ACIDS=["ALA","ARG","ASN","ASP","CYS","GLN","GLU","GLY","HIS","ILE","LEU","LYS","MET","MSE","PHE","PRO","SER","THR","TRP","TYR","VAL","UNK"];var NUCLEIC_ACIDS=["DA","DC","DG","DT","A","C","G","U","rA","rC","rG","rU","Ar","Cr","Gr","Ur"];var NOT_LIGANDS=["HOH"].concat(AMINO_ACIDS,NUCLEIC_ACIDS);function Model(){this.atoms=[];this.unit_cell=null;this.space_group=null;this.has_hydrogens=false;this.lower_bound=null;this.upper_bound=null}Model.prototype.from_pdb=function(pdb_string){var lines=pdb_string.split("\n");var chain_index=0;var last_chain=null;var atom_i_seq=0;for(var i=0;i<lines.length;i++){var line=lines[i];var rec_type=line.substring(0,6);if(rec_type==="ATOM  "||rec_type==="HETATM"){var new_atom=new Atom;new_atom.from_pdb_line(line);new_atom.i_seq=atom_i_seq++;if(!this.has_hydrogens&&new_atom.element==="H"){this.has_hydrogens=true}if(new_atom.chain!==last_chain){chain_index++}new_atom.chain_index=chain_index;last_chain=new_atom.chain;this.atoms.push(new_atom)}else if(rec_type==="ANISOU"){}else if(rec_type==="CRYST1"){var a=parseFloat(line.substring(6,15));var b=parseFloat(line.substring(15,24));var c=parseFloat(line.substring(24,33));var alpha=parseFloat(line.substring(33,40));var beta=parseFloat(line.substring(40,47));var gamma=parseFloat(line.substring(47,54));this.unit_cell=new UnitCell(a,b,c,alpha,beta,gamma)}else if(rec_type.substring(0,3)==="TER"){last_chain=null}}if(this.atoms.length===0){throw Error("No atom records found.")}this.calculate_bounds();this.calculate_connectivity()};Model.prototype.calculate_bounds=function(){var lower=this.lower_bound=[Infinity,Infinity,Infinity];var upper=this.upper_bound=[-Infinity,-Infinity,-Infinity];for(var i=0;i<this.atoms.length;i++){var atom=this.atoms[i];for(var j=0;j<3;j++){var v=atom.xyz[j];if(v<lower[j])lower[j]=v;if(v>upper[j])upper[j]=v}}for(var k=0;k<3;++k){lower[k]-=.001;upper[k]+=.001}};Model.prototype.next_residue=function(atom,backward){var len=this.atoms.length;var start=(atom?atom.i_seq:0)+len;for(var i=atom?1:0;i<len;i++){var idx=(start+(backward?-i:i))%len;var a=this.atoms[idx];if(!a.is_main_conformer())continue;if(a.name==="CA"&&a.element==="C"||a.name==="P"){return a}}};Model.prototype.extract_trace=function(){var segments=[];var current_segment=[];var last_atom=null;var i;for(i=0;i<this.atoms.length;i++){var atom=this.atoms[i];if(atom.altloc!==""&&atom.altloc!=="A")continue;if(atom.name==="CA"&&atom.element==="C"||atom.name==="P"){var start_new=true;if(last_atom!==null&&last_atom.chain_index===atom.chain_index){var dxyz2=atom.distance_sq(last_atom);if(atom.name==="CA"&&dxyz2<=5.5*5.5||atom.name==="P"&&dxyz2<7.5*7.5){current_segment.push(atom);start_new=false}}if(start_new){if(current_segment.length>2){segments.push(current_segment)}current_segment=[atom]}last_atom=atom}}if(current_segment.length>2){segments.push(current_segment)}return segments};Model.prototype.get_center=function(){var xsum=0,ysum=0,zsum=0;var n_atoms=this.atoms.length;for(var i=0;i<n_atoms;i++){var xyz=this.atoms[i].xyz;xsum+=xyz[0];ysum+=xyz[1];zsum+=xyz[2]}return[xsum/n_atoms,ysum/n_atoms,zsum/n_atoms]};function Atom(){this.hetero=false;this.name="";this.altloc="";this.resname="";this.chain="";this.chain_index=null;this.resseq=null;this.icode=null;this.xyz=[0,0,0];this.occ=1;this.b=0;this.element="";this.charge=0;this.i_seq=null;this.is_ligand=null;this.bonds=[]}Atom.prototype.from_pdb_line=function(pdb_line){if(pdb_line.length<66){throw Error("ATOM or HETATM record is too short: "+pdb_line)}var rec_type=pdb_line.substring(0,6);if(rec_type==="HETATM"){this.hetero=true}else if(rec_type!=="ATOM  "){throw Error("Wrong record type: "+rec_type)}this.name=pdb_line.substring(12,16).trim();this.altloc=pdb_line.substring(16,17).trim();this.resname=pdb_line.substring(17,20).trim();this.chain=pdb_line.substring(20,22).trim();this.resseq=parseInt(pdb_line.substring(22,26),10);this.icode=pdb_line.substring(26,27).trim();var x=parseFloat(pdb_line.substring(30,38));var y=parseFloat(pdb_line.substring(38,46));var z=parseFloat(pdb_line.substring(46,54));this.xyz=[x,y,z];this.occ=parseFloat(pdb_line.substring(54,60));this.b=parseFloat(pdb_line.substring(60,66));if(pdb_line.length>=78){this.element=pdb_line.substring(76,78).trim().toUpperCase()}if(pdb_line.length>=80){this.charge=pdb_line.substring(78,80).trim()}this.is_ligand=NOT_LIGANDS.indexOf(this.resname)===-1};Atom.prototype.b_as_u=function(){return Math.sqrt(this.b/(8*3.14159*3.14159))};Atom.prototype.distance_sq=function(other){var dx=this.xyz[0]-other.xyz[0];var dy=this.xyz[1]-other.xyz[1];var dz=this.xyz[2]-other.xyz[2];return dx*dx+dy*dy+dz*dz};Atom.prototype.distance=function(other){return Math.sqrt(this.distance_sq(other))};Atom.prototype.midpoint=function(other){return[(this.xyz[0]+other.xyz[0])/2,(this.xyz[1]+other.xyz[1])/2,(this.xyz[2]+other.xyz[2])/2]};Atom.prototype.is_hydrogen=function(){return this.element==="H"||this.element==="D"};Atom.prototype.is_s_or_p=function(){return this.element==="S"||this.element==="P"};Atom.prototype.is_ion=function(){return this.element===this.resname};Atom.prototype.is_water=function(){return this.resname==="HOH"};Atom.prototype.is_same_residue=function(other,ignore_altloc){return other.resseq===this.resseq&&other.icode===this.icode&&other.chain===this.chain&&other.resname===this.resname&&(ignore_altloc||other.altloc===this.altloc)};Atom.prototype.is_same_conformer=function(other){return this.altloc===""||other.altloc===""||this.altloc===other.altloc};Atom.prototype.is_main_conformer=function(){return this.altloc===""||this.altloc==="A"};Atom.prototype.is_bonded_to=function(other){var MAX_DIST_SQ=1.99*1.99;var MAX_DIST_H_SQ=1.3*1.3;var MAX_DIST_SP_SQ=2.2*2.2;if(!this.is_same_conformer(other))return false;if(this.element==="H"&&other.element==="H")return false;var dxyz2=this.distance_sq(other);if(dxyz2>MAX_DIST_SP_SQ)return false;if(this.element==="H"||other.element==="H"){return dxyz2<=MAX_DIST_H_SQ}return dxyz2<=MAX_DIST_SQ||this.is_s_or_p()||other.is_s_or_p()};Atom.prototype.long_label=function(){var a=this;return a.name+" /"+a.resseq+" "+a.resname+"/"+a.chain+" - occ: "+a.occ.toFixed(2)+" bf: "+a.b.toFixed(2)+" ele: "+a.element+" pos: ("+a.xyz[0].toFixed(2)+","+a.xyz[1].toFixed(2)+","+a.xyz[2].toFixed(2)+")"};function Cubicles(atoms,box_length,lower_bound,upper_bound){var i;this.boxes=[];this.xdim=Math.ceil((upper_bound[0]-lower_bound[0])/box_length);this.ydim=Math.ceil((upper_bound[1]-lower_bound[1])/box_length);this.zdim=Math.ceil((upper_bound[2]-lower_bound[2])/box_length);var nxyz=this.xdim*this.ydim*this.zdim;for(i=0;i<nxyz;i++){this.boxes.push([])}this.find_box_id=function(x,y,z){var xstep=Math.floor((x-lower_bound[0])/box_length);var ystep=Math.floor((y-lower_bound[1])/box_length);var zstep=Math.floor((z-lower_bound[2])/box_length);var box_id=(zstep*this.ydim+ystep)*this.xdim+xstep;return box_id>=0&&box_id<this.boxes.length?box_id:null};for(i=0;i<atoms.length;i++){var xyz=atoms[i].xyz;var box_id=this.find_box_id(xyz[0],xyz[1],xyz[2]);if(box_id===null){throw Error("wrong cubicle")}this.boxes[box_id].push(i)}}Cubicles.prototype.get_nearby_atoms=function(box_id){var indices=[];var xydim=this.xdim*this.ydim;var uv=Math.max(box_id%xydim,0);var u=Math.max(uv%this.xdim,0);var v=Math.floor(uv/this.xdim);var w=Math.floor(box_id/xydim);console.assert(w*xydim+v*this.xdim+u===box_id);for(var iu=u-1;iu<=u+1;iu++){if(iu<0||iu>=this.xdim)continue;for(var iv=v-1;iv<=v+1;iv++){if(iv<0||iv>=this.ydim)continue;for(var iw=w-1;iw<=w+1;iw++){if(iw<0||iw>=this.zdim)continue;var other_box_id=iw*xydim+iv*this.xdim+iu;if(other_box_id>=this.boxes.length||other_box_id<0){throw Error("Box out of bounds: ID "+other_box_id)}var box=this.boxes[other_box_id];for(var i=0;i<box.length;i++){indices.push(box[i])}}}}return indices};Model.prototype.calculate_connectivity=function(){var atoms=this.atoms;var cubes=new Cubicles(atoms,3,this.lower_bound,this.upper_bound);for(var i=0;i<cubes.boxes.length;i++){var box=cubes.boxes[i];if(box.length===0)continue;var nearby_atoms=cubes.get_nearby_atoms(i);for(var a=0;a<box.length;a++){var atom_id=box[a];for(var k=0;k<nearby_atoms.length;k++){var j=nearby_atoms[k];if(j>atom_id&&atoms[atom_id].is_bonded_to(atoms[j])){atoms[atom_id].bonds.push(j);atoms[j].bonds.push(atom_id)}}}}this.cubes=cubes};Model.prototype.get_nearest_atom=function(x,y,z,atom_name){var box_id=this.cubes.find_box_id(x,y,z);var indices=this.cubes.get_nearby_atoms(box_id);var nearest=null;var min_d2=Infinity;for(var i=0;i<indices.length;i++){var atom=this.atoms[indices[i]];if(atom_name!==undefined&&atom_name!==null&&atom_name!==atom.name)continue;var dx=atom.xyz[0]-x;var dy=atom.xyz[1]-y;var dz=atom.xyz[2]-z;var d2=dx*dx+dy*dy+dz*dz;if(d2<min_d2){nearest=atom;min_d2=d2}}return nearest};return Model}();var ElMap=function(){"use strict";function GridArray(dim){this.dim=dim;this.values=new Float32Array(dim[0]*dim[1]*dim[2])}function modulo(a,b){var reminder=a%b;return reminder>=0?reminder:reminder+b}GridArray.prototype.grid2index=function(i,j,k){i=modulo(i,this.dim[0]);j=modulo(j,this.dim[1]);k=modulo(k,this.dim[2]);return this.dim[2]*(this.dim[1]*i+j)+k};GridArray.prototype.grid2frac=function(i,j,k){return[i/this.dim[0],j/this.dim[1],k/this.dim[2]]};GridArray.prototype.frac2grid=function(xyz){return[Math.floor(xyz[0]*this.dim[0])|0,Math.floor(xyz[1]*this.dim[1])|0,Math.floor(xyz[2]*this.dim[2])|0]};GridArray.prototype.set_grid_value=function(i,j,k,value){var idx=this.grid2index(i,j,k);this.values[idx]=value};GridArray.prototype.get_grid_value=function(i,j,k){var idx=this.grid2index(i,j,k);return this.values[idx]};function ElMap(){this.unit_cell=null;this.grid=null;this.mean=0;this.rms=1}ElMap.prototype.calculate_stddev=function(a,offset){var sum=0;var sq_sum=0;var alen=a.length;for(var i=offset;i<alen;i++){sum+=a[i];sq_sum+=a[i]*a[i]}var mean=sum/(alen-offset);var variance=sq_sum/(alen-offset)-mean*mean;this.mean=mean;this.rms=Math.sqrt(variance)};ElMap.prototype.abs_level=function(sigma){return sigma*this.rms+this.mean};ElMap.prototype.from_ccp4=function(buf){if(buf.byteLength<1024)throw Error("File shorter than 1024 bytes.");var iview=new Int32Array(buf,0,256);if(iview[52]!==542130509)throw Error("not a CCP4 map");var n_crs=[iview[0],iview[1],iview[2]];this.mode=iview[3];var nb;if(this.mode===2)nb=4;else if(this.mode===0)nb=1;else throw Error("Only Mode 2 and Mode 0 of CCP4 map is supported.");var start=[iview[4],iview[5],iview[6]];var n_grid=[iview[7],iview[8],iview[9]];var nsymbt=iview[23];if(1024+nsymbt+nb*n_crs[0]*n_crs[1]*n_crs[2]!==buf.byteLength){throw Error("ccp4 file too short or too long")}var fview=new Float32Array(buf,0,buf.byteLength>>2);this.unit_cell=new UnitCell(fview[10],fview[11],fview[12],fview[13],fview[14],fview[15]);var map_crs=[iview[16],iview[17],iview[18]];var ax=map_crs.indexOf(1);var ay=map_crs.indexOf(2);var az=map_crs.indexOf(3);this.min=fview[19];this.max=fview[20];this.sg_number=iview[22];this.lskflg=iview[24];this.grid=new GridArray(n_grid);if(nsymbt%4!==0){throw Error("CCP4 map with NSYMBT not divisible by 4 is not supported.")}var data_view;if(this.mode===2)data_view=fview;else data_view=new Int8Array(buf);var idx=(1024+nsymbt)/nb|0;this.mean=fview[21];this.rms=fview[54];if(this.mean<this.min||this.mean>this.max||this.rms<=0){this.calculate_stddev(data_view,idx)}var b1=1;var b0=0;if(this.mode===0&&iview[39]===-128&&iview[40]===127){b1=(this.max-this.min)/255;b0=.5*(this.min+this.max+b1)}var end=[start[0]+n_crs[0],start[1]+n_crs[1],start[2]+n_crs[2]];var it=[0,0,0];for(it[2]=start[2];it[2]<end[2];it[2]++){for(it[1]=start[1];it[1]<end[1];it[1]++){for(it[0]=start[0];it[0]<end[0];it[0]++){this.grid.set_grid_value(it[ax],it[ay],it[az],b1*data_view[idx]+b0);idx++}}}if(nsymbt>0){var u8view=new Uint8Array(buf);for(var i=0;i+80<=nsymbt;i+=80){var j;var symop="";for(j=0;j<80;++j){symop+=String.fromCharCode(u8view[1024+i+j])}if(/^\s*x\s*,\s*y\s*,\s*z\s*$/i.test(symop))continue;var mat=parse_symop(symop);for(j=0;j<3;++j){mat[j][3]=Math.round(mat[j][3]*n_grid[j])|0}idx=(1024+nsymbt)/nb|0;var xyz=[0,0,0];for(it[2]=start[2];it[2]<end[2];it[2]++){for(it[1]=start[1];it[1]<end[1];it[1]++){for(it[0]=start[0];it[0]<end[0];it[0]++){for(j=0;j<3;++j){xyz[j]=it[ax]*mat[j][0]+it[ay]*mat[j][1]+it[az]*mat[j][2]+mat[j][3]}this.grid.set_grid_value(xyz[0],xyz[1],xyz[2],b1*data_view[idx]+b0);idx++}}}}}};function parse_symop(symop){var ops=symop.toLowerCase().replace(/\s+/g,"").split(",");if(ops.length!==3)throw Error("Unexpected symop: "+symop);var mat=[];for(var i=0;i<3;i++){var terms=ops[i].split(/(?=[+-])/);var row=[0,0,0,0];for(var j=0;j<terms.length;j++){var term=terms[j];var sign=term[0]==="-"?-1:1;var m=terms[j].match(/^[+-]?([xyz])$/);if(m){var pos={x:0,y:1,z:2}[m[1]];row[pos]=sign}else{m=terms[j].match(/^[+-]?(\d)\/(\d)$/);if(!m)throw Error("What is "+terms[j]+" in "+symop);row[3]=sign*Number(m[1])/Number(m[2])}}mat.push(row)}return mat}ElMap.prototype.from_dsn6=function(buf){var u8data=new Uint8Array(buf);var iview=new Int16Array(u8data.buffer);if(iview[18]!==100){var len=iview.length;for(var n=0;n<len;n++){var val=iview[n];iview[n]=(val&255)<<8|val>>8&255}}if(iview[18]!==100){throw Error("Endian swap failed")}var origin=[iview[0],iview[1],iview[2]];var n_real=[iview[3],iview[4],iview[5]];var n_grid=[iview[6],iview[7],iview[8]];var cell_mult=1/iview[17];this.unit_cell=new UnitCell(cell_mult*iview[9],cell_mult*iview[10],cell_mult*iview[11],cell_mult*iview[12],cell_mult*iview[13],cell_mult*iview[14]);this.grid=new GridArray(n_grid);var prod=iview[15]/100;var plus=iview[16];var offset=512;var n_blocks=[Math.ceil(n_real[0]/8),Math.ceil(n_real[1]/8),Math.ceil(n_real[2]/8)];for(var zz=0;zz<n_blocks[2];zz++){for(var yy=0;yy<n_blocks[1];yy++){for(var xx=0;xx<n_blocks[0];xx++){for(var k=0;k<8;k++){var z=8*zz+k;for(var j=0;j<8;j++){var y=8*yy+j;for(var i=0;i<8;i++){var x=8*xx+i;if(x<n_real[0]&&y<n_real[1]&&z<n_real[2]){var density=(u8data[offset]-plus)/prod;offset++;this.grid.set_grid_value(origin[0]+x,origin[1]+y,origin[2]+z,density)}else{offset+=8-i;break}}}}}}}this.calculate_stddev(this.grid.values,0)};ElMap.prototype.show_debug_info=function(){console.log("unit cell: "+this.unit_cell.parameters.join(", "));console.log("grid: "+this.grid.dim)};ElMap.prototype.extract_block=function(radius,center){var grid=this.grid;var unit_cell=this.unit_cell;var grid_min=[0,0,0];var grid_max=grid.dim;if(center){var xyz_min=[center[0]-radius,center[1]-radius,center[2]-radius];var xyz_max=[center[0]+radius,center[1]+radius,center[2]+radius];var frac_min=unit_cell.fractionalize(xyz_min);var frac_max=unit_cell.fractionalize(xyz_max);grid_min=grid.frac2grid(frac_min);grid_max=grid.frac2grid(frac_max)}var nx=grid_max[0]-grid_min[0]+1;var ny=grid_max[1]-grid_min[1]+1;var nz=grid_max[2]-grid_min[2]+1;var points=[];var values=[];for(var i=grid_min[0];i<=grid_max[0];i++){for(var j=grid_min[1];j<=grid_max[1];j++){for(var k=grid_min[2];k<=grid_max[2];k++){var frac=grid.grid2frac(i,j,k);var orth=unit_cell.orthogonalize(frac);points.push(orth);var map_value=grid.get_grid_value(i,j,k);values.push(map_value)}}}this.block={points:points,values:values,size:[nx,ny,nz]}};ElMap.prototype.isomesh_in_block=function(sigma,method){var abs_level=this.abs_level(sigma);var bl=this.block;return isosurface(bl.size,bl.values,bl.points,abs_level,method)};return ElMap}();var isosurface=function(){"use strict";var edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]);var triTable=[[],[0,8,3],[0,1,9],[1,8,3,9,8,1],[1,2,10],[0,8,3,1,2,10],[9,2,10,0,2,9],[2,8,3,2,10,8,10,9,8],[3,11,2],[0,11,2,8,11,0],[1,9,0,2,3,11],[1,11,2,1,9,11,9,8,11],[3,10,1,11,10,3],[0,10,1,0,8,10,8,11,10],[3,9,0,3,11,9,11,10,9],[9,8,10,10,8,11],[4,7,8],[4,3,0,7,3,4],[0,1,9,8,4,7],[4,1,9,4,7,1,7,3,1],[1,2,10,8,4,7],[3,4,7,3,0,4,1,2,10],[9,2,10,9,0,2,8,4,7],[2,10,9,2,9,7,2,7,3,7,9,4],[8,4,7,3,11,2],[11,4,7,11,2,4,2,0,4],[9,0,1,8,4,7,2,3,11],[4,7,11,9,4,11,9,11,2,9,2,1],[3,10,1,3,11,10,7,8,4],[1,11,10,1,4,11,1,0,4,7,11,4],[4,7,8,9,0,11,9,11,10,11,0,3],[4,7,11,4,11,9,9,11,10],[9,5,4],[9,5,4,0,8,3],[0,5,4,1,5,0],[8,5,4,8,3,5,3,1,5],[1,2,10,9,5,4],[3,0,8,1,2,10,4,9,5],[5,2,10,5,4,2,4,0,2],[2,10,5,3,2,5,3,5,4,3,4,8],[9,5,4,2,3,11],[0,11,2,0,8,11,4,9,5],[0,5,4,0,1,5,2,3,11],[2,1,5,2,5,8,2,8,11,4,8,5],[10,3,11,10,1,3,9,5,4],[4,9,5,0,8,1,8,10,1,8,11,10],[5,4,0,5,0,11,5,11,10,11,0,3],[5,4,8,5,8,10,10,8,11],[9,7,8,5,7,9],[9,3,0,9,5,3,5,7,3],[0,7,8,0,1,7,1,5,7],[1,5,3,3,5,7],[9,7,8,9,5,7,10,1,2],[10,1,2,9,5,0,5,3,0,5,7,3],[8,0,2,8,2,5,8,5,7,10,5,2],[2,10,5,2,5,3,3,5,7],[7,9,5,7,8,9,3,11,2],[9,5,7,9,7,2,9,2,0,2,7,11],[2,3,11,0,1,8,1,7,8,1,5,7],[11,2,1,11,1,7,7,1,5],[9,5,8,8,5,7,10,1,3,10,3,11],[5,7,0,5,0,9,7,11,0,1,0,10,11,10,0],[11,10,0,11,0,3,10,5,0,8,0,7,5,7,0],[11,10,5,7,11,5],[10,6,5],[0,8,3,5,10,6],[9,0,1,5,10,6],[1,8,3,1,9,8,5,10,6],[1,6,5,2,6,1],[1,6,5,1,2,6,3,0,8],[9,6,5,9,0,6,0,2,6],[5,9,8,5,8,2,5,2,6,3,2,8],[2,3,11,10,6,5],[11,0,8,11,2,0,10,6,5],[0,1,9,2,3,11,5,10,6],[5,10,6,1,9,2,9,11,2,9,8,11],[6,3,11,6,5,3,5,1,3],[0,8,11,0,11,5,0,5,1,5,11,6],[3,11,6,0,3,6,0,6,5,0,5,9],[6,5,9,6,9,11,11,9,8],[5,10,6,4,7,8],[4,3,0,4,7,3,6,5,10],[1,9,0,5,10,6,8,4,7],[10,6,5,1,9,7,1,7,3,7,9,4],[6,1,2,6,5,1,4,7,8],[1,2,5,5,2,6,3,0,4,3,4,7],[8,4,7,9,0,5,0,6,5,0,2,6],[7,3,9,7,9,4,3,2,9,5,9,6,2,6,9],[3,11,2,7,8,4,10,6,5],[5,10,6,4,7,2,4,2,0,2,7,11],[0,1,9,4,7,8,2,3,11,5,10,6],[9,2,1,9,11,2,9,4,11,7,11,4,5,10,6],[8,4,7,3,11,5,3,5,1,5,11,6],[5,1,11,5,11,6,1,0,11,7,11,4,0,4,11],[0,5,9,0,6,5,0,3,6,11,6,3,8,4,7],[6,5,9,6,9,11,4,7,9,7,11,9],[10,4,9,6,4,10],[4,10,6,4,9,10,0,8,3],[10,0,1,10,6,0,6,4,0],[8,3,1,8,1,6,8,6,4,6,1,10],[1,4,9,1,2,4,2,6,4],[3,0,8,1,2,9,2,4,9,2,6,4],[0,2,4,4,2,6],[8,3,2,8,2,4,4,2,6],[10,4,9,10,6,4,11,2,3],[0,8,2,2,8,11,4,9,10,4,10,6],[3,11,2,0,1,6,0,6,4,6,1,10],[6,4,1,6,1,10,4,8,1,2,1,11,8,11,1],[9,6,4,9,3,6,9,1,3,11,6,3],[8,11,1,8,1,0,11,6,1,9,1,4,6,4,1],[3,11,6,3,6,0,0,6,4],[6,4,8,11,6,8],[7,10,6,7,8,10,8,9,10],[0,7,3,0,10,7,0,9,10,6,7,10],[10,6,7,1,10,7,1,7,8,1,8,0],[10,6,7,10,7,1,1,7,3],[1,2,6,1,6,8,1,8,9,8,6,7],[2,6,9,2,9,1,6,7,9,0,9,3,7,3,9],[7,8,0,7,0,6,6,0,2],[7,3,2,6,7,2],[2,3,11,10,6,8,10,8,9,8,6,7],[2,0,7,2,7,11,0,9,7,6,7,10,9,10,7],[1,8,0,1,7,8,1,10,7,6,7,10,2,3,11],[11,2,1,11,1,7,10,6,1,6,7,1],[8,9,6,8,6,7,9,1,6,11,6,3,1,3,6],[0,9,1,11,6,7],[7,8,0,7,0,6,3,11,0,11,6,0],[7,11,6],[7,6,11],[3,0,8,11,7,6],[0,1,9,11,7,6],[8,1,9,8,3,1,11,7,6],[10,1,2,6,11,7],[1,2,10,3,0,8,6,11,7],[2,9,0,2,10,9,6,11,7],[6,11,7,2,10,3,10,8,3,10,9,8],[7,2,3,6,2,7],[7,0,8,7,6,0,6,2,0],[2,7,6,2,3,7,0,1,9],[1,6,2,1,8,6,1,9,8,8,7,6],[10,7,6,10,1,7,1,3,7],[10,7,6,1,7,10,1,8,7,1,0,8],[0,3,7,0,7,10,0,10,9,6,10,7],[7,6,10,7,10,8,8,10,9],[6,8,4,11,8,6],[3,6,11,3,0,6,0,4,6],[8,6,11,8,4,6,9,0,1],[9,4,6,9,6,3,9,3,1,11,3,6],[6,8,4,6,11,8,2,10,1],[1,2,10,3,0,11,0,6,11,0,4,6],[4,11,8,4,6,11,0,2,9,2,10,9],[10,9,3,10,3,2,9,4,3,11,3,6,4,6,3],[8,2,3,8,4,2,4,6,2],[0,4,2,4,6,2],[1,9,0,2,3,4,2,4,6,4,3,8],[1,9,4,1,4,2,2,4,6],[8,1,3,8,6,1,8,4,6,6,10,1],[10,1,0,10,0,6,6,0,4],[4,6,3,4,3,8,6,10,3,0,3,9,10,9,3],[10,9,4,6,10,4],[4,9,5,7,6,11],[0,8,3,4,9,5,11,7,6],[5,0,1,5,4,0,7,6,11],[11,7,6,8,3,4,3,5,4,3,1,5],[9,5,4,10,1,2,7,6,11],[6,11,7,1,2,10,0,8,3,4,9,5],[7,6,11,5,4,10,4,2,10,4,0,2],[3,4,8,3,5,4,3,2,5,10,5,2,11,7,6],[7,2,3,7,6,2,5,4,9],[9,5,4,0,8,6,0,6,2,6,8,7],[3,6,2,3,7,6,1,5,0,5,4,0],[6,2,8,6,8,7,2,1,8,4,8,5,1,5,8],[9,5,4,10,1,6,1,7,6,1,3,7],[1,6,10,1,7,6,1,0,7,8,7,0,9,5,4],[4,0,10,4,10,5,0,3,10,6,10,7,3,7,10],[7,6,10,7,10,8,5,4,10,4,8,10],[6,9,5,6,11,9,11,8,9],[3,6,11,0,6,3,0,5,6,0,9,5],[0,11,8,0,5,11,0,1,5,5,6,11],[6,11,3,6,3,5,5,3,1],[1,2,10,9,5,11,9,11,8,11,5,6],[0,11,3,0,6,11,0,9,6,5,6,9,1,2,10],[11,8,5,11,5,6,8,0,5,10,5,2,0,2,5],[6,11,3,6,3,5,2,10,3,10,5,3],[5,8,9,5,2,8,5,6,2,3,8,2],[9,5,6,9,6,0,0,6,2],[1,5,8,1,8,0,5,6,8,3,8,2,6,2,8],[1,5,6,2,1,6],[1,3,6,1,6,10,3,8,6,5,6,9,8,9,6],[10,1,0,10,0,6,9,5,0,5,6,0],[0,3,8,5,6,10],[10,5,6],[11,5,10,7,5,11],[11,5,10,11,7,5,8,3,0],[5,11,7,5,10,11,1,9,0],[10,7,5,10,11,7,9,8,1,8,3,1],[11,1,2,11,7,1,7,5,1],[0,8,3,1,2,7,1,7,5,7,2,11],[9,7,5,9,2,7,9,0,2,2,11,7],[7,5,2,7,2,11,5,9,2,3,2,8,9,8,2],[2,5,10,2,3,5,3,7,5],[8,2,0,8,5,2,8,7,5,10,2,5],[9,0,1,5,10,3,5,3,7,3,10,2],[9,8,2,9,2,1,8,7,2,10,2,5,7,5,2],[1,3,5,3,7,5],[0,8,7,0,7,1,1,7,5],[9,0,3,9,3,5,5,3,7],[9,8,7,5,9,7],[5,8,4,5,10,8,10,11,8],[5,0,4,5,11,0,5,10,11,11,3,0],[0,1,9,8,4,10,8,10,11,10,4,5],[10,11,4,10,4,5,11,3,4,9,4,1,3,1,4],[2,5,1,2,8,5,2,11,8,4,5,8],[0,4,11,0,11,3,4,5,11,2,11,1,5,1,11],[0,2,5,0,5,9,2,11,5,4,5,8,11,8,5],[9,4,5,2,11,3],[2,5,10,3,5,2,3,4,5,3,8,4],[5,10,2,5,2,4,4,2,0],[3,10,2,3,5,10,3,8,5,4,5,8,0,1,9],[5,10,2,5,2,4,1,9,2,9,4,2],[8,4,5,8,5,3,3,5,1],[0,4,5,1,0,5],[8,4,5,8,5,3,9,0,5,0,3,5],[9,4,5],[4,11,7,4,9,11,9,10,11],[0,8,3,4,9,7,9,11,7,9,10,11],[1,10,11,1,11,4,1,4,0,7,4,11],[3,1,4,3,4,8,1,10,4,7,4,11,10,11,4],[4,11,7,9,11,4,9,2,11,9,1,2],[9,7,4,9,11,7,9,1,11,2,11,1,0,8,3],[11,7,4,11,4,2,2,4,0],[11,7,4,11,4,2,8,3,4,3,2,4],[2,9,10,2,7,9,2,3,7,7,4,9],[9,10,7,9,7,4,10,2,7,8,7,0,2,0,7],[3,7,10,3,10,2,7,4,10,1,10,0,4,0,10],[1,10,2,8,7,4],[4,9,1,4,1,7,7,1,3],[4,9,1,4,1,7,0,8,1,8,7,1],[4,0,3,7,4,3],[4,8,7],[9,10,8,10,11,8],[3,0,9,3,9,11,11,9,10],[0,1,10,0,10,8,8,10,11],[3,1,10,11,3,10],[1,2,11,1,11,9,9,11,8],[3,0,9,3,9,11,1,2,9,2,11,9],[0,2,11,8,0,11],[3,2,11],[2,3,8,2,8,10,10,8,9],[9,10,2,0,9,2],[2,3,8,2,8,10,0,1,8,1,10,8],[1,10,2],[1,3,8,9,1,8],[0,9,1],[0,3,8],[]];var cubeVerts=[[0,0,0],[1,0,0],[1,1,0],[0,1,0],[0,0,1],[1,0,1],[1,1,1],[0,1,1]];var edgeIndex=[[0,1],[1,2],[2,3],[3,0],[4,5],[5,6],[6,7],[7,4],[0,4],[1,5],[2,6],[3,7]];function check_input(dims,values,points){if(dims[0]<=0||dims[1]<=0||dims[2]<=0){throw Error("Grid dimensions are zero along at least one edge")}var size_xyz=dims[0]*dims[1]*dims[2];if(values.length!==size_xyz||points.length!==size_xyz){throw Error("isosurface: array size mismatch")}}function calculate_vert_offsets(dims){var vert_offsets=[];for(var i=0;i<8;++i){var v=cubeVerts[i];vert_offsets.push(v[0]+dims[2]*(v[1]+dims[1]*v[2]))}return vert_offsets}function marching_cubes(dims,values,points,isolevel,snap){var vlist=new Array(12);var vert_offsets=calculate_vert_offsets(dims);var vertex_values=new Float32Array(8);var vertex_points=[null,null,null,null,null,null,null,null];var size_x=dims[0];var size_y=dims[1];var size_z=dims[2];var vertices=[];var faces=[];var vertex_count=0;for(var x=0;x<size_x-1;x++){for(var y=0;y<size_y-1;y++){for(var z=0;z<size_z-1;z++){var offset0=z+size_z*(y+size_y*x);var cubeindex=0;var i,j;for(i=0;i<8;++i){j=offset0+vert_offsets[i];cubeindex|=values[j]<isolevel?1<<i:0}if(cubeindex===0||cubeindex===255)continue;for(i=0;i<8;++i){j=offset0+vert_offsets[i];vertex_values[i]=values[j];vertex_points[i]=points[j]}var edge_mask=edgeTable[cubeindex];for(i=0;i<12;++i){if((edge_mask&1<<i)!==0){var e=edgeIndex[i];var mu=(isolevel-vertex_values[e[0]])/(vertex_values[e[1]]-vertex_values[e[0]]);if(snap===true){if(mu>.85)mu=1;else if(mu<.15)mu=0}var p1=vertex_points[e[0]];var p2=vertex_points[e[1]];vertices.push(p1[0]+(p2[0]-p1[0])*mu,p1[1]+(p2[1]-p1[1])*mu,p1[2]+(p2[2]-p1[2])*mu);vlist[i]=vertex_count++}}var t=triTable[cubeindex];for(i=0;i<t.length;i++){faces.push(vlist[t[i]])}}}}return{vertices:vertices,faces:faces}}function isosurface(dims,values,points,isolevel,method){check_input(dims,values,points);return marching_cubes(dims,values,points,isolevel,method==="snapped MC")}return isosurface}();var Viewer=function(){"use strict";var ColorSchemes={dark:{bg:0,map_den:3367602,map_pos:2719785,map_neg:9121326,center:13211568,cell_box:16777215,H:15790320,C:11776768,N:8301307,O:15878532,S:4259648,MG:12632256,P:16760896,CL:10551136,CA:16777215,MN:16748736,FE:10498048,NI:65408,def:10526880},light:{bg:16777215,map_den:3367602,map_pos:2719785,map_neg:9121326,center:13092713,cell_box:0,H:4210752,C:11101284,N:1855923,O:12793961,S:10386237,def:8421504}};var auto_speed=1;function relX(evt){return 2*evt.pageX/window.innerWidth-1}function relY(evt){return 1-2*evt.pageY/window.innerHeight}function project_on_ball(x,y){var z=0;var length_sq=x*x+y*y;if(length_sq<1){z=Math.sqrt(1-length_sq)}else{var length=Math.sqrt(length_sq);x/=length;y/=length}return[x,y,z]}var _raycaster;function get_raycaster(coords,camera){if(_raycaster===undefined)_raycaster=new THREE.Raycaster;_raycaster.setFromCamera(coords,camera);_raycaster.near=camera.near;_raycaster.far=camera.far-.2*(camera.far-camera.near);_raycaster.linePrecision=.2;return _raycaster}var STATE={NONE:-1,ROTATE:0,PAN:1,ZOOM:2,PAN_ZOOM:3,SLAB:4,ROLL:5,AUTO_ROTATE:6,GO:7};var Controls=function(camera,target){var _state=STATE.NONE;var _rotate_start=new THREE.Vector3;var _rotate_end=new THREE.Vector3;var _zoom_start=new THREE.Vector2;var _zoom_end=new THREE.Vector2;var _pinch_start=0;var _pinch_end=0;var _pan_start=new THREE.Vector2;var _pan_end=new THREE.Vector2;var _panned=true;var _slab_width=10;var _rock_state=0;var _go_func=null;function change_slab_width(delta){_slab_width=Math.max(_slab_width+delta,.01)}function rotate_camera(eye){var quat=new THREE.Quaternion;quat.setFromUnitVectors(_rotate_end,_rotate_start);eye.applyQuaternion(quat);camera.up.applyQuaternion(quat);_rotate_end.applyQuaternion(quat);_rotate_start.copy(_rotate_end)}function zoom_camera(eye){var dx=_zoom_end.x-_zoom_start.x;var dy=_zoom_end.y-_zoom_start.y;if(_state===STATE.ZOOM){camera.zoom/=1-dx+dy}else if(_state===STATE.SLAB){change_slab_width(10*dx);target.addScaledVector(eye,-5/eye.length()*dy)}else if(_state===STATE.ROLL){camera.up.applyAxisAngle(eye,.05*(dx-dy))}_zoom_start.copy(_zoom_end)}function pan_camera(eye){var dx=_pan_end.x-_pan_start.x;var dy=_pan_end.y-_pan_start.y;dx*=.5*(camera.right-camera.left)/camera.zoom;dy*=.5*(camera.bottom-camera.top)/camera.zoom;var pan=eye.clone().cross(camera.up).setLength(dx);pan.addScaledVector(camera.up,dy/camera.up.length());camera.position.add(pan);target.add(pan);_pan_start.copy(_pan_end)}this.toggle_state=function(toggled,params){_state=_state===toggled?STATE.NONE:toggled;_rock_state=params.rock?0:null};this.is_going=function(){return _state===STATE.GO};function auto_rotate(eye){_rotate_start.copy(eye).normalize();var speed=3e-4*auto_speed;if(_rock_state!==null){_rock_state+=.02;speed=4e-5*auto_speed*Math.cos(_rock_state)}_rotate_end.crossVectors(camera.up,eye).multiplyScalar(speed).add(_rotate_start)}this.update=function(){var changed=false;var eye=camera.position.clone().sub(target);if(_state===STATE.AUTO_ROTATE){auto_rotate(eye)}if(!_rotate_start.equals(_rotate_end)){rotate_camera(eye);changed=true}if(_pinch_end!==_pinch_start){camera.zoom*=_pinch_end/_pinch_start;_pinch_start=_pinch_end;changed=true}if(!_zoom_end.equals(_zoom_start)){zoom_camera(eye);changed=true}if(!_pan_end.equals(_pan_start)){pan_camera(eye);_panned=true;changed=true}camera.position.addVectors(target,eye);if(_state===STATE.GO){_go_func();changed=true}camera.lookAt(target);return changed};this.start=function(new_state,x,y,dist){if(_state===STATE.NONE||_state===STATE.AUTO_ROTATE){_state=new_state}this.move(x,y,dist);switch(_state){case STATE.ROTATE:_rotate_start.copy(_rotate_end);break;case STATE.ZOOM:case STATE.SLAB:case STATE.ROLL:_zoom_start.copy(_zoom_end);break;case STATE.PAN:_pan_start.copy(_pan_end);_panned=false;break;case STATE.PAN_ZOOM:_pinch_start=_pinch_end;_pan_start.copy(_pan_end);break}};this.move=function(x,y,dist){switch(_state){case STATE.ROTATE:var xyz=project_on_ball(x,y);var eye=camera.position.clone().sub(target);_rotate_end.crossVectors(camera.up,eye).setLength(xyz[0]);_rotate_end.addScaledVector(camera.up,xyz[1]/camera.up.length());_rotate_end.addScaledVector(eye,xyz[2]/eye.length());break;case STATE.ZOOM:case STATE.SLAB:case STATE.ROLL:_zoom_end.set(x,y);break;case STATE.PAN:_pan_end.set(x,y);break;case STATE.PAN_ZOOM:_pan_end.set(x,y);_pinch_end=dist;break}};this.stop=function(model_bag){var atom=null;if(_state===STATE.PAN&&!_panned&&model_bag){atom=model_bag.pick_atom(get_raycaster(_pan_start,camera))}_state=STATE.NONE;_rotate_start.copy(_rotate_end);_pinch_start=_pinch_end;_pan_start.copy(_pan_end);if(atom!==null){this.go_to(new THREE.Vector3(atom.xyz[0],atom.xyz[1],atom.xyz[2]))}};this.slab_width=function(){return _slab_width};this.change_slab_width=change_slab_width;this.go_to=function(targ,cam_pos,cam_up,steps){if((!targ||targ.distanceToSquared(target)<.1)&&(!cam_pos||cam_pos.distanceToSquared(camera.position)<.1)&&(!cam_up||cam_up.distanceToSquared(camera.up)<.1)){return}_state=STATE.GO;steps=steps||60/auto_speed;var alphas=[];var prev_pos=0;for(var i=1;i<=steps;++i){var pos=i/steps;pos=pos<.5?2*pos*pos:-2*pos*(pos-2)-1;alphas.push((pos-prev_pos)/(1-prev_pos));prev_pos=pos}_go_func=function(){var a=alphas.shift();if(targ){if(!cam_pos)camera.position.sub(target);target.lerp(targ,a);if(!cam_pos)camera.position.add(target)}if(cam_pos)camera.position.lerp(cam_pos,a);if(cam_up)camera.up.lerp(cam_up,a);if(alphas.length===0){_state=STATE.NONE;_go_func=null}}}};var CUBE_EDGES=[[0,0,0],[1,0,0],[0,0,0],[0,1,0],[0,0,0],[0,0,1],[1,0,0],[1,1,0],[1,0,0],[1,0,1],[0,1,0],[1,1,0],[0,1,0],[0,1,1],[0,0,1],[1,0,1],[0,0,1],[0,1,1],[1,0,1],[1,1,1],[1,1,0],[1,1,1],[0,1,1],[1,1,1]];var COLOR_AIMS=["element","B-factor","occupancy","index","chain"];var RENDER_STYLES=["lines","trace","ribbon","lines+balls"];var MAP_STYLES=["marching cubes","snapped MC"];function make_center_cube(size,ctr,color){var geometry=new THREE.Geometry;for(var i=0;i<CUBE_EDGES.length;i++){var a=CUBE_EDGES[i];var x=ctr.x+size*(a[0]-.5);var y=ctr.y+size*(a[1]-.5);var z=ctr.z+size*(a[2]-.5);geometry.vertices.push(new THREE.Vector3(x,y,z));
}var material=new THREE.LineBasicMaterial({color:color,linewidth:2});return new THREE.LineSegments(geometry,material)}function make_unitcell_box(uc,color){if(!uc){throw Error("Unit cell not defined!")}var geometry=new THREE.Geometry;for(var i=0;i<CUBE_EDGES.length;i++){var xyz=uc.orthogonalize(CUBE_EDGES[i]);geometry.vertices.push(new THREE.Vector3(xyz[0],xyz[1],xyz[2]))}geometry.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));for(var j=6;j<CUBE_EDGES.length;j++){geometry.colors.push(color)}var material=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});return new THREE.LineSegments(geometry,material)}function rainbow_value(v,vmin,vmax){var c=new THREE.Color(14737632);if(vmin<vmax){var ratio=(v-vmin)/(vmax-vmin);var hue=(240-240*ratio)/360;c.setHSL(hue,1,.5)}return c}function color_by(style,atoms,elem_colors){var color_func;var i;var last_atom=atoms[atoms.length-1];if(style==="index"){color_func=function(atom){return rainbow_value(atom.i_seq,0,last_atom.i_seq)}}else if(style==="B-factor"){var vmin=Infinity;var vmax=-Infinity;for(i=0;i<atoms.length;i++){var v=atoms[i].b;if(v>vmax)vmax=v;if(v<vmin)vmin=v}console.log("B-factors in ["+vmin+", "+vmax+"]");color_func=function(atom){return rainbow_value(atom.b,vmin,vmax)}}else if(style==="occupancy"){color_func=function(atom){return rainbow_value(atom.occ,0,1)}}else if(style==="chain"){color_func=function(atom){return rainbow_value(atom.chain_index,0,last_atom.chain_index)}}else{color_func=function(atom){return elem_colors[atom.element]||elem_colors.def}}var colors=[];for(i=0;i<atoms.length;i++){colors.push(color_func(atoms[i]))}return colors}function make_balls(visible_atoms,colors,ball_size){var ball_texture=(new THREE.TextureLoader).load("src/ball.png");var pt_geometry=new THREE.Geometry;for(var i=0;i<visible_atoms.length;i++){var xyz=visible_atoms[i].xyz;pt_geometry.vertices.push(new THREE.Vector3(xyz[0],xyz[1],xyz[2]));pt_geometry.colors.push(colors[i])}var pt_material=new THREE.PointsMaterial({vertexColors:THREE.VertexColors,map:ball_texture,size:ball_size,alphaTest:.5});return new THREE.Points(pt_geometry,pt_material)}function make_segment_geometry(segment,colors,c_offset,smooth){var geometry=new THREE.Geometry;var i,xyz;if(!smooth||smooth<2){for(i=0;i<segment.length;i++){xyz=segment[i].xyz;geometry.vertices.push(new THREE.Vector3(xyz[0],xyz[1],xyz[2]));geometry.colors.push(colors[c_offset+i])}}else{var points=[];for(i=0;i<segment.length;i++){xyz=segment[i].xyz;points.push(new THREE.Vector3(xyz[0],xyz[1],xyz[2]))}for(i=0;i<segment.length-1;i++){for(var j=0;j<smooth;++j){geometry.colors.push(colors[c_offset+i])}}geometry.colors.push(colors[c_offset+i]);var curve=new THREE.CatmullRomCurve3(points);geometry.vertices=curve.getPoints(geometry.colors.length-1)}return geometry}function add_isolated_atom(geometry,atom,color){var c=atom.xyz;var R=.7;geometry.vertices.push(new THREE.Vector3(c[0]-R,c[1],c[2]));geometry.vertices.push(new THREE.Vector3(c[0]+R,c[1],c[2]));geometry.vertices.push(new THREE.Vector3(c[0],c[1]-R,c[2]));geometry.vertices.push(new THREE.Vector3(c[0],c[1]+R,c[2]));geometry.vertices.push(new THREE.Vector3(c[0],c[1],c[2]-R));geometry.vertices.push(new THREE.Vector3(c[0],c[1],c[2]+R));for(var i=0;i<6;i++){geometry.colors.push(color)}}function set_colors(palette,o){var scheme=ColorSchemes[palette];for(var key in scheme){if(o[key]){o[key].set(scheme[key])}else{o[key]=new THREE.Color(scheme[key])}}o.name=palette;return o}function MapBag(map,is_diff_map){this.map=map;this.name="";this.isolevel=is_diff_map?3:1.5;this.visible=true;this.types=is_diff_map?["map_pos","map_neg"]:["map_den"];this.block_ctr=new THREE.Vector3(Infinity,0,0);this.el_objects=[]}function ModelBag(model,config){this.model=model;this.name="";this.visible=true;this.conf=config;this.atomic_objects=null}ModelBag.prototype.pick_atom=function(raycaster){var intersects=raycaster.intersectObjects(this.atomic_objects);if(intersects.length<1)return null;var p=intersects[0].point;return this.model.get_nearest_atom(p.x,p.y,p.z)};ModelBag.prototype.get_visible_atoms=function(){var atoms=this.model.atoms;if(this.conf.hydrogens||!this.model.has_hydrogens){return atoms}var non_h=[];for(var i=0;i<atoms.length;i++){if(atoms[i].element!=="H"){non_h.push(atoms[i])}}return non_h};ModelBag.prototype.add_bonds=function(ligands_only,ball_size){var visible_atoms=this.get_visible_atoms();var color_style=ligands_only?"element":this.conf.color_aim;var colors=color_by(color_style,visible_atoms,this.conf.colors);var geometry=new THREE.Geometry;var opt={hydrogens:this.conf.hydrogens,ligands_only:ligands_only,balls:this.conf.render_style==="lines+balls"};for(var i=0;i<visible_atoms.length;i++){var atom=visible_atoms[i];var color=colors[i];if(ligands_only&&!atom.is_ligand)continue;if(atom.bonds.length===0&&!opt.balls){add_isolated_atom(geometry,atom,color)}else{for(var j=0;j<atom.bonds.length;j++){var other=this.model.atoms[atom.bonds[j]];if(!opt.hydrogens&&other.element==="H")continue;if(opt.ligands_only&&!other.is_ligand)continue;var mid=atom.midpoint(other);var vmid=new THREE.Vector3(mid[0],mid[1],mid[2]);var vatom=new THREE.Vector3(atom.xyz[0],atom.xyz[1],atom.xyz[2]);if(opt.balls){vatom.lerp(vmid,.3)}geometry.vertices.push(vatom,vmid);geometry.colors.push(color,color)}}}var material=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,linewidth:this.conf.line_width});this.atomic_objects.push(new THREE.LineSegments(geometry,material));if(opt.balls){this.atomic_objects.push(make_balls(visible_atoms,colors,ball_size))}};ModelBag.prototype.add_trace=function(smoothness){var segments=this.model.extract_trace();var visible_atoms=[].concat.apply([],segments);var colors=color_by(this.conf.color_aim,visible_atoms,this.conf.colors);var k=0;var material=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,linewidth:this.conf.line_width});for(var i=0;i<segments.length;i++){var geom=make_segment_geometry(segments[i],colors,k,smoothness);k+=segments[i].length;var line=new THREE.Line(geom,material);this.atomic_objects.push(line)}};ModelBag.prototype.add_ribbon=function(){this.add_trace(8)};function Viewer(element_id){this.config={bond_line:4,map_line:1.25,map_radius:10,map_style:MAP_STYLES[0],render_style:RENDER_STYLES[0],color_aim:COLOR_AIMS[0],colors:set_colors("dark",{}),hydrogens:false,line_width:0};this.model_bags=[];this.map_bags=[];this.decor={cell_box:null,selection:null};this.nav=null;this.last_ctr=new THREE.Vector3(Infinity,0,0);this.initial_hud_text=null;this.initial_hud_bg="";this.selected_atom=null;this.active_model_bag=null;this.scene=new THREE.Scene;this.target=new THREE.Vector3;this.camera=new THREE.OrthographicCamera;this.scene.add(this.camera);this.scene.fog=new THREE.Fog(this.config.colors.bg,0,1);this.light=new THREE.AmbientLight(16777215);this.scene.add(this.light);this.controls=new Controls(this.camera,this.target);if(typeof document==="undefined")return;this.renderer=new THREE.WebGLRenderer({antialias:true});this.renderer.setClearColor(this.config.colors.bg,1);this.renderer.setPixelRatio(window.devicePixelRatio);this.resize();this.camera.zoom=this.camera.right/35;var container=document.getElementById(element_id);if(container===null){return}container.appendChild(this.renderer.domElement);if(window.Stats){this.stats=new window.Stats;container.appendChild(this.stats.dom)}window.addEventListener("resize",this.resize.bind(this));window.addEventListener("keydown",this.keydown.bind(this));window.addEventListener("contextmenu",function(e){e.preventDefault()});window.addEventListener("mousewheel",this.mousewheel.bind(this));window.addEventListener("MozMousePixelScroll",this.mousewheel.bind(this));window.addEventListener("mousedown",this.mousedown.bind(this));window.addEventListener("touchstart",this.touchstart.bind(this));window.addEventListener("touchmove",this.touchmove.bind(this));window.addEventListener("touchend",this.touchend.bind(this));window.addEventListener("touchcancel",this.touchend.bind(this));window.addEventListener("dblclick",this.dblclick.bind(this));this.controls.update();var self=this;this.mousemove=function(event){event.preventDefault();self.controls.move(relX(event),relY(event))};this.mouseup=function(event){event.preventDefault();event.stopPropagation();self.controls.stop(self.active_model_bag);document.removeEventListener("mousemove",self.mousemove);document.removeEventListener("mouseup",self.mouseup);self.redraw_maps()}}Viewer.prototype.hud=function(text,type){if(typeof document==="undefined")return;var el=document&&document.getElementById("hud");if(el){if(this.initial_hud_text===null){this.initial_hud_text=el.textContent;this.initial_hud_bg=el.style["background-color"]}el.textContent=text!==undefined?text:this.initial_hud_text;el.style["background-color"]=type!=="ERR"?this.initial_hud_bg:"#b00";if(type==="ERR")console.log("ERR: "+text)}else{console.log("hud: "+text)}};Viewer.prototype.toggle_help=function(){var el=document.getElementById("help");if(el){el.style.display=el.style.display==="block"?"none":"block"}};Viewer.prototype.redraw_center=function(){if(this.target.distanceToSquared(this.last_ctr)>1e-4){this.last_ctr.copy(this.target);if(this.mark){this.scene.remove(this.mark)}this.mark=make_center_cube(.1,this.target,this.config.colors.center);this.scene.add(this.mark)}};Viewer.prototype.redraw_maps=function(force){this.redraw_center();for(var i=0;i<this.map_bags.length;i++){var map_bag=this.map_bags[i];if(force||this.target.distanceToSquared(map_bag.block_ctr)>.01){this.redraw_map(map_bag)}}};Viewer.prototype.clear_el_objects=function(map_bag){for(var i=0;i<map_bag.el_objects.length;i++){this.scene.remove(map_bag.el_objects[i]);map_bag.el_objects[i].geometry.dispose()}map_bag.el_objects=[]};Viewer.prototype.clear_atomic_objects=function(model){if(model.atomic_objects){for(var i=0;i<model.atomic_objects.length;i++){this.scene.remove(model.atomic_objects[i])}}model.atomic_objects=null};Viewer.prototype.set_atomic_objects=function(model_bag){model_bag.atomic_objects=[];switch(model_bag.conf.render_style){case"lines":model_bag.add_bonds();break;case"lines+balls":var h_scale=this.camera.projectionMatrix.elements[5];var ball_size=Math.max(1,80*h_scale);model_bag.add_bonds(false,ball_size);break;case"trace":model_bag.add_trace();model_bag.add_bonds(true);break;case"ribbon":model_bag.add_ribbon();model_bag.add_bonds(true);break}for(var i=0;i<model_bag.atomic_objects.length;i++){this.scene.add(model_bag.atomic_objects[i])}};Viewer.prototype.toggle_map_visibility=function(map_bag){if(typeof map_bag==="number"){map_bag=this.map_bags[map_bag]}map_bag.visible=!map_bag.visible;this.redraw_map(map_bag)};Viewer.prototype.redraw_map=function(map_bag){this.clear_el_objects(map_bag);if(map_bag.visible){map_bag.map.block=null;this.add_el_objects(map_bag)}};Viewer.prototype.toggle_model_visibility=function(model_bag){model_bag=model_bag||this.active_model_bag;model_bag.visible=!model_bag.visible;this.redraw_model(model_bag)};Viewer.prototype.redraw_model=function(model_bag){this.clear_atomic_objects(model_bag);if(model_bag.visible){this.set_atomic_objects(model_bag)}};Viewer.prototype.redraw_models=function(){for(var i=0;i<this.model_bags.length;i++){this.redraw_model(this.model_bags[i])}};Viewer.prototype.add_el_objects=function(map_bag){if(!map_bag.visible)return;if(!map_bag.map.block){map_bag.block_ctr.copy(this.target);map_bag.map.extract_block(this.config.map_radius,[this.target.x,this.target.y,this.target.z])}for(var i=0;i<map_bag.types.length;i++){var mtype=map_bag.types[i];var isolevel=(mtype==="map_neg"?-1:1)*map_bag.isolevel;var iso=map_bag.map.isomesh_in_block(isolevel,this.config.map_style);var geom=new THREE.BufferGeometry;geom.addAttribute("position",new THREE.BufferAttribute(new Float32Array(iso.vertices),3));var faces=iso.faces;var arr=new Uint32Array(faces.length*2);for(var j=0;j<faces.length;j+=3){arr[2*j]=faces[j];arr[2*j+1]=faces[j+1];arr[2*j+2]=faces[j+1];arr[2*j+3]=faces[j+2];arr[2*j+4]=faces[j+2];arr[2*j+5]=faces[j]}geom.setIndex(new THREE.BufferAttribute(arr,1));var material=new THREE.LineBasicMaterial({color:this.config.colors[mtype],linewidth:this.config.map_line});var obj=new THREE.LineSegments(geom,material);map_bag.el_objects.push(obj);this.scene.add(obj)}};Viewer.prototype.change_isolevel_by=function(map_idx,delta){if(map_idx>=this.map_bags.length)return;var map_bag=this.map_bags[map_idx];map_bag.isolevel+=delta;var abs_level=map_bag.map.abs_level(map_bag.isolevel);this.hud("map "+(map_idx+1)+" level =  "+abs_level.toFixed(4)+"e/A^3 ("+map_bag.isolevel.toFixed(2)+" rmsd)");this.clear_el_objects(map_bag);this.add_el_objects(map_bag)};Viewer.prototype.change_map_radius=function(delta){var RMIN=2;var RMAX=40;var cf=this.config;cf.map_radius=Math.min(Math.max(cf.map_radius+delta,RMIN),RMAX);var info='map "radius": '+cf.map_radius;if(cf.map_radius===RMAX)info+=" (max)";else if(cf.map_radius===RMIN)info+=" (min)";this.hud(info);this.redraw_maps(true)};Viewer.prototype.toggle_cell_box=function(){if(this.decor.cell_box){this.scene.remove(this.decor.cell_box);this.decor.cell_box=null}else{var uc=null;if(this.model_bags.length>0){uc=this.model_bags[0].model.unit_cell}if(!uc&&this.map_bags.length>0){uc=this.map_bags[0].map.unit_cell}if(uc){this.decor.cell_box=make_unitcell_box(uc,this.config.colors.cell_box);this.scene.add(this.decor.cell_box)}}};Viewer.prototype.shift_clip=function(away){var eye=this.camera.position.clone().sub(this.target).setLength(1);if(!away){eye.negate()}this.target.add(eye);this.camera.position.add(eye);this.update_camera();this.redraw_maps();this.hud("clip shifted by ["+vec3_to_str(eye,2," ")+"]")};Viewer.prototype.go_to_nearest_Ca=function(){var t=this.target;if(this.active_model_bag===null)return;var a=this.active_model_bag.model.get_nearest_atom(t.x,t.y,t.z,"CA");if(a){this.hud(a.long_label());this.controls.go_to(new THREE.Vector3(a.xyz[0],a.xyz[1],a.xyz[2]),null,null,30/auto_speed);this.selected_atom=a}else{this.hud("no nearby CA")}};Viewer.prototype.redraw_all=function(){this.scene.fog.color=this.config.colors.bg;if(this.renderer)this.renderer.setClearColor(this.config.colors.bg,1);this.redraw_models();this.redraw_maps(true)};function next(elem,arr){return arr[(arr.indexOf(elem)+1)%arr.length]}function vec3_to_str(vec,n,sep){return vec.x.toFixed(n)+sep+vec.y.toFixed(n)+sep+vec.z.toFixed(n)}Viewer.prototype.keydown=function(evt){var key=evt.keyCode;switch(key){case 84:this.config.render_style=next(this.config.render_style,RENDER_STYLES);this.hud("rendering as "+this.config.render_style);this.redraw_models();break;case 67:if(evt.shiftKey){set_colors(next(this.config.colors.name,Object.keys(ColorSchemes)),this.config.colors);this.hud("color scheme: "+this.config.colors.name);this.redraw_all()}else{this.config.color_aim=next(this.config.color_aim,COLOR_AIMS);this.hud("coloring by "+this.config.color_aim);this.redraw_models()}break;case 87:this.config.map_style=next(this.config.map_style,MAP_STYLES);this.hud("map style: "+this.config.map_style);this.redraw_maps(true);break;case 107:case 61:case 187:this.change_isolevel_by(evt.shiftKey?1:0,.1);break;case 109:case 173:case 189:this.change_isolevel_by(evt.shiftKey?1:0,-.1);break;case 219:this.change_map_radius(-2);break;case 221:this.change_map_radius(2);break;case 68:case 70:this.controls.change_slab_width(key===68?-.1:+.1);this.update_camera();this.hud("clip width: "+(this.camera.far-this.camera.near).toFixed(1));break;case 77:case 78:this.camera.zoom*=key===77?1.03:1/1.03;this.update_camera();this.hud("zoom: "+this.camera.zoom.toFixed(2));break;case 80:if(evt.shiftKey){window.location.hash="#xyz="+vec3_to_str(this.target,1,",")+"&eye="+vec3_to_str(this.camera.position,1,",")+"&zoom="+this.camera.zoom.toFixed(0);this.hud("copy URL from the location bar")}else{this.go_to_nearest_Ca()}break;case 51:case 99:this.shift_clip(true);break;case 108:case 110:this.shift_clip(false);break;case 85:this.hud("toggled unit cell box");this.toggle_cell_box();break;case 73:this.hud("toggled camera movement");this.controls.toggle_state(STATE.AUTO_ROTATE,{rock:evt.shiftKey});break;case 82:if(evt.shiftKey){this.hud("redraw!");this.redraw_all()}else{this.hud("model recentered");this.recenter()}break;case 72:this.toggle_help();break;case 36:case 35:this.config.bond_line+=key===36?.2:-.2;this.config.bond_line=Math.max(this.config.bond_line,.1);this.resize();this.hud("bond width: "+this.config.line_width.toFixed(1));break;case 16:case 17:case 18:case 225:break;case 32:this.center_next_residue(evt.shiftKey);break;default:this.hud("Nothing here. Press H for help.");break}};Viewer.prototype.mousedown=function(event){event.preventDefault();event.stopPropagation();var state=STATE.NONE;if(event.button===1||event.button===0&&event.ctrlKey){state=STATE.PAN}else if(event.button===0){if(event.shiftKey){this.dblclick(event)}state=STATE.ROTATE}else if(event.button===2){if(event.ctrlKey){state=event.shiftKey?STATE.ROLL:STATE.SLAB}else{state=STATE.ZOOM}}this.controls.start(state,relX(event),relY(event));document.addEventListener("mousemove",this.mousemove);document.addEventListener("mouseup",this.mouseup)};Viewer.prototype.dblclick=function(event){if(event.button!==0)return;if(this.decor.selection){this.scene.remove(this.decor.selection);this.decor.selection=null}var mouse=new THREE.Vector2(relX(event),relY(event));var atom;if(this.active_model_bag!==null){atom=this.active_model_bag.pick_atom(get_raycaster(mouse,this.camera))}if(atom){this.hud(atom.long_label());this.set_selection(atom)}else{this.hud()}};Viewer.prototype.set_selection=function(atom){var geometry=new THREE.Geometry;geometry.vertices.push(new THREE.Vector3(atom.xyz[0],atom.xyz[1],atom.xyz[2]));var color=this.config.colors[atom.element]||this.config.colors.def;var material=new THREE.PointsMaterial({size:3,color:color});this.decor.selection=new THREE.Points(geometry,material);this.scene.add(this.decor.selection)};function touch_info(evt){var touches=evt.touches;var dx=touches[0].pageX-touches[1].pageX;var dy=touches[0].pageY-touches[1].pageY;return{pageX:(touches[0].pageX+touches[1].pageX)/2,pageY:(touches[0].pageY+touches[1].pageY)/2,dist:Math.sqrt(dx*dx+dy*dy)}}Viewer.prototype.touchstart=function(event){var touches=event.touches;if(touches.length===1){this.controls.start(STATE.ROTATE,relX(touches[0]),relY(touches[0]))}else{var info=touch_info(event);this.controls.start(STATE.PAN_ZOOM,relX(info),relY(info),info.dist)}};Viewer.prototype.touchmove=function(event){event.preventDefault();event.stopPropagation();var touches=event.touches;if(touches.length===1){this.controls.move(relX(touches[0]),relY(touches[0]))}else{var info=touch_info(event);this.controls.move(relX(info),relY(info),info.dist)}};Viewer.prototype.touchend=function(){this.controls.stop();this.redraw_maps()};Viewer.prototype.mousewheel=function(evt){evt.preventDefault();evt.stopPropagation();var delta=evt.wheelDelta?evt.wheelDelta/2e3:(evt.detail||0)/-1e3;this.change_isolevel_by(evt.shiftKey?1:0,delta)};Viewer.prototype.resize=function(){var width=window.innerWidth;var height=window.innerHeight;this.camera.left=-width;this.camera.right=width;this.camera.top=height;this.camera.bottom=-height;this.camera.updateProjectionMatrix();this.renderer.setSize(width,height);var line_width=this.config.bond_line*height/700;if(line_width!==this.config.line_width){this.config.line_width=line_width;this.redraw_models()}};function parse_fragment(){var ret={};if(typeof window==="undefined")return ret;var params=window.location.hash.substr(1).split("&");for(var i=0;i<params.length;i++){var kv=params[i].split("=");var val=kv[1];if(kv[0]==="xyz"||kv[0]==="eye"){val=val.split(",").map(Number)}else if(kv[0]==="zoom"){val=Number(val)}ret[kv[0]]=val}return ret}Viewer.prototype.recenter=function(xyz,eye,steps){var new_up=null;var ctr;if(xyz==null||eye==null){ctr=this.active_model_bag.model.get_center()}if(eye){eye=new THREE.Vector3(eye[0],eye[1],eye[2])}if(xyz==null){if(this.active_model_bag===null)return;xyz=new THREE.Vector3(ctr[0],ctr[1],ctr[2]);if(!eye){eye=xyz.clone();eye.z+=100;new_up=THREE.Object3D.DefaultUp}}else{xyz=new THREE.Vector3(xyz[0],xyz[1],xyz[2]);if(eye==null&&this.active_model_bag!==null){eye=new THREE.Vector3(ctr[0],ctr[1],ctr[2]);eye.sub(xyz).negate().setLength(100);new_up=new THREE.Vector3(0,1,0).projectOnPlane(eye);var len=new_up.length();if(len<.1){new_up.set(1,0,0).projectOnPlane(eye);len=new_up.length()}new_up.divideScalar(len);eye.add(xyz)}}this.controls.go_to(xyz,eye,new_up,steps)};Viewer.prototype.center_next_residue=function(back){if(!this.active_model_bag)return;var a=this.active_model_bag.model.next_residue(this.selected_atom,back);if(a){this.hud("-> "+a.long_label());this.controls.go_to(new THREE.Vector3(a.xyz[0],a.xyz[1],a.xyz[2]),null,null,30/auto_speed);this.selected_atom=a}};Viewer.prototype.update_camera=function(){var dxyz=this.camera.position.distanceTo(this.target);var w=.25*this.controls.slab_width()/this.camera.zoom;this.camera.near=dxyz*(1-w);this.camera.far=dxyz*(1+3*w);var h_scale=this.camera.projectionMatrix.elements[5];this.camera.updateProjectionMatrix();if(h_scale!==this.camera.projectionMatrix.elements[5]){var ball_size=Math.max(1,80*this.camera.projectionMatrix.elements[5]);for(var i=0;i<this.model_bags.length;i++){var obj=this.model_bags[i].atomic_objects;if(obj.length===2&&obj[1].material.size){obj[1].material.size=ball_size}}}};Viewer.prototype.render=function render(){if(this.controls.update()){this.update_camera()}if(!this.controls.is_going()){this.redraw_maps()}this.renderer.render(this.scene,this.camera);if(this.nav){this.nav.renderer.render(this.nav.scene,this.camera)}if(true){window.requestAnimationFrame(render.bind(this))}if(this.stats){this.stats.update()}};Viewer.prototype.set_model=function(model){var model_bag=new ModelBag(model,this.config);this.model_bags.push(model_bag);this.set_atomic_objects(model_bag);this.active_model_bag=model_bag};Viewer.prototype.add_map=function(map,is_diff_map){var map_bag=new MapBag(map,is_diff_map);this.map_bags.push(map_bag);this.add_el_objects(map_bag)};Viewer.prototype.load_file=function(url,binary,callback){var req=new XMLHttpRequest;req.open("GET",url,true);if(binary){req.responseType="arraybuffer"}else{req.overrideMimeType("text/plain")}var self=this;req.onreadystatechange=function(){if(req.readyState===4){if(req.status===200||req.status===0&&req.response!==null){try{callback(req)}catch(e){self.hud("Error: "+e.message+"\nin "+url,"ERR")}}else{self.hud("Failed to fetch "+url,"ERR")}}};req.send(null)};Viewer.prototype.load_pdb=function(url,options){options=options||{};var self=this;this.load_file(url,false,function(req){var model=new Model;model.from_pdb(req.responseText);self.set_model(model);var frag=parse_fragment();if(frag.zoom)self.camera.zoom=frag.zoom;self.recenter(options.center||frag.xyz,frag.eye,1);if(options.callback)options.callback()})};Viewer.prototype.load_map=function(url,is_diff_map,filetype,callback){if(filetype!=="ccp4"&&filetype!=="dsn6"){throw Error("Unknown map filetype.")}var self=this;this.load_file(url,true,function(req){var map=new ElMap;if(filetype==="ccp4")map.from_ccp4(req.response);else map.from_dsn6(req.response);self.add_map(map,is_diff_map);if(callback)callback()})};Viewer.prototype.load_ccp4_maps=function(url1,url2,callback){var self=this;this.load_map(url1,false,"ccp4",function(){self.load_map(url2,true,"ccp4",callback)})};Viewer.ColorSchemes=ColorSchemes;Viewer.auto_speed=auto_speed;return Viewer}();if(typeof module!=="undefined")module.exports={VERSION:UGLYMOL_VERSION,UnitCell:UnitCell,Model:Model,ElMap:ElMap,isosurface:isosurface,Viewer:Viewer};